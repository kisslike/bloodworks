#include <unordered_map>
#include <vector>
#define HAS_AUTO_GENERATED
std::unordered_map<std::string, const char*> fileMap = {
{"resources/bonuses/bullet_crazy/bullet_crazy.lua", "\n""AmmoManiac.buffId = getGlobalUniqueId()\n""\n""function AmmoManiac.spawn(bonus, pos)\n""    local duration = 6.0 * player.data.bonusDurationMultiplier\n""    player.gunSpreadMultiplier:addBuffWithId(AmmoManiac.buffId, 1.8)\n""    player.clipCountMultiplier:addBuffWithId(AmmoManiac.buffId, 4.0)\n""    player.reloadSpeedMultiplier:addBuffWithId(AmmoManiac.buffId, 2.5)\n""    player.shootSpeedMultiplier:addBuffWithId(AmmoManiac.buffId, 0.35)\n""    player.damageMultiplier:addBuffWithId(AmmoManiac.buffId, 0.75)\n""    \n""    player.clipCountMultiplier:setBuffDuration(AmmoManiac.buffId, duration)\n""    player.gunSpreadMultiplier:setBuffDuration(AmmoManiac.buffId, duration)\n""    player.reloadSpeedMultiplier:setBuffDuration(AmmoManiac.buffId, duration)\n""    player.shootSpeedMultiplier:setBuffDuration(AmmoManiac.buffId, duration)\n""    player.damageMultiplier:setBuffDuration(AmmoManiac.buffId, duration)\n""\n""    addBuffIcon(\"AmmoManiac\", AmmoManiac.basePath .. \"icon.png\")\n""    \n""    playSound({path = AmmoManiac.basePath .. \"bulletcrazy.ogg\", volume = 0.5})\n""    \n""    bonus:setActive(true)\n""end\n""\n""function AmmoManiac.onTick(bonus)\n""    if player.clipCountMultiplier:hasBuffInfo(AmmoManiac.buffId) == false then\n""        removeBuffIcon(\"AmmoManiac\")\n""        bonus:setActive(false)\n""    end\n""end\n""\n"""}, 
{"resources/bonuses/bullet_crazy/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"Ammo Maniac\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"bullet_crazy.lua\",\n""  \"scriptName\" : \"AmmoManiac\"\n""}"}, 
{"resources/bonuses/circle_fire/circle_fire.lua", "\n""function CircleFire.spawn(bonus, pos)\n""    local t = addGameObject(\"CircleFire\")\n""    t.data.position = Vec2.new(pos.x, pos.y)\n""end\n""\n""\n""function CircleFire.init(gameObject)\n""    gameObject.data.startTime = time\n""    gameObject.data.lastShootTime = 0.0\n""    gameObject.data.lastShootIndex = 0\n""    gameObject.data.i = 0\n""end\n""\n""function CircleFire.onTick(gameObject)\n""    if time - gameObject.data.startTime > 0.04 * gameObject.data.lastShootIndex + 0.04 * 0.25 * gameObject.data.i\n""    then\n""        local shift = math.floor(gameObject.data.lastShootIndex/10)*0.25\n""        \n""        local angle = math.pi * 2.0 * (gameObject.data.lastShootIndex + gameObject.data.i * 10 + shift) / 40\n""        local bullet = addCustomBullet()\n""        bullet.damage = math.floor(math.random() * 30.0 + 30)\n""        bullet.position = gameObject.data.position\n""        bullet.moveSpeed = 450.0\n""        bullet.moveAngle = angle\n""        bullet:addRenderableTextureWithSize(CircleFire.basePath .. \"bullet.png\", Vec2.new(14.0, 14.0))\n""        \n""        gameObject.data.i = gameObject.data.i + 1\n""        if gameObject.data.i == 4 then\n""            if gameObject.data.lastShootIndex % 2 == 0 then\n""                playSound({path = CircleFire.basePath .. \"laser_machinegun.ogg\", position = gameObject.data.position})\n""            end\n""            gameObject.data.i = 0\n""            gameObject.data.lastShootIndex = gameObject.data.lastShootIndex + 1\n""            \n""        end\n""        \n""        if gameObject.data.lastShootIndex >= 40 * player.data.bonusDurationMultiplier - 0.1\n""        then\n""            gameObject.toBeRemoved = true\n""        end\n""    end\n""end"}, 
{"resources/bonuses/circle_fire/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"Laser Turret\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"circle_fire.lua\",\n""  \"scriptName\" : \"CircleFire\",\n""  \"spawnChance\" : 1.5\n""}"}, 
{"resources/bonuses/double_exp/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"Double Experience\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"double_exp.lua\",\n""  \"scriptName\" : \"DoubleExp\"\n""}"}, 
{"resources/bonuses/double_exp/double_exp.lua", "DoubleExp.buffId = getGlobalUniqueId()\n""        \n""function DoubleExp.spawn(bonus, pos)\n""\n""    local duration = 25.0 * player.data.bonusDurationMultiplier\n""    \n""    player.monsterExperienceMultiplier:addBuffWithId(DoubleExp.buffId, 2.0)\n""    player.monsterExperienceMultiplier:setBuffDuration(DoubleExp.buffId, duration)\n""    \n""    addBuffIcon(\"DoubleExp\", DoubleExp.basePath .. \"icon.png\")\n""    \n""    playSound({path = DoubleExp.basePath .. \"double_exp.ogg\", volume = 1.3})\n""    bonus:setActive(true)\n""end\n""\n""function DoubleExp.onTick(bonus)\n""    if player.monsterExperienceMultiplier:hasBuffInfo(DoubleExp.buffId) == false then\n""        removeBuffIcon(\"DoubleExp\")\n""        bonus:setActive(false)\n""    end\n""end\n"""}, 
{"resources/bonuses/experience/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"Experience Boost\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"experience.lua\",\n""  \"scriptName\" : \"Experience\"\n""}"}, 
{"resources/bonuses/experience/experience.lua", "\n""function Experience.spawn(bonus, pos)\n""    player:gainExperience(math.floor(player.experienceForNextLevel / 3))\n""    playSound({path = Experience.basePath .. \"bonus.ogg\"})\n""end\n"""}, 
{"resources/bonuses/explosion/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"Explosion\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"explosion.lua\",\n""  \"scriptName\" : \"Explosion\", \n""  \"spawnChance\" : 1.5\n""}"}, 
{"resources/bonuses/explosion/explosion.lua", "\n""function Explosion.spawn(bonus, pos)\n""    addExplosion(pos, 200.0, 200.0, 250, 350)\n""    playSound({path = \"~/resources/sounds/explode.ogg\"})\n""end\n""\n"""}, 
{"resources/bonuses/extra_1000/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"1000 Points\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"extra_1000.lua\",\n""  \"scriptName\" : \"Extra1000\", \n""  \"spawnChance\" : 1.2\n""}"}, 
{"resources/bonuses/extra_1000/extra_1000.lua", "\n""function Extra1000.spawn(bonus, pos)\n""    addScore(1000)\n""    playSound({path = Extra1000.basePath .. \"score.ogg\", volume = 0.5})\n""end\n""\n""\n""\n"""}, 
{"resources/bonuses/extra_5000/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"5000 Points\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"extra_5000.lua\",\n""  \"scriptName\" : \"Extra5000\",\n""  \"spawnChance\" : 0.15\n""}"}, 
{"resources/bonuses/extra_5000/extra_5000.lua", "\n""function Extra5000.spawn(bonus, pos)\n""    addScore(5000)\n""    playSound({path = Extra5000.basePath .. \"score.ogg\", volume = 0.5})\n""end\n""\n""\n""\n"""}, 
{"resources/bonuses/faster_movement/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"Faster Movement\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"faster_movement.lua\",\n""  \"scriptName\" : \"FasterMovementBonus\"\n""}"}, 
{"resources/bonuses/faster_movement/faster_movement.lua", "FasterMovementBonus.buffId = getGlobalUniqueId()\n""\n""function FasterMovementBonus.spawn(bonus, pos)\n""    player.maxSpeed:addBuffWithId(FasterMovementBonus.buffId, 1.5)\n""    local buff = player.maxSpeed:getBuffInfo(FasterMovementBonus.buffId)\n""    if buff:getCurrentBuffAmount() >= 0.99 then\n""        buff:setBuffFadeInFadeOut(0.4, 0.5)\n""    else\n""        buff:setBuffFadeInFadeOut(0.0, 0.5)\n""    end\n""    buff:setBuffDuration(12.0 * player.data.bonusDurationMultiplier)\n""    buff:restart()\n""    playSound({path = FasterMovementBonus.basePath .. \"movement_bonus.ogg\"})\n""    \n""    addBuffIcon(\"FasterMovementBonus\", FasterMovementBonus.basePath .. \"icon.png\")\n""    \n""    bonus:setActive(true)\n""end\n""\n""function FasterMovementBonus.onTick(bonus)\n""    if player.maxSpeed:hasBuffInfo(FasterMovementBonus.buffId) == false then\n""        removeBuffIcon(\"FasterMovementBonus\")\n""        bonus:setActive(true)\n""    end\n""end\n"""}, 
{"resources/bonuses/homing/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"Homing Orb\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"homing.lua\",\n""  \"scriptName\" : \"HomingOrb\",\n""  \"spawnChance\" : 1.5\n""}"}, 
{"resources/bonuses/homing/homing.lua", "\n""HomingOrb.homingOrbId = getGlobalUniqueId()\n""HomingOrb.homingOrbIdInitial = getGlobalUniqueId()\n""\n""function HomingOrb.spawn(bonus, pos)\n""    local monster = getClosestMonsterWithIgnoreId(pos, {HomingOrb.homingOrbIdInitial})\n""    if monster ~= nil then\n""        monster:addIgnoreId(HomingOrb.homingOrbIdInitial)\n""        local bullet = addCustomBullet()\n""        bullet.damage = math.floor(math.random() * 30.0 + 30)\n""        bullet.position = Vec2.new(pos.x, pos.y)\n""        bullet.moveSpeed = 300.0\n""        bullet.moveAngle = 0\n""        bullet:setScript(HomingOrbBullet)\n""        bullet:addRenderableTextureWithSize(HomingOrb.basePath .. \"bullet.png\", Vec2.new(14.0, 14.0))\n""        bullet.data.lastHitIndex = -1\n""        bullet.radius = 15.0\n""        bullet.hasCollision = false\n""        bullet.lifeTime = 10.0\n""        \n""        bullet.moveAngle = (monster.position - pos):getAngle()\n""        bullet.penetrateCount = math.floor(6 * player.data.bonusDurationMultiplier)\n""        bullet.damage = math.floor(math.random() * 70 + 60)\n""        bullet.data.monster = monster\n""        local particle = bullet:addTrailParticle(\"PlasmaTrailParticle\", Vec2.new(0.0, 0.0), 20.0, { doNotShare = true })\n""        particle.args.color = Vec3.new(0.8, 0.7, 0.1)\n""        particle.args.initialScale = 10.0\n""        particle.args.initialAlpha = 0.4\n""        particle.args.scaleSpeed = -20\n""        particle:setTexture(HomingOrb.basePath .. \"particle.png\")\n""        \n""        playSound({path = HomingOrb.basePath .. \"plasma.ogg\"})\n""        \n""        return bullet\n""    end\n""end\n""\n""HomingOrbBullet = {}\n""\n""function HomingOrbBullet.onTick(bullet)\n""    if bullet.data.monster ~= nil then\n""        local toMonster = (bullet.data.monster.position - bullet.position)\n""        local m = 1.0 - clamp(toMonster:length() / 60)\n""        bullet.moveAngle = approachAngle(bullet.moveAngle, toMonster:getAngle(), (10 + 90 * m) * dt)\n""        if bullet.data.monster.isDead or bullet.data.monster:hasIgnoreId(HomingOrb.homingOrbId) then\n""            bullet.data.monster = getClosestMonsterWithIgnoreId(bullet.position, {HomingOrb.homingOrbIdInitial, HomingOrb.homingOrbId, bullet.id})\n""        end\n""    end\n""    return false\n""end\n""\n""function HomingOrbBullet.onHit(bullet, monster)\n""    playSound({path = HomingOrb.basePath .. \"plasma_hit.ogg\", position = bullet.position})\n""    if monster ~= nil then\n""        addExplosion(bullet.position, 60.0, 100.0, 20, 30, 0.1)\n""        monster:addIgnoreId(HomingOrb.homingOrbId)\n""        bullet.data.monster = getClosestMonsterWithIgnoreId(bullet.position, {HomingOrb.homingOrbIdInitial, HomingOrb.homingOrbId, bullet.id, monster.id})\n""    else\n""        bullet.data.monster = getClosestMonsterWithIgnoreId(bullet.position, {HomingOrb.homingOrbIdInitial, HomingOrb.homingOrbId, bullet.id})\n""    end\n""    bullet.damage = math.floor(math.random() * 70 + 60)\n""end\n""\n"""}, 
{"resources/bonuses/invincibility/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"Invincibility\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"invincibility.lua\",\n""  \"scriptName\" : \"Invincibility\", \n""  \"spawnChance\" : 1.4\n""}"}, 
{"resources/bonuses/invincibility/invincibility.lua", "function Invincibility.spawn(bonus, pos)\n""    playSound({path = Invincibility.basePath .. \"shield.ogg\", volume = 0.6})\n""    \n""    addBuffIcon(\"Invincibility\", Invincibility.basePath .. \"icon.png\")\n""    \n""    local duration = 12.0 * player.data.bonusDurationMultiplier\n""    Invincibility.data.timeToDie = time + duration\n""    if Invincibility.data.gameObject == nil then\n""        local gameObject = addGameObject(\"\")\n""        Invincibility.data.gameObject = gameObject\n""        gameObject:setLevel(RenderableLevel.player + 2)\n""        gameObject.data.renderable = gameObject:addTexture(Invincibility.basePath .. \"shield.png\", \"~/resources/default\")\n""        gameObject.data.renderable:setAlignment(RenderableAlignment.world)\n""        gameObject.data.renderable:setWorldMatrix(Mat3.fromScale(34.0, 34.0))\n""        gameObject.data.renderable:setColor(Vec4.fromColor(0x4488AAFF))\n""        Invincibility.onTick(bonus)\n""    end\n""    bonus:setActive(true)\n""end\n""\n""function Invincibility.onTick(bonus)\n""    local data = Invincibility.data\n""    local gameObject = data.gameObject\n""    data.gameObject:setPosition(player.position)\n""    \n""        \n""    local remaining = data.timeToDie - time\n""    if remaining < 2.0 then\n""        local t = remaining * 4.0\n""        t = t - math.floor(t)\n""        if t < 0.5 then\n""            gameObject.data.renderable:setColor(Vec4.fromColor(0x2288AAFF))\n""        else\n""            gameObject.data.renderable:setColor(Vec4.fromColor(0x4488AAFF))\n""        end\n""    end\n""    \n""    if remaining < 0.0 then\n""        removeBuffIcon(\"Invincibility\")\n""        gameObject.toBeRemoved = true\n""        Invincibility.data.gameObject = nil\n""        bonus:setActive(false)\n""    end\n""end\n""\n""function Invincibility.onPlayerDamaged(bonus, damage, dir, params)\n""    if damage <= 0 then\n""        return damage\n""    end\n""    playSound({path = Invincibility.basePath .. \"shield_hit.ogg\", volume = 0.6})\n""    return -1\n""end"}, 
{"resources/bonuses/level_up/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"Level Up\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"level_up.lua\",\n""  \"scriptName\" : \"LevelUp\"\n""}"}, 
{"resources/bonuses/level_up/level_up.lua", "\n""function LevelUp.spawn(bonus, pos)\n""    player:gainExperience(math.floor(player.experienceForNextLevel))\n""    playSound({path = Experience.basePath .. \"bonus.ogg\"})\n""end\n""\n""function LevelUp.variableBonusChance()\n""    if missionData.levelUpBonusChance ~= nil then\n""        return missionData.levelUpBonusChance\n""    end\n""    return 0.0\n""end"}, 
{"resources/bonuses/medikit/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"Medi-Kit\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"medikit.lua\",\n""  \"scriptName\" : \"MediKit\"\n""}"}, 
{"resources/bonuses/medikit/medikit.lua", "\n""function MediKit.spawn(bonus, pos)\n""    player:doHeal(30)\n""    playSound({path = MediKit.basePath .. \"heal.ogg\", volume = 1.5})\n""end\n""\n""\n""\n"""}, 
{"resources/bonuses/quad_damage/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"Quad Damage\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"quad_damage.lua\",\n""  \"scriptName\" : \"QuadDamage\"\n""}"}, 
{"resources/bonuses/quad_damage/quad_damage.lua", "QuadDamage.buffId = getGlobalUniqueId()\n""\n""function QuadDamage.spawn(bonus, pos)\n""    local data = QuadDamage.data\n""\n""    local duration = 8.0 * player.data.bonusDurationMultiplier\n""    \n""    player.damageMultiplier:addBuffWithId(QuadDamage.buffId, 4.0)\n""    player.damageMultiplier:setBuffDuration(QuadDamage.buffId, duration)\n""    if bonus:isActive() == false then\n""        bonus:setActive(true)\n""        data.shaderStartTime = time\n""        data.postProcess = addPostProcess(\"resources/post_process/red_shift.ps\")\n""        data.postProcess:setShaderWeight(0.0)\n""    end\n""    data.time = time\n""    playSound({path = QuadDamage.basePath .. \"metal_riff.ogg\", volume = 0.5})\n""    \n""    addBuffIcon(\"QuadDamage\", QuadDamage.basePath .. \"icon.png\")\n""end\n""\n""function QuadDamage.onTick(bonus)\n""    local data = QuadDamage.data\n""    \n""    if player.damageMultiplier:hasBuffInfo(QuadDamage.buffId) == false then\n""        removeBuffIcon(\"QuadDamage\")\n""        bonus:setActive(false)\n""        \n""        removePostProcess(data.postProcess)\n""        data.postProcess = nil\n""        return\n""    end\n""    \n""    local t = time - data.shaderStartTime\n""    local a = 1.0\n""    if t < 0.3 then\n""        a = t / 0.3\n""    end\n""    \n""    local remaining = player.damageMultiplier:getBuffRemainingTime(QuadDamage.buffId)\n""    if remaining < 1.0 then\n""        a = remaining\n""    end\n""    QuadDamage.data.postProcess:setShaderWeight(a)\n""\n""end\n"""}, 
{"resources/bonuses/reflex_boost/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"Reflex Boost\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"reflex_boost.lua\",\n""  \"scriptName\" : \"ReflexBoost\"\n""}"}, 
{"resources/bonuses/reflex_boost/reflex_boost.lua", "ReflexBoost.buffId = getGlobalUniqueId()\n""\n""function ReflexBoost.spawn(bonus, pos)\n""    local data = ReflexBoost.data\n""\n""    local duration = 5.0 * player.data.bonusDurationMultiplier\n""    \n""    local gameSpeed = getGameSpeedMultiplier()\n""    gameSpeed:addBuffWithId(ReflexBoost.buffId, 0.5)\n""    gameSpeed:setBuffDuration(ReflexBoost.buffId, duration)\n""    gameSpeed:setBuffFadeInFadeOut(ReflexBoost.buffId, 0.25, 0.25)\n""    \n""    local b = player.accelerationMultiplier\n""    b:addBuffWithId(ReflexBoost.buffId, 2.0)\n""    b:setBuffDuration(ReflexBoost.buffId, duration)\n""    b:setBuffFadeInFadeOut(ReflexBoost.buffId, 0.25, 0.25)\n""    \n""    if bonus:isActive() == false then\n""        bonus:setActive(true)\n""        data.shaderStartTime = time\n""        data.postProcess = addPostProcess(\"resources/post_process/sepia.ps\")\n""        data.postProcess:setShaderWeight(0.0)\n""    end\n""    data.time = time\n""    playSound({path = ReflexBoost.basePath .. \"clock.ogg\", volume = 2.6, uiSound = true })\n""    \n""    addBuffIcon(\"ReflexBoost\", ReflexBoost.basePath .. \"icon.png\")\n""end\n""\n""\n""function ReflexBoost.onTick(bonus)\n""    local data = ReflexBoost.data\n""    \n""    local gameSpeed = getGameSpeedMultiplier()\n""    if gameSpeed:hasBuffInfo(ReflexBoost.buffId) == false then\n""        removeBuffIcon(\"ReflexBoost\")\n""        bonus:setActive(false)\n""        \n""        removePostProcess(data.postProcess)\n""        data.postProcess = nil\n""        return\n""    end\n""    local t = time - data.shaderStartTime\n""    local a = 1.0\n""    if t < 0.25 then\n""        a = t * 4.0\n""    end\n""    \n""    local remaining = gameSpeed:getBuffRemainingTime(ReflexBoost.buffId)\n""    if remaining < 0.25 then\n""        a = remaining * 4.0\n""    end\n""    ReflexBoost.data.postProcess:setShaderWeight(a * 0.60)\n""end"}, 
{"resources/bonuses/slow_monsters/data.json", "{\n""  \"type\" : \"bonus\",\n""  \"name\": \"Slowdown Monsters\",\n""  \"iconFile\" : \"icon.png\",\n""  \"scriptFile\" : \"slow_monsters.lua\",\n""  \"scriptName\" : \"SlowMonsters\", \n""  \"spawnChance\" : 1.2\n""}"}, 
{"resources/bonuses/slow_monsters/slow_monsters.lua", "SlowMonsters.buffId = getGlobalUniqueId()\n""\n""function SlowMonsters.spawn(bonus, pos)\n""    player.globalMonsterSpeedMultiplier:addBuffWithId(SlowMonsters.buffId, 0.4)\n""    local buff = player.globalMonsterSpeedMultiplier:getBuffInfo(SlowMonsters.buffId)\n""    if buff:getCurrentBuffAmount() >= 0.99 then\n""        buff:setBuffFadeInFadeOut(0.4, 0.5)\n""    else\n""        buff:setBuffFadeInFadeOut(0.0, 0.5)\n""    end\n""    buff:setBuffDuration(8.0 * player.data.bonusDurationMultiplier)\n""    buff:restart()\n""    playSound({path = SlowMonsters.basePath .. \"slow.ogg\", volume = 0.6})\n""\n""    addBuffIcon(\"SlowMonsters\", SlowMonsters.basePath .. \"icon.png\")\n""    \n""    bonus:setActive(true)\n""end\n""\n""function SlowMonsters.onTick(bonus)\n""    if player.globalMonsterSpeedMultiplier:hasBuffInfo(SlowMonsters.buffId) == false then\n""        removeBuffIcon(\"SlowMonsters\")\n""        bonus:setActive(false)\n""    end\n""end\n"""}, 
{"resources/colliders/collider.lua", "function Collider.onLoad(template)\n""    if Colliders == nil then\n""        Colliders = {}\n""    end\n""    Colliders[template.name] = template\n""end\n""\n""function Collider.init(gameobject, params, template)\n""    local jsonTable = template.jsonTable\n""    local pos \n""    \n""    local distanceToMid = 200.0\n""    if params.distanceToMid ~= nil then\n""        distanceToMid = params.distanceToMid\n""    end\n""    local maxTry = 10\n""    while maxTry > 0 do\n""        pos = getFreePosition(150.0)\n""        if pos:length() > distanceToMid then\n""            break\n""        end\n""        maxTry = maxTry - 1\n""    end\n""    gameobject:setPosition(pos)\n""    \n""    local s = 0.3 + math.random() * 0.3\n""    gameobject:setScale(Vec2.new(s, s))\n""    gameobject:setRotation(math.random() * math.pi * 2.0)\n""    local json = template.jsonTable\n""    \n""    if json.image ~= nil then\n""        local texture = gameobject:addTexture(template.basePath .. json.image)\n""        texture:setWorldMatrix(Mat3.fromScale(json.size.x, json.size.y))\n""        texture:setColor(Vec4.fromColor(0xFF999999))\n""    elseif json.images ~= nil then\n""        local image = json.images[math.random(json.images.size) - 1]\n""        local texture = gameobject:addTexture(template.basePath .. image)\n""        texture:setWorldMatrix(Mat3.fromScale(json.size.x, json.size.y))\n""        texture:setColor(Vec4.fromColor(0xFF999999))\n""    end\n""    \n""    local colliders = json.colliders\n""    for i=0,colliders.size-1 do\n""        if colliders[i].type == \"quad\" then\n""            local shift = Vec2.new(0.0, 0.0)\n""            if colliders[i].shift ~= nil then\n""                shift = colliders[i].shift\n""            end\n""            local size = json.size\n""            if colliders[i].size ~= nil then\n""                size = colliders[i].size\n""            end\n""            local rotation = 0.0\n""            if colliders[i].rotation ~= nil then\n""                rotation = colliders[i].rotation\n""            end\n""            local radius = 0.0\n""            if colliders[i].radius ~= nil then\n""                radius = colliders[i].radius\n""            end\n""            gameobject:addRectCollider(shift, size, rotation, radius)\n""        elseif colliders[i].type == \"capsule\" then\n""            gameobject:addCapsuleCollider(colliders[i].pos1, colliders[i].pos2, colliders[i].radius)\n""        elseif colliders[i].type == \"circle\" then\n""            local shift = Vec2.new(0.0, 0.0)\n""            if colliders[i].shift ~= nil then\n""                shift = colliders[i].shift\n""            end\n""            gameobject:addCircleCollider(shift, colliders[i].radius)\n""        end\n""    end\n""end\n""\n""\n"""}, 
{"resources/colliders/collider_data.json", "{\n""    \"type\" : \"json_list\",\n""    \"elements\" : [\n""        {\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"house1\",\n""            \"chance\" : 0.7,\n""            \n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"image\" : \"house_1.png\",\n""            \"size\" : [120.0, 114.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [0.0, 15.0],\n""                    \"size\" : [85.0, 67.0]\n""                },\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [10.0, -45.0],\n""                    \"size\" : [35.0, 45.0]\n""                }\n""            ]\n""        }\n""        ,{\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"house2\",\n""            \"chance\" : 0.7,\n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"image\" : \"house_1b.png\",\n""            \"size\" : [120.0, 114.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [0.0, 15.0],\n""                    \"size\" : [85.0, 67.0]\n""                },\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [42.0, -45.0],\n""                    \"size\" : [35.0, 45.0]\n""                }\n""            ]\n""        }\n""        ,{\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"house3\",\n""            \"chance\" : 0.7,\n""            \n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"image\" : \"house_1c.png\",\n""            \"size\" : [120.0, 114.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [0.0, 15.0],\n""                    \"size\" : [85.0, 67.0]\n""                },\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [10.0, -45.0],\n""                    \"size\" : [35.0, 35.0]\n""                }\n""            ]\n""        }\n""        ,{\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"house4\",\n""            \"chance\" : 0.7,\n""            \n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"image\" : \"house_2.png\",\n""            \"size\" : [126.0, 130.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [-3.0, 27.0],\n""                    \"size\" : [150.0, 88.0]\n""                },\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [62.0, -48.0],\n""                    \"size\" : [40.0, 65.0]\n""                }\n""            ]\n""        }\n""        ,{\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"house5\",\n""            \"chance\" : 0.7,\n""            \n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"image\" : \"house_2b.png\",\n""            \"size\" : [126.0, 130.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [-3.0, 27.0],\n""                    \"size\" : [150.0, 88.0]\n""                },\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [65.0, -50.0],\n""                    \"size\" : [40.0, 65.0]\n""                }\n""            ]\n""        }\n""        \n""        ,{\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"ruin1\",\n""            \n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"image\" : \"ruin_1.png\",\n""            \"size\" : [94.0, 76.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"capsule\",\n""                    \"pos1\" : [-40.0, 2.0],\n""                    \"pos2\" : [40.0, 2.0],\n""                    \"radius\" : 28.0\n""                }\n""            ]\n""        }\n""        ,{\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"ruin2\",\n""            \n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"image\" : \"ruin_2.png\",\n""            \"size\" : [142.0, 100.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [5.0, -13.0],\n""                    \"size\" : [105.0, 65.0]\n""                }\n""            ]\n""        }\n""        \n""        ,{\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"ruin3\",\n""            \n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"image\" : \"ruin_3.png\",\n""            \"size\" : [136.0, 92.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [14.0, -8.0],\n""                    \"size\" : [93.0, 55.0]\n""                }\n""            ]\n""        }\n""        \n""        ,{\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"ruin4\",\n""            \n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"image\" : \"ruin_4.png\",\n""            \"size\" : [66.0, 88.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [10.0, -5.0],\n""                    \"size\" : [40.0, 65.0]\n""                }\n""            ]\n""        }\n""        \n""        ,{\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"ruin5\",\n""            \n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"image\" : \"ruin_5.png\",\n""            \"size\" : [102.0, 74.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [1.0, 3.0],\n""                    \"size\" : [77.0, 50.0]\n""                }\n""            ]\n""        }\n""        \n""        ,{\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"ruin6\",\n""            \n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"image\" : \"ruin_6.png\",\n""            \"size\" : [87.0, 114.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [0.0, 30.0],\n""                    \"size\" : [45.0, 40.0]\n""                },\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [20.0, -30.0],\n""                    \"size\" : [20.0, 40.0]\n""                }\n""            ]\n""        }\n""        \n""        ,{\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"bunker1\",\n""            \n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"images\" : [\"bunker1.png\", \"bunker2.png\"],\n""            \"size\" : [92.0, 92.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [0.0, 0.0],\n""                    \"size\" : [40.0, 40.0],\n""                    \"radius\" : 10.0\n""                }\n""            ]\n""        }\n""        \n""        ,{\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"bunker2\",\n""            \n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"images\" : [\"bunker3.png\", \"bunker4.png\", \"bunker5.png\", \"bunker6.png\", \"bunker7.png\"],\n""            \"size\" : [90.0, 160.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"quad\",\n""                    \"shift\" : [0.0, 0.0],\n""                    \"size\" : [50.0, 115.0],\n""                    \"radius\" : 10.0\n""                }\n""            ]\n""        }\n""        ,{\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"bunker3\",\n""            \n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"images\" : [\"bunker8.png\", \"bunker9.png\", \"bunker10.png\", \"bunker11.png\"],\n""            \"size\" : [100.0, 230.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"capsule\",\n""                    \"pos1\" : [0.0, -130.0],\n""                    \"pos2\" : [0.0, 130.0],\n""                    \"radius\" : 50.0\n""                }\n""            ]\n""        }\n""        \n""        ,{\n""            \"type\" : \"game_object_template\",\n""            \"name\" : \"bunker4\",\n""            \n""            \"scriptFile\" : \"collider.lua\",\n""            \"scriptName\" : \"Collider\",\n""            \n""            \"images\" : [\n""                \"bunker12.png\",\n""                \"bunker13.png\",\n""                \"bunker14.png\",\n""                \"bunker15.png\",\n""                \"bunker16.png\",\n""                \"bunker17.png\",\n""                \"bunker18.png\",\n""                \"bunker19.png\",\n""                \"bunker20.png\",\n""                \"bunker21.png\",\n""                \"bunker22.png\",\n""                \"bunker23.png\",\n""                \"bunker24.png\",\n""                \"bunker25.png\"\n""            ],\n""            \"size\" : [100.0, 100.0],\n""            \n""            \"colliders\" : [\n""                {\n""                    \"type\" : \"circle\",\n""                    \"radius\" : 50.0\n""                }\n""            ]\n""        }\n""    ]\n""}"}, 
{"resources/guns/bumerang_gun/bumerang_gun.lua", "\n""function BumerangGun.init(gun)\n""    gun.spreadAngle = 0.0\n""    gun.crosshairDistance = 750.0\n""    ShootTimer.initGun(gun, 0.8)\n""    gun.data.maxSpread = 0.25\n""    gun.data.spreadDecreaseStartTime = 0.35\n""    gun.data.spreadDecreaseSpeed = 0.80\n""    gun.data.spreadIncreasePerShoot = 0.03\n""    \n""    gun.data.lastShootTimeForDouble = time\n""end\n""\n""\n""function BumerangGun.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        local gunReady = ShootTimer.checkGun(gun)\n""        if time - gun.data.lastShootTimeForDouble > 0.15 or gunReady then\n""            if gunReady then\n""                gun.data.lastShootTimeForDouble = time\n""            else\n""                gun.data.lastShootTimeForDouble = time + 100\n""            end\n""            gun:consumeAmmo()\n""            local bullet = gun:addBullet()\n""            \n""            local distance = math.max(250, player.crosshairDistance)\n""            distance = math.min(550, distance)\n""            bullet.data.movePos = player.position + player.aimDir * distance\n""            bullet.data.startTime = time\n""            bullet.data.startPos = bullet.position:copy()\n""            bullet.data.startAngle = player.aimAngle\n""            bullet.data.sideDir = player.aimDir * 100.0\n""            bullet.data.sideDir:rotateBy(math.pi * 0.5)\n""            bullet.meshRotation = 0.0\n""            bullet.data.speedMult = -clamp(distance / 250) * 0.3 + 1.2\n""            bullet.penetrateCount = 2\n""        end\n""    end\n""end\n""\n""function BumerangGun.onBulletTick(gun, bullet)\n""    local movePos = bullet.data.movePos\n""    local dur = 1.0 * bullet.data.speedMult\n""    local timeDiff = (time - bullet.data.startTime) * dur\n""    \n""    if bullet.data.returns then\n""        movePos = lerp(movePos, player.position, timeDiff)\n""        bullet.data.startAngle = (player.position - bullet.data.startPos) : getAngle()\n""    end\n""\n""    \n""    local center = (bullet.data.startPos + movePos) * 0.5\n""    local d = bullet.data.startPos:distance(movePos) * 0.5\n""    local angle = (-0.5 - timeDiff) * math.pi\n""    local shift = Vec2:new(math.sin(angle) * d, math.cos(angle) * d * 0.3)\n""    shift:rotateBy(-bullet.data.startAngle)\n""    bullet:setPosition(center + shift)\n""\n""    bullet.meshRotation = bullet.meshRotation + dt * 10\n""    if timeDiff > 1.0 then\n""        if  bullet.data.returns == nil then\n""            bullet.data.startPos = bullet.data.movePos\n""            bullet.data.movePos = player.position\n""            bullet.data.startTime = time\n""            bullet.data.startAngle = (player.position - bullet.data.startPos) : getAngle()\n""            bullet.data.returns = true\n""        else\n""            bullet:removeSelf()\n""        end\n""    end\n""end\n"""}, 
{"resources/guns/bumerang_gun/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Bumerang\",\n""  \"icon\" : \"bullet.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [10.0, 10.0],\n""  \"bulletMeshShift\" : [0.0, 0.0],\n""  \"bulletRadius\" : 10.0,\n""  \"bulletSpeed\" : 0.0,\n""  \"bulletDamage\" : [65, 150],\n""  \n""  \"maxAmmo\" : 8,\n""  \"reloadTime\" : 2.0,\n""  \n""  \"showShootAnimation\" : false,\n""  \n""  \"firingSound\" : {\n""    \"path\" : \"throw.ogg\",\n""    \"volume\" : 0.70\n""  },\n""  \n""  \"scriptFile\" : \"bumerang_gun.lua\",\n""  \"scriptName\" : \"BumerangGun\"\n""}"}, 
{"resources/guns/flamethrower/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Flamethrower\",\n""  \"icon\" : \"icon.png\",\n""  \n""  \"bulletRadius\" : 10.0,\n""  \"bulletSpeed\" : 300.0,\n""  \"bulletDamage\" : [10, 16],\n""  \"hideSpread\" : true,\n""  \n""  \"maxAmmo\" : 100,\n""  \"reloadTime\" : 2.4,\n""  \"bulletLifeTime\" : 0.60,\n""  \n""  \"firingSoundContinuous\" : true,\n""  \"firingSound\" : \"flame.ogg\",\n""  \"firingSoundFadein\" : 0.1,\n""  \"firingSoundFadeout\" : 0.6,\n""  \n""  \"scriptFile\" : \"flamethrower.lua\",\n""  \"scriptName\" : \"Flamethrower\"\n""}"}, 
{"resources/guns/flamethrower/flamethrower.lua", "FlamethrowerObject = {}\n""\n""function Flamethrower.init(gun)\n""    ShootTimer.initGun(gun, 0.05)\n""    gun.data.gameObject = addGameObject(\"FlamethrowerObject\")\n""    gun.data.particle = gun.data.gameObject:addParticle(\"FlameParticle\", {})\n""    gun.data.particleTime = 0.0\n""    \n""    gun.data.checkAchievement = true\n""    gun.data.achievementProcess = 0\n""    \n""end\n""\n""function Flamethrower.onTick(gun)\n""    local data = gun.data\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            local bullet = gun:addBullet()\n""            local playerSpeed = player.moveVelocity\n""            local bulletSpeed = Vec2.fromAngle(bullet.moveAngle) * bullet.moveSpeed\n""            local totalSpeed = playerSpeed + bulletSpeed\n""            bullet.moveSpeed = totalSpeed:length()\n""            bullet.moveAngle = totalSpeed:getAngle()\n""            bullet.onDamageArgs.noSlowdown = true\n""            bullet.penetrateCount = -1\n""        end\n""        \n""        local bulletSpeed =  gun.bulletSpeed * player.bulletSpeedMultiplier:getBuffedValue()\n""        local totalSpeed = player.moveVelocity + player.aimDir * bulletSpeed\n""        local speed = totalSpeed:normalize()\n""        local range = speed * gun.bulletLifeTime\n""        \n""        local collision = getCollisionForRay(player.gunPos - totalSpeed * 20.0, totalSpeed * (range + 20.0), 0.0)\n""        collision = collision - 40.0\n""        \n""        data.particleTime = data.particleTime - dt\n""        \n""        while data.particleTime < 0.0 do\n""            data.particleTime = data.particleTime + 0.002\n""            data.particle:addParticle(player.gunPos, {moveSpeed = (player.aimDir * bulletSpeed ) + player.moveVelocity, lifeTime = collision * 0.6/ range})\n""        end\n""        gun.playFiringSound = true\n""    else\n""        gun.playFiringSound = false\n""    end\n""    \n""    if data.checkAchievement then\n""        if hasAchievement( \"ACH_FLAME_THROWER\" ) or player.isDead or missionData.isSurvival ~= true then\n""            data.checkAchievement = false\n""            return\n""        end\n""        if data.achievementProcess >= 20 then\n""            addAchievement( \"ACH_FLAME_THROWER\" )\n""            data.checkAchievement = false\n""        end\n""    end\n""end\n""\n""function Flamethrower.onBulletHit(gun, bullet, monster)\n""    local data = gun.data\n""    if monster ~= nil then\n""        if monster.data.flamethrowerObject == nil then\n""            monster.data.flamethrowerObject = addGameObject(\"BurnMonsterObject\")\n""            monster.data.flamethrowerObject.data.monster = monster\n""            monster.data.flamethrowerObject.data.damageMin = 2\n""            monster.data.flamethrowerObject.data.damageVar = 3\n""        end\n""        monster.data.flamethrowerObject.data.count = 4\n""        \n""        if data.checkAchievement and monster.data.flamethrowerAchievementGun == nil then\n""            monster.data.flamethrowerAchievementGun = gun\n""            addCustomOnTick(monster, function (monster)\n""                local gun = monster.data.flamethrowerAchievementGun\n""                if monster.data.flamethrowerAchievementSet == true then\n""                    if monster.data.flamethrowerObject == nil then\n""                        monster.data.flamethrowerAchievementSet = false\n""                        gun.data.achievementProcess = gun.data.achievementProcess - 1\n""                    end\n""                else\n""                    if monster.data.flamethrowerObject ~= nil then\n""                        monster.data.flamethrowerAchievementSet = true\n""                        gun.data.achievementProcess = gun.data.achievementProcess + 1\n""                    end\n""                end\n""            end)\n""            \n""            addCustomOnKill(monster, function (monster)\n""                local gun = monster.data.flamethrowerAchievementGun\n""                if monster.data.flamethrowerAchievementSet == true then\n""                    monster.data.flamethrowerAchievementSet = false\n""                    gun.data.achievementProcess = gun.data.achievementProcess - 1\n""                end\n""            end)\n""        end\n""    end\n""end\n""\n"""}, 
{"resources/guns/flaregun/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Flare Gun\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [5.0, 3.0],\n""  \"bulletMeshShift\" : [-5.0, 0.0],\n""  \"bulletRadius\" : 6.0,\n""  \"bulletSpeed\" : 320.0,\n""  \"bulletDamage\" : [65, 85],\n""  \n""  \"maxAmmo\" : 10,\n""  \"reloadTime\" : 0.4,\n""  \n""  \"firingSound\" : {\n""    \"path\" : \"flare.ogg\",\n""    \"volume\" : 3.75\n""  },\n""  \n""  \"scriptFile\" : \"flaregun.lua\",\n""  \"scriptName\" : \"FlareGun\"\n""}"}, 
{"resources/guns/flaregun/flaregun.lua", "\n""function FlareGun.init(gun)\n""    gun.spreadAngle = 0.0\n""    gun.crosshairDistance = 350.0\n""    ShootTimer.initGun(gun, 0.7)\n""end\n""\n""\n""function FlareGun.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            local bullet = gun:addBullet()\n""            bullet:addTrailParticle(\"FlareTrailParticle\", Vec2.new(0.0, -8.0), 4.0, {})\n""            bullet.data.randAngle = 0.0\n""            bullet.data.randShift = 0.0\n""            bullet.data.totalShift = 0.0\n""        end\n""    end\n""end\n""\n""function FlareGun.onBulletHit(gun, bullet, monster)\n""\n""    addExplosion(bullet.position, 50.0, 100.0, 0, 0, 0.05, false, FlareGun.onExplisionHit )\n""        \n""    if monster ~= nil then\n""        FlareGun.burnMonster( monster )\n""    end\n""end\n""\n""function FlareGun.onBulletTick(gun, bullet)\n""    local data = bullet.data\n""    if data.randShift > 1.0 then\n""        data.randShift = data.randShift - dt\n""        data.randAngle = data.randAngle + dt * 0.5\n""    elseif data.randShift < -1.0 then\n""        data.randShift = data.randShift + dt\n""        data.randAngle = data.randAngle - dt * 0.5\n""    else\n""        data.randShift = math.random() * 0.1 + 1.0\n""        \n""        if data.totalShift > 0.002 or (data.totalShift > -0.002 and math.random() < 0.5) then\n""            data.randShift = -data.randShift\n""        end\n""    end\n""    data.totalShift = data.totalShift + data.randAngle * dt\n""    local v = Vec2.fromAngle(bullet.moveAngle + math.pi * 0.5) * (1000.0 * data.randAngle * dt)\n""    bullet.position = bullet.position + v\n""end\n""\n""\n""function FlareGun.burnMonster(monster)\n""    if monster.data.flamethrowerObject == nil then\n""        monster.data.flamethrowerObject = addGameObject(\"BurnMonsterObject\")\n""        monster.data.flamethrowerObject.data.monster = monster\n""        monster.data.flamethrowerObject.data.damageMin = 6\n""        monster.data.flamethrowerObject.data.damageVar = 6\n""    end\n""    monster.data.flamethrowerObject.data.count = 9\n""end\n""\n""function FlareGun.onExplisionHit(monster)\n""    FlareGun.burnMonster(monster)\n""end\n"""}, 
{"resources/guns/frost_laser/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Frost Laser\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"laser.png\",\n""  \"bulletSize\" : [15.0, 15.0],\n""  \"bulletRadius\" : 4.0,\n""  \"bulletSpeed\" : 350.0,\n""  \"bulletDamage\" : [12, 16],\n""  \n""  \"scriptFile\" : \"frost_laser.lua\",\n""  \"scriptName\" : \"FrostLaser\",\n""  \n""  \"maxAmmo\" : 40,\n""  \"reloadTime\" : 1.5,\n""  \n""  \"showShootAnimation\" : false,\n""  \n""  \"firingSoundContinuous\" : true,\n""  \"firingSound\" : {\n""    \"path\" : \"laser.ogg\",\n""    \"volume\" : 0.35\n""  },\n""  \n""  \"isLaser\" : true,\n""  \"laserTexture\" : \"laser.png\",\n""  \"laserShader\" : \"laser\",\n""  \n""  \"laserThickness\" : 80.0,\n""  \n""  \"laserBeginShift\" : 15.0,\n""  \"laserBeginWidth\" : 40.0,\n""  \n""  \"laserEndShift\" : 0.0,\n""  \"laserEndWidth\" : 40.0\n""  \n""}"}, 
{"resources/guns/frost_laser/frost_laser.lua", "FrostLaser.buffId = getGlobalUniqueId()\n""\n""function FrostLaser.init(gun)\n""    gun.spreadAngle = 0.0\n""    gun.crosshairDistance = 550.0\n""    gun.data.maxRangeUniform = gun.laser:addUniformFloat(\"maxRange\", 350.0)\n""    gun.data.timeUniform = gun.laser:addUniformFloat(\"time\", 0.0)\n""    ShootTimer.initGun(gun, 0.1)\n""    \n""    gun.data.checkAchievement = true\n""    gun.data.achievementProcess = 0\n""end\n""\n""function FrostLaser.checkBuff(monster)\n""    if monster.moveSpeedMultiplier:hasBuffInfo(FrostLaser.buffId) == false then\n""        monster.moveSpeedMultiplier:addBuffWithId(FrostLaser.buffId, 1.0)\n""        local buff = monster.moveSpeedMultiplier:getBuffInfo(FrostLaser.buffId)\n""        buff:setBuffDuration(1.8)\n""        buff:setBuffFadeInFadeOut(-1.0, 0.3)\n""    end\n""\n""    if monster.colorMultiplier:hasBuffInfo(FrostLaser.buffId) == false then\n""        monster.colorMultiplier:addBuffWithId(FrostLaser.buffId, Vec4:new(1.0, 1.0, 1.0, 1.0))\n""        local colorbuff = monster.colorMultiplier:getBuffInfo(FrostLaser.buffId)\n""        colorbuff:setBuffDuration(1.8)\n""        colorbuff:setBuffFadeInFadeOut(-1.0, 0.3)\n""    end\n""end\n""\n""\n""function FrostLaser.onTick(gun)\n""    gun.laser:setVisible(false)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        gun.laser:setVisible(true)\n""        local range = 350.0\n""        local result = getClosestMonsterOnLine(player.gunPos, player.aimDir * range,  0.0, {gun = gun, ignoreFlags = CollisionFlags.NoBulletCollision})\n""        range = result.distance\n""\n""        gun.laser:setLength(range)\n""        gun.laser:addUniformFloat(\"time\", time)\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            local monster = result.monster\n""            if monster ~= nil then\n""                local args = {doNotStun = true}\n""                monster:doDamageWithArgs(gun:getRandomDamage(), player.aimDir, args)\n""                \n""                \n""                FrostLaser.checkBuff(monster)\n""                local buff = monster.moveSpeedMultiplier:getBuffInfo(FrostLaser.buffId)\n""                local colorbuff = monster.colorMultiplier:getBuffInfo(FrostLaser.buffId)\n""              \n""                local amount = buff:getCurrentBuffAmount()\n""                amount = amount * 0.70\n""                \n""                if amount < 0.2 and monster.data.iceBlock == nil and monster.isDead == false then\n""                    monster.data.iceBlock = addGameObject(\"IceBlock\", { monster = monster, gun = gun })\n""                end\n""                \n""                amount = math.max(amount, 0.2)\n""                \n""                buff:setBuffAmount(amount)\n""                buff:restart()\n""                \n""                amount = 1.0 - amount\n""                colorbuff:setBuffAmount(Vec4:new(1.0 - amount, 1.0 - amount * 0.8, 1.0 - amount * 0.2, 1.0))\n""                colorbuff:restart()\n""            end\n""        end\n""    end\n""end\n""\n""IceBlock = {}\n""\n""function IceBlock.init(gameObject, args)\n""\n""    gameObject.data.renderable = gameObject:addTexture(FrostLaser.basePath .. \"block.png\", \"~/resources/default\")\n""    local s =  args.monster.collisionRadius * 1.2 + 15.0\n""    \n""    gameObject.data.renderable:setWorldMatrix(Mat3.fromScale(s, s))\n""    gameObject:setPosition(args.monster.position)\n""    gameObject:setRotation(math.pi * 2.0 * math.random() )\n""    \n""    gameObject.data.monster = args.monster\n""    gameObject.data.gun = args.gun\n""    gameObject.data.time = time\n""    \n""    gameObject.data.resetCollision = args.monster.hasCollision\n""    args.monster.hasCollision = false\n""    \n""    gameObject.data.colliderSize = s - 10.0\n""    gameObject.data.collider = gameObject:addCircleCollider( Vec2.new(0.0, 0.0), 0.0, CollisionFlags.NoBulletCollision)\n""    \n""    gameObject:setLevel(args.monster:getDrawLevel() + 5)\n""    \n""    gameObject.data.rotateSpeed = args.monster.data.maxRotateSpeed\n""    args.monster.data.maxRotateSpeed = 0.0\n""    \n""    gameObject.data.animationSpeed = args.monster.animationSpeed\n""    args.monster.animationSpeed = 0.0\n""    \n""    if args.monster.data.hasIceBlockOnKill == nil then\n""        args.monster.data.hasIceBlockOnKill = true\n""        addCustomOnKill(args.monster, function (monster)\n""            if monster.data.iceBlock ~= nil then\n""                monster.data.iceBlock.data.monster = nil\n""            end\n""        end)\n""    end\n""end\n""\n""function IceBlock.onTick(gameObject)\n""    local data = gameObject.data\n""    \n""    if data.monster ~= nil then\n""\n""        FrostLaser.checkBuff(data.monster)\n""        \n""        local buff = data.monster.moveSpeedMultiplier:getBuffInfo(FrostLaser.buffId)\n""        local colorbuff = data.monster.colorMultiplier:getBuffInfo(FrostLaser.buffId)\n""        \n""        buff:setBuffAmount(0.0)\n""        buff:restart()\n""    \n""        local amount = 0.8\n""        colorbuff:setBuffAmount(Vec4:new(1.0 - amount, 1.0 - amount * 0.8, 1.0 - amount * 0.2, 1.0))\n""        colorbuff:restart()\n""    end\n""    \n""    local t = time - data.time\n""    if t < 0.15 then\n""        data.renderable:setColor(Vec4.new(1.0, 1.0, 1.0, t / 0.15))\n""        relocateCircleCollider(gameObject.data.collider, gameObject:getPosition(), gameObject.data.colliderSize * t / 0.15)\n""    elseif t > 1.85 then\n""        data.renderable:setColor(Vec4.new(1.0, 1.0, 1.0, (2.0 - t) / 0.15))\n""    else\n""        data.renderable:setColor(Vec4.new(1.0, 1.0, 1.0, 1.0))\n""        relocateCircleCollider(gameObject.data.collider, gameObject:getPosition(), gameObject.data.colliderSize)\n""    end\n""    \n""    if t > 2.0 then\n""        gameObject.toBeRemoved = true\n""        if data.monster ~= nil then\n""            data.monster.data.iceBlock = nil\n""             \n""            local buff = data.monster.moveSpeedMultiplier:getBuffInfo(FrostLaser.buffId)\n""            local colorbuff = data.monster.colorMultiplier:getBuffInfo(FrostLaser.buffId)\n""            \n""            buff:setBuffAmount(1.0)\n""            buff:restart()\n""        \n""            colorbuff:setBuffAmount(Vec4:new(1.0, 1.0, 1.0, 1.0))\n""            colorbuff:restart()\n""            \n""            data.monster:doDamage(math.floor(30+20*math.random()), -data.monster.moveDir) \n""            \n""            data.monster.hasCollision = data.resetCollision\n""    \n""            data.monster.data.maxRotateSpeed =  data.rotateSpeed\n""            data.monster.animationSpeed =  data.animationSpeed\n""            \n""            local gun = data.gun\n""            \n""        \n""            if gun.data.checkAchievement then\n""                if hasAchievement( \"ACH_FROST_LASER\" ) or player.isDead or missionData.isSurvival ~= true then\n""                    data.checkAchievement = false\n""                elseif data.monster.isDead then\n""                    gun.data.achievementProcess = gun.data.achievementProcess + 1\n""                    if gun.data.achievementProcess >= 40 then\n""                        addAchievement( \"ACH_FROST_LASER\" ) \n""                    end\n""                end\n""           end\n""         end\n""    end\n""end\n""\n"""}, 
{"resources/guns/helpers.lua", "ShootTimer = {}\n""\n""function ShootTimer.initGun(gun, interval)\n""    gun.data.shootInterval = interval\n""    gun.data.timeToNextShoot = 0.0\n""end\n""\n""function ShootTimer.IsGunReady(gun)\n""    return gun.data.timeToNextShoot < time and dt > 0.0\n""end\n""\n""function ShootTimer.GunShot(gun)\n""    if gun.showShootAnimation then\n""        player:playShootAnimation()\n""    end\n""    gun.data.timeToNextShoot = time + gun.data.shootInterval * player.shootSpeedMultiplier:getBuffedValue()\n""end\n""\n""\n""function ShootTimer.checkGun(gun)\n""    if gun.data.timeToNextShoot < time and dt > 0.0 then\n""        ShootTimer.GunShot(gun)\n""        return true\n""    end\n""    return false\n""end\n""\n""\n""SpreadHelper = {}\n""\n""function SpreadHelper.initGun(gun)\n""    gun.data.timeToNextShoot = time\n""    gun.spreadAngle = 0.0\n""    gun.data.minSpread = 0.0\n""    gun.data.maxSpread = 0.15\n""    gun.data.spreadDecreaseStartTime = 0.1\n""    gun.data.spreadDecreaseSpeed = 0.15\n""    gun.data.spreadIncreasePerShoot = 0.025\n""end\n""\n""function SpreadHelper.onTick(gun)\n""    local data = gun.data\n""    if data.timeToNextShoot < time - data.spreadDecreaseStartTime then\n""        gun.spreadAngle = gun.spreadAngle - dt * data.spreadDecreaseSpeed\n""    end\n""    \n""    if gun.spreadAngle < data.minSpread then\n""        gun.spreadAngle = data.minSpread\n""    end\n""end\n""\n""\n""\n""function SpreadHelper.onShoot(gun)\n""    local data = gun.data\n""    gun.spreadAngle = gun.spreadAngle + data.spreadIncreasePerShoot\n""    if gun.spreadAngle > gun.data.maxSpread then\n""        gun.spreadAngle = gun.data.maxSpread\n""    end\n""end\n""\n""BurnMonsterObject = {}\n""\n""function BurnMonsterObject.init(gameobject)\n""    gameobject.data.time = 0.3\n""    gameobject.data.particletime = 0.01\n""end\n""\n""function BurnMonsterObject.onTick(gameobject)\n""    local data = gameobject.data\n""\n""    data.time = data.time - dt\n""    if data.time < 0.0 then\n""        data.time = data.time + 0.3\n""        data.monster:doDamageWithArgs(math.floor(math.random() * data.damageVar + data.damageMin), Vec2.new(0.0, 0.0), {noSlowdown = true})\n""        data.count = data.count - 1\n""        if data.count <= 0 then\n""            gameobject.toBeRemoved = true\n""            data.monster.data.flamethrowerObject = nil\n""        end\n""    end\n""\n""    \n""    if data.monster.isDead then\n""        gameobject.toBeRemoved = true\n""    else\n""\n""        if data.monster.data.burnParticle == nil then\n""            data.monster.data.burnParticle = data.monster:addParticleSpawner(\"FlameParticle\", {})\n""        end\n""        \n""        gameobject.data.particletime = gameobject.data.particletime - dt\n""        while gameobject.data.particletime < 0.0 do\n""            gameobject.data.particletime = gameobject.data.particletime + 0.01\n""            local t = 0.0\n""            \n""            while t < data.monster.bulletRadius do\n""                local speed = Vec2.randDir() * (math.random() * 3.0 + 3.0)\n""                local pos = Vec2.randDir()\n""                local r = math.random()\n""                r = r * r\n""                pos = pos * (data.monster.bulletRadius * r) \n""                \n""                data.monster.data.burnParticle:addParticle(data.monster.position + pos, {moveSpeed = data.monster.moveVelocity + speed})\n""                t = t + 15\n""            end\n""        end\n""    end\n""    \n""end\n""\n""\n""function ultimateSpawnChance()\n""    if player.ultimate == nil and player.gun ~= nil and player.gun.name ~= \"Pistol\" then\n""        return 4.0\n""    end\n""    return 1.0\n""end\n"""}, 
{"resources/guns/laser/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Laser\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"laser.png\",\n""  \"bulletSize\" : [15.0, 15.0],\n""  \"bulletRadius\" : 4.0,\n""  \"bulletSpeed\" : 500.0,\n""  \"bulletDamage\" : [35, 40],\n""  \n""  \"scriptFile\" : \"laser.lua\",\n""  \"scriptName\" : \"LaserGun\",\n""  \n""  \"maxAmmo\" : 40,\n""  \"reloadTime\" : 1.5,\n""  \n""  \"firingSoundContinuous\" : true,\n""  \"firingSound\" : {\n""    \"path\" : \"laser.ogg\",\n""    \"volume\" : 0.55\n""  },\n""  \n""  \"showShootAnimation\" : false,\n""  \n""  \"isLaser\" : true,\n""  \"laserTexture\" : \"laser.png\",\n""  \"laserShader\" : \"laser\",\n""  \n""  \"laserThickness\" : 20.0,\n""  \n""  \"laserBeginShift\" : 0.0,\n""  \"laserBeginWidth\" : 10.0,\n""  \n""  \"laserEndShift\" : 0.0,\n""  \"laserEndWidth\" : 40.0\n""  \n""}"}, 
{"resources/guns/laser/laser.lua", "\n""function LaserGun.init(gun)\n""    gun.spreadAngle = 0.0\n""    gun.crosshairDistance = 550.0\n""    gun.data.maxRangeUniform = gun.laser:addUniformFloat(\"maxRange\", 500.0)\n""    ShootTimer.initGun(gun, 0.1)\n""end\n""\n""\n""function LaserGun.onTick(gun)\n""    gun.laser:setVisible(false)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        gun.laser:setVisible(true)\n""        local range = 500.0\n""        local result = getClosestMonsterOnLine(player.gunPos, player.aimDir * range, 0.0, {gun = gun, ignoreFlags = CollisionFlags.NoBulletCollision})\n""        range = result.distance\n""\n""        gun.laser:setLength(range)\n""        \n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            if result.monster ~= nil then\n""                local args = {doNotStun = true}\n""                result.monster:doDamageWithArgs(gun:getRandomDamage(), player.aimDir, args)\n""            end\n""        end\n""    end\n""end\n"""}, 
{"resources/guns/laser_machinegun/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Laser Machine Gun\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [10.0, 10.0],\n""  \"bulletRadius\" : 4.0,\n""  \"bulletSpeed\" : 450.0,\n""  \"bulletDamage\" : [35, 50],\n""  \n""  \"maxAmmo\" : 28,\n""  \"reloadTime\" : 2.5,\n""  \n""  \"firingSound\" : {\n""    \"path\" : \"laser_machinegun.ogg\",\n""    \"volume\" : 2.55\n""  },\n""  \n""  \"shootParticleColor\" : [0.0, 0.6, 0.8],\n""  \n""  \"scriptFile\" : \"laser_machine.lua\",\n""  \"scriptName\" : \"LaserMachineGun\"\n""}"}, 
{"resources/guns/laser_machinegun/laser_machine.lua", "\n""function LaserMachineGun.init(gun)\n""    gun.crosshairDistance = 350.0\n""    \n""    ShootTimer.initGun(gun, 0.17)\n""    SpreadHelper.initGun(gun)\n""    gun.data.minSpread = 0.05\n""    gun.data.maxSpread = 0.15\n""    gun.data.spreadIncreasePerShoot = 0.01\n""end\n""\n""\n""function LaserMachineGun.onTick(gun)\n""    SpreadHelper.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            SpreadHelper.onShoot(gun)\n""            local bullet = gun:addBullet()\n""            \n""            bullet.onDamageArgs.slowdownOnly = true\n""        end\n""    end\n""end\n"""}, 
{"resources/guns/laser_pistol/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Laser Pistol\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [15.0, 15.0],\n""  \"bulletRadius\" : 4.0,\n""  \"bulletSpeed\" : 350.0,\n""  \"bulletDamage\" : [55, 80],\n""  \n""  \"maxAmmo\" : 12,\n""  \"reloadTime\" : 2.0,\n""  \n""  \"firingSound\" : {\n""    \"path\" : \"laser_pistol.ogg\",\n""    \"volume\" : 0.85\n""  },\n""  \n""  \"shootParticleColor\" : [0.8, 0.8, 0.3],\n""  \n""  \"scriptFile\" : \"laser_pistol.lua\",\n""  \"scriptName\" : \"LaserPistol\"\n""}"}, 
{"resources/guns/laser_pistol/laser_pistol.lua", "\n""function LaserPistol.init(gun)\n""    gun.spreadAngle = 0.0\n""    gun.crosshairDistance = 350.0\n""    ShootTimer.initGun(gun, 0.40)\n""    SpreadHelper.initGun(gun)\n""end\n""\n""\n""function LaserPistol.onTick(gun)\n""    SpreadHelper.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            SpreadHelper.onShoot(gun)\n""            gun:addBullet()\n""        end\n""    end\n""end\n"""}, 
{"resources/guns/machinegun/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Machine Gun\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [8.0, 8.0],\n""  \"bulletMeshShift\" : [0.0, 0.0],\n""  \"bulletRadius\" : 3.0,\n""  \"bulletSpeed\" : 550.0,\n""  \"bulletDamage\" : [30, 45],\n""  \n""  \"maxAmmo\" : 32,\n""  \"reloadTime\" : 1.5,\n""  \n""  \"firingSound\" : {\n""    \"path\" : \"assault.ogg\",\n""    \"volume\" : 0.80\n""  },\n""  \n""  \"scriptFile\" : \"machine.lua\",\n""  \"scriptName\" : \"MachineGun\"\n""}"}, 
{"resources/guns/machinegun/machine.lua", "\n""function MachineGun.init(gun)\n""    gun.spreadAngle = 0.10\n""    gun.crosshairDistance = 550.0\n""    ShootTimer.initGun(gun, 0.15)\n""end\n""\n""\n""function MachineGun.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            local bullet = gun:addBullet()\n""            bullet.onDamageArgs.customSlowdownAmount = 4.0\n""            bullet.onDamageArgs.slowdownOnly = true\n""            \n""            bullet:addTrailParticle(\"BulletTrailParticle\", Vec2.new(0.0, 14.0), 15.0, { initialScale = 2.0, fadeOutSpeed = 1.2})\n""        end\n""    end\n""end\n"""}, 
{"resources/guns/minigun/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Gatling Gun\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [5.0, 5.0],\n""  \"bulletMeshShift\" : [0.0, 0.0],\n""  \"bulletRadius\" : 3.0,\n""  \"bulletSpeed\" : 550.0,\n""  \"bulletDamage\" : [20, 30],\n""  \n""  \"maxAmmo\" : 400,\n""  \"reloadTime\" : 3.5,\n""  \n""  \"firingSoundContinuous\" : true,\n""  \"firingSound\" : {\n""    \"path\" : \"shoot.ogg\",\n""    \"volume\" : 3.0\n""  },\n""  \n""  \"firingSoundFadein\" : 0.05,\n""  \"firingSoundFadeout\" : 0.1,\n""  \n""  \"scriptFile\" : \"minigun.lua\",\n""  \"scriptName\" : \"MiniGun\"\n""}"}, 
{"resources/guns/minigun/minigun.lua", "\n""MiniGun.buffId = getGlobalUniqueId()\n""\n""function MiniGun.init(gun)\n""    gun.crosshairDistance = 550.0\n""    ShootTimer.initGun(gun, 0.02)\n""    \n""    gun.data.waitTime = 0.0\n""    gun.data.cooldown = false\n""    \n""    gun.data.checkAchievement = true\n""    gun.data.achievementProcess = 0\n""    gun.data.achievementKillCounts = {}\n""    \n""    gun.data.shootStarted = false\n""end\n""\n""\n""function MiniGun.onTick(gun)\n""    local data = gun.data\n""    local shoot = false\n""    if gun.isTriggered and gun:hasAmmo() and data.cooldown == false then\n""        shoot = true\n""    end\n""    \n""    if data.shootStarted then\n""        if data.waitTime < 0.38 then\n""            shoot = true\n""        else\n""            data.shootStarted = false\n""        end\n""    end\n""    if shoot then\n""        if data.waitTime == 0.0 then\n""            playSound({path = MiniGun.basePath .. \"start.ogg\", volume = 0.7})\n""            data.shootStarted = true\n""        end\n""        data.waitTime = data.waitTime + dt\n""        if data.waitTime > 0.4 then\n""            if data.waitTime > 2.0 then\n""                data.waitTime =  2.0\n""            end\n""            \n""            gun.playFiringSound = true\n""            if ShootTimer.checkGun(gun) then\n""                gun:consumeAmmo()\n""                local bullet = gun:addBullet()\n""                bullet.onDamageArgs.customSlowdownAmount = 4.0\n""                bullet.onDamageArgs.slowdownOnly = true\n""                \n""                bullet:addTrailParticle(\"BulletTrailParticle\", Vec2.new(0.0, 14.0), 15.0, { initialScale = 2.0, fadeOutSpeed = 1.2})\n""            end\n""        end\n""    else\n""         data.waitTime = data.waitTime - dt * 2.0\n""         if data.waitTime <= 0.0 then\n""            data.waitTime = 0.0\n""            data.cooldown = false\n""         else \n""            if data.cooldown == false then\n""                playSound({path = MiniGun.basePath .. \"end.ogg\", volume = 0.6})\n""                data.cooldown = true\n""            end\n""         end\n""         \n""        gun.playFiringSound = false\n""    end\n""    \n""    \n""    local t = data.waitTime / 0.3\n""    if t > 1.0 then\n""        t = 1.0\n""    end\n""    gun.spreadAngle = 0.2 * t\n""    \n""    \n""    if player.maxRotateSpeed:hasBuffInfo(MiniGun.buffId) == false then\n""        player.maxRotateSpeed:addBuffWithId(MiniGun.buffId, 1.0)\n""    end\n""\n""    if player.maxSpeed:hasBuffInfo(MiniGun.buffId) == false then\n""        player.maxSpeed:addBuffWithId(MiniGun.buffId, 1.0)\n""    end\n""    player.maxRotateSpeed:getBuffInfo( MiniGun.buffId ) : setBuffAmount(1.0 - 0.95 * t)\n""    player.maxSpeed:getBuffInfo( MiniGun.buffId ) : setBuffAmount(1.0 - 0.5 * t)\n""    \n""    \n""    if data.checkAchievement then\n""    \n""        if hasAchievement( \"ACH_MINIGUN\" ) or player.isDead or missionData.isSurvival ~= true then\n""            data.checkAchievement = false\n""            return\n""        end\n""        if data.achievementProcess >= 30 then\n""            addAchievement( \"ACH_MINIGUN\" )\n""            data.checkAchievement = false\n""            return\n""        end\n""    \n""        local t = math.floor(time) - 5\n""        \n""        for key,kill in pairs(data.achievementKillCounts) do\n""            if t >= key then\n""                data.achievementProcess = data.achievementProcess - kill\n""                data.achievementKillCounts[ key ] = nil\n""            end\n""        end\n""    end\n""end\n""\n""\n""function MiniGun.onBulletHit(gun, bullet, monster)\n""    local data = gun.data\n""    if data.checkAchievement then\n""        if  monster ~= nil and monster.isDead == true then\n""            data.achievementProcess = data.achievementProcess + 1\n""            local t = math.floor(time)\n""            \n""            local k = data.achievementKillCounts\n""            \n""            if k[t] == nil then\n""                k[t] = 1\n""            else\n""                k[t] =  k[t] + 1\n""            end\n""        end\n""    end\n"" end\n""\n"""}, 
{"resources/guns/pistol/data.json", "{\n""  \"type\" : \"gun\",\n""  \n""  \"name\": \"Pistol\",\n""  \"icon\" : \"icon.png\",\n""  \n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [8.0, 8.0],\n""  \"bulletMeshShift\" : [0.0, 0.0],\n""  \"bulletRadius\" : 2.0,\n""  \"bulletSpeed\" : 850.0,\n""  \"bulletDamage\" : [50, 90],\n""  \n""  \"crosshairDistance\" : 350.0,\n""  \"maxAmmo\" : 12,\n""  \"reloadTime\" : 1.2,\n""  \n""  \"firingSound\" : \"pistol.ogg\",\n""  \n""  \"scriptFile\" : \"pistol.lua\",\n""  \"scriptName\" : \"Pistol\"\n""}"}, 
{"resources/guns/pistol/pistol.lua", "\n""function Pistol.init(gun)\n""    ShootTimer.initGun(gun, 0.35)\n""    \n""    SpreadHelper.initGun(gun)\n""    gun.data.minSpread = 0.0\n""    gun.data.maxSpread = 0.10\n""    gun.data.spreadDecreaseSpeed = 0.25\n""    gun.data.spreadIncreasePerShoot = 0.02\n""    \n""    gun.data.checkAchievement = true\n""end\n""\n""\n""function Pistol.onTick(gun)\n""    local data = gun.data\n""    SpreadHelper.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            SpreadHelper.onShoot(gun)\n""            local bullet = gun:addBullet()\n""            bullet:addTrailParticle(\"BulletTrailParticle\", Vec2.new(0.0, 14.0), 15.0, {initialScale = 2.0, fadeOutSpeed = 1.2, color = Vec3.new(0.8, 0.8, 0.8)})\n""        end\n""    end\n""    \n""    if data.checkAchievement then\n""        if hasAchievement( \"ACH_PISTOL\" ) or player.isDead or missionData.isSurvival ~= true or \n""                    player.gun ~= gun or player.ultimate ~= nil then\n""                    \n""            data.checkAchievement = false\n""            return\n""        end\n""        \n""        if missionTime > 2 * 60.0 then\n""            addAchievement(\"ACH_PISTOL\")\n""            data.checkAchievement = false\n""        end\n""    end\n""end\n"""}, 
{"resources/guns/plasmagun/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Plasma Gun\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [6.0, 6.0],\n""  \"bulletRadius\" : 5.0,\n""  \"bulletSpeed\" : 550.0,\n""  \"bulletDamage\" : [50, 70],\n""  \n""  \"maxAmmo\" : 12,\n""  \"reloadTime\" : 2.5,\n""  \n""  \"firingSound\" : {\n""    \"path\" : \"plasma.ogg\",\n""    \"volume\" : 0.75\n""  },\n""  \"bulletHitSound\" : \"plasma_hit.ogg\",\n""  \n""  \"scriptFile\" : \"plasmagun.lua\",\n""  \"scriptName\" : \"PlasmaGun\",\n""  \n""  \"shootParticleColor\" : [0.0, 0.6, 0.8]\n""}"}, 
{"resources/guns/plasmagun/plasmagun.lua", "\n""function PlasmaGun.init(gun)\n""    gun.spreadAngle = 0.0\n""    gun.crosshairDistance = 400.0\n""    ShootTimer.initGun(gun, 0.35)\n""    SpreadHelper.initGun(gun)\n""    gun.data.maxSpread = 0.10\n""    gun.data.spreadDecreaseStartTime = 0.0\n""    gun.data.spreadDecreaseSpeed = 0.05\n""    \n""    gun.data.checkAchievement = true\n""    gun.data.achievementProcess = 0\n""end\n""\n""\n""function PlasmaGun.onTick(gun)\n""    SpreadHelper.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            SpreadHelper.onShoot(gun)\n""            local bullet = gun:addBullet()\n""            bullet:addTrailParticle(\"PlasmaTrailParticle\", Vec2.new(0.0, 0.0), 3.0, {color = Vec3.new(0.0, 0.6, 0.8)})\n""        end\n""    end\n""end\n""\n""function PlasmaGun.onBulletHit(gun, bullet, monster)\n""    local data = gun.data\n""    if monster ~= nil then\n""        local m = monster\n""        local oldGameObjectPos = nil\n""        local count = 0\n""        \n""        if monster.isDead then\n""            count = count + 1\n""        end\n""        while m ~= nill do\n""            m:addIgnoreId(bullet.id)\n""            local gameObject = addGameObject(\"FadeOutImage\")\n""            gameObject.data.startTime = time\n""            gameObject.data.fadeOutStartTime = 0.0\n""            gameObject.data.fadeInDuration = 0.0\n""            gameObject.data.fadeOutDuration = 0.3\n""            gameObject:setLevel(RenderableLevel.monsters + 5)\n""            gameObject.data.renderable = gameObject:addTexture(PlasmaGun.basePath .. \"bullet.png\", \"~/resources/default\")\n""            gameObject.data.renderable:setAlignment(RenderableAlignment.world)\n""            gameObject.data.renderable:setWorldMatrix(Mat3.fromScale(6.0, 6.0))\n""            if oldGameObjectPos ~= nil then\n""                gameObject:setPosition(m.position)\n""                local gameObject2 = addGameObject(\"FadeOutImage\")\n""                gameObject2.data.startTime = time\n""                gameObject2.data.fadeOutStartTime = 0.0\n""                gameObject2.data.fadeInDuration = 0.0\n""                gameObject2.data.fadeOutDuration = 0.3\n""                gameObject2:setLevel(RenderableLevel.monsters + 4)\n""                gameObject2.data.renderable = gameObject2:addTexture(PlasmaGun.basePath .. \"line.png\", \"~/resources/default\")\n""                \n""                gameObject2.data.renderable:setAlignment(RenderableAlignment.world)\n""                gameObject2.data.renderable:setWorldMatrix(Mat3.from(\n""                (m.position + oldGameObjectPos) * 0.5,\n""                Vec2:new((m.position - oldGameObjectPos):length() * 0.5 - 3, 3.0),\n""                 -(m.position - oldGameObjectPos):getAngle()\n""                ))\n""                \n""                \n""                local args = {doNotStun = true}\n""                m:doDamageWithArgs(math.floor( ( 10 + 10 * math.random() ) * player.damageMultiplier:getBuffedValue() ), (m.position - oldGameObjectPos):normalized(), args)\n""            \n""                if m.isDead then\n""                    count = count + 1\n""                end\n""                if math.random() < 0.5 then\n""                    oldGameObjectPos = m.position\n""                end\n""            else \n""                gameObject:setPosition(bullet.position)\n""                oldGameObjectPos = bullet.position\n""            end\n""            \n""            m = getClosestMonsterInRangeWithIgnoreId(bullet.position, 80.0, {bullet.id})\n""        end\n""\n""        if data.checkAchievement then\n""            if hasAchievement( \"ACH_PLASMA_GUN\" ) or player.isDead or missionData.isSurvival ~= true then\n""                data.checkAchievement = false\n""                return\n""            end\n""            if count >= 3 then \n""                data.achievementProcess = data.achievementProcess + 1\n""                \n""                if data.achievementProcess >= 20 then\n""                    addAchievement( \"ACH_PLASMA_GUN\" )\n""                    data.checkAchievement = false\n""                end\n""            end\n""        end\n""    end\n""end\n"""}, 
{"resources/guns/pulsegun/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Pulse Gun\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [20.0, 20.0],\n""  \"bulletMeshShift\" : [0.0, 0.0],\n""  \"bulletRadius\" : 15.0,\n""  \"bulletSpeed\" : 650.0,\n""  \"bulletDamage\" : [30,40],\n""  \n""  \"maxAmmo\" : 16,\n""  \"reloadTime\" : 2.0,\n""  \n""  \"showShootAnimation\" : false,\n""  \n""  \"firingSound\" : {\n""    \"path\" : \"pulse.ogg\",\n""    \"volume\" : 0.30\n""  },\n""  \n""  \"scriptFile\" : \"pulsegun.lua\",\n""  \"scriptName\" : \"PulseGun\"\n""}"}, 
{"resources/guns/pulsegun/pulsegun.lua", "\n""function PulseGun.init(gun)\n""    gun.spreadAngle = 0.0\n""    gun.crosshairDistance = 250.0\n""    ShootTimer.initGun(gun, 0.15)\n""end\n""\n""\n""function PulseGun.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            local bullet = gun:addBullet()\n""            bullet.data.t = 0.3\n""            bullet:setScale(bullet.data.t)\n""            bullet.penetrateCount = -1\n""            bullet.data.toKillTime = 1000.0\n""            bullet:setColor(Vec4.new(1.0, 1.0, 1.0, 0.4))\n""        end\n""    end\n""end\n""\n""\n""function PulseGun.onBulletTick(gun, bullet)\n""    local data = bullet.data\n""    data.t = data.t + dt * 10.5\n""    data.t = math.min(data.t, 1.5)\n""    bullet:setScale(data.t)\n""    \n""    data.toKillTime = data.toKillTime - dt\n""    if data.toKillTime < 0.0 then\n""        bullet:removeSelf()\n""    end\n""end\n""\n""function PulseGun.onBulletHit(gun, bullet, monster)\n""    if monster ~= nil then\n""        monster:addKnockback(bullet.moveDir * 200.0, 0.06)\n""        if bullet.data.toKillTime > 0.05 then\n""            bullet.data.toKillTime = 0.05\n""        end\n""    end\n""end"}, 
{"resources/guns/railgun/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Railgun\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [10.0, 10.0],\n""  \"bulletMeshShift\" : [0.0, 0.0],\n""  \"bulletRadius\" : 5.0,\n""  \"bulletSpeed\" : 950.0,\n""  \"bulletDamage\" : [65, 105],\n""  \n""  \"maxAmmo\" : 12,\n""  \"reloadTime\" : 3.0,\n""  \n""  \"firingSound\" : {\n""    \"path\" : \"railgun.ogg\",\n""    \"volume\" : 0.75\n""  },\n""  \n""  \"scriptFile\" : \"railgun.lua\",\n""  \"scriptName\" : \"Railgun\"\n""}"}, 
{"resources/guns/railgun/railgun.lua", "\n""function Railgun.init(gun)\n""    gun.spreadAngle = 0.0\n""    gun.crosshairDistance = 350.0\n""    ShootTimer.initGun(gun, 0.85)\n""    SpreadHelper.initGun(gun)\n""    gun.data.maxSpread = 0.05\n""    gun.data.spreadDecreaseStartTime = 0.35\n""    gun.data.spreadDecreaseSpeed = 0.40\n""    gun.data.spreadIncreasePerShoot = 0.03\n""    \n""    gun.data.checkAchievement = true\n""    gun.data.achievementProcess = 0\n""end\n""\n""\n""function Railgun.onTick(gun)\n""    SpreadHelper.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            SpreadHelper.onShoot(gun)\n""            local bullet = gun:addBullet()\n""            bullet.penetrateCount = 4\n""            \n""            bullet:addTrailParticle(\"RailGunParticle\", Vec2.new(0.0, 0.0), 7.0, {})\n""            \n""            bullet:addTrailParticle(\"BulletTrailParticle\", Vec2.new(0.0, 14.0), 15.0, {initialScale = 1.5, initialAlpha = 0.2, fadeOutSpeed = 0.3, color = Vec3.new(1.0, 1.0, 1.0)})\n""            \n""            bullet.data.killCount = 0\n""        end\n""    end\n""end\n""\n""\n""\n""function Railgun.onBulletHit(gun, bullet, monster)\n""    local data = gun.data\n""    if data.checkAchievement then\n""        if hasAchievement( \"ACH_RAIL_GUN\" ) or player.isDead or missionData.isSurvival ~= true then\n""            data.checkAchievement = false\n""            return\n""        end\n""            \n""        if  monster ~= nil and monster.isDead == true then\n""            bullet.data.killCount = bullet.data.killCount + 1\n""            if bullet.data.killCount == 3 then\n""                data.achievementProcess = data.achievementProcess + 1\n""                if data.achievementProcess >= 30 then\n""                    addAchievement( \"ACH_RAIL_GUN\" ) \n""                    data.checkAchievement = false\n""                end\n""             end\n""        end\n""    end\n"" end\n"""}, 
{"resources/guns/rainbow_gun/data.json", "{\n""  \"type\" : \"gun\",\n""  \n""  \"name\": \"Rainbow Gun\",\n""  \"icon\" : \"icon.png\",\n""  \n""  \"bulletRadius\" : 16.0,\n""  \"bulletSpeed\" : 450.0,\n""  \"bulletDamage\" : [4, 7],\n""  \"bulletLifeTime\" : 0.90,\n""  \n""  \"crosshairDistance\" : 350.0,\n""  \"maxAmmo\" : 8,\n""  \"reloadTime\" : 2.5,\n""  \n""  \"firingSound\" : {\n""    \"path\" : \"fire.ogg\",\n""    \"volume\" : 0.65\n""  },\n""  \n""  \"stripLaserParticle\" : \"RainbowStrip\",\n""  \n""  \"scriptFile\" : \"rainbowgun.lua\",\n""  \"scriptName\" : \"RainbowGun\"\n""}"}, 
{"resources/guns/rainbow_gun/rainbowgun.lua", "\n""function RainbowGun.init(gun)\n""    ShootTimer.initGun(gun, 0.55)\n""    \n""    gun.data.shootTime = 0.0\n""    gun.data.shootSpeed =  Vec2.new(0.0, 0.0)\n""    \n""end\n""\n""\n""function RainbowGun.onTick(gun)\n""    gun.data.shootTime = gun.data.shootTime - dt\n""    gun.stripLaser:setShooting(gun.data.shootTime > 0.0)\n""    gun.stripLaser:setSpeed( gun.data.shootSpeed )\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun.data.shootTime = 0.11\n""            gun.data.shootSpeed = player.aimDir * gun.bulletSpeed * player.bulletSpeedMultiplier:getBuffedValue()\n""            gun:consumeAmmo()\n""            local bullet = gun:addBullet()\n""            bullet.penetrateCount = -1\n""            bullet.hasCollision = false\n""            bullet.hitsMultipleTimes = true\n""        end\n""    end\n""end\n""\n"" function RainbowGun.onBulletHit(gun, bullet, monster)\n""    if monster ~= nil then\n""        local toMonster = monster.position - bullet.position\n""        local d = 40 - toMonster:normalize() \n""        if d < 2.0 then\n""            d = 2.0\n""        end\n""        monster:addKnockback(toMonster * d * 2, 0.1)\n""    end\n"" end\n"""}, 
{"resources/guns/rifle/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Rifle\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [10.0, 10.0],\n""  \"bulletMeshShift\" : [0.0, 0.0],\n""  \"bulletRadius\" : 2.0,\n""  \"bulletSpeed\" : 950.0,\n""  \"bulletDamage\" : [110, 140],\n""  \n""  \"maxAmmo\" : 8,\n""  \"reloadTime\" : 2.2,\n""  \n""  \n""  \"firingSound\" : {\n""    \"path\" : \"rifle.ogg\",\n""    \"volume\" : 0.85\n""  },\n""  \n""  \"scriptFile\" : \"rifle.lua\",\n""  \"scriptName\" : \"Rifle\"\n""}"}, 
{"resources/guns/rifle/rifle.lua", "\n""function Rifle.init(gun)\n""    gun.spreadAngle = 0.0\n""    gun.crosshairDistance = 350.0\n""    ShootTimer.initGun(gun, 0.75)\n""    SpreadHelper.initGun(gun)\n""    gun.data.maxSpread = 0.25\n""    gun.data.spreadDecreaseStartTime = 0.35\n""    gun.data.spreadDecreaseSpeed = 0.80\n""    gun.data.spreadIncreasePerShoot = 0.03\n""    \n""    gun.data.checkAchievement = true\n""    gun.data.achievementProcess = 0\n""end\n""\n""\n""function Rifle.onTick(gun)\n""    SpreadHelper.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            SpreadHelper.onShoot(gun)\n""            local bullet = gun:addBullet()\n""            bullet:addTrailParticle(\"BulletTrailParticle\", Vec2.new(0.0, 14.0), 15.0, {initialScale = 3.0, fadeOutSpeed = 0.8})\n""        end\n""    end\n""end\n""\n""\n""function Rifle.onBulletHit(gun, bullet, monster)\n""    local data = gun.data\n""    if data.checkAchievement then\n""        if hasAchievement( \"ACH_RIFLE\" ) or player.isDead or missionData.isSurvival ~= true then\n""            data.checkAchievement = false\n""            return\n""        end\n""            \n""        if monster == nil then\n""            data.achievementProcess = 0\n""        elseif monster.isDead == true then\n""            data.achievementProcess = data.achievementProcess + 1\n""            if data.achievementProcess >= 30 then\n""                addAchievement( \"ACH_RIFLE\" ) \n""                data.checkAchievement = false\n""            end\n""        end\n""    end\n"" end"}, 
{"resources/guns/rocketlauncher/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Rocket Launcher\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [6.0, 6.0],\n""  \"bulletRadius\" : 2.0,\n""  \"bulletSpeed\" : 350.0,\n""  \"bulletDamage\" : [40, 70],\n""  \n""  \"maxAmmo\" : 6,\n""  \"reloadTime\" : 2.8,\n""  \n""  \"firingSound\" : \"rocket.ogg\",\n""  \"bulletHitSound\" : \"missile_explosion.ogg\",\n""  \n""  \"scriptFile\" : \"rocket.lua\",\n""  \"scriptName\" : \"RocketLauncher\"\n""}"}, 
{"resources/guns/rocketlauncher/rocket.lua", "\n""function RocketLauncher.init(gun)\n""    gun.spreadAngle = 0.0\n""    gun.crosshairDistance = 350.0\n""    ShootTimer.initGun(gun, 0.7)\n""    \n""    gun.data.checkAchievement = true\n""    gun.data.achievementProcess = 0\n""end\n""\n""\n""function RocketLauncher.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            local bullet = gun:addBullet()\n""            bullet.damage = math.floor(150 + math.random() * 40)\n""            bullet:addTrailParticle(\"RocketSmokeParticle\", Vec2.new(0.0, -8.0), 4.0, {})\n""            bullet.moveSpeed = 100\n""            bullet.radius = 6\n""            bullet.data.moveAngle = bullet.moveAngle\n""            bullet.data.moveSpeed = bullet.moveSpeed\n""            bullet.data.lateralSpeedDir = player.moveVelocity - (player.moveDir * player.moveVelocity:dot(player.aimDir))\n""            bullet.data.lateralSpeed = bullet.data.lateralSpeedDir:safeNormalize() * 0.3\n""            bullet.lifeTime = 2.5\n""            bullet.meshRotation = bullet.moveAngle\n""            bullet.data.killCount = 0\n""        end\n""    end\n""end\n""\n""function RocketLauncher.onBulletHit(gun, bullet, monster)\n""\n""    local minD = math.floor(70 * player.damageMultiplier:getBuffedValue() )\n""    local maxD = math.floor(130 * player.damageMultiplier:getBuffedValue() )\n""    \n""    if gun.data.checkAchievement then\n""        local killCount = 0\n""        if  monster ~= nil and monster.isDead then\n""            killCount = killCount + 1\n""        end\n""        addExplosion(bullet.position, 80.0, 180.0, minD, maxD, 0.0, false, function(monster)\n""            if  monster ~= nil and monster.isDead then\n""                killCount = killCount + 1\n""                \n""                if gun.data.checkAchievement then\n""                    if hasAchievement( \"ACH_ROCKET_LAUNCHER\" ) or player.isDead or missionData.isSurvival ~= true then\n""                        gun.data.checkAchievement = false\n""                        return\n""                    end\n""                    if killCount >= 4 then\n""                        killCount = -100\n""                        gun.data.achievementProcess = gun.data.achievementProcess + 1\n""                        \n""                        if gun.data.achievementProcess  >= 30 then\n""                            addAchievement( \"ACH_ROCKET_LAUNCHER\" )\n""                            gun.data.checkAchievement = false\n""                        end\n""                    end\n""                end\n""                \n""            end\n""        end)\n""    else\n""        addExplosion(bullet.position, 80.0, 180.0, minD, maxD)\n""    end\n""end\n""\n""function RocketLauncher.onBulletTick(gun, bullet)\n""    local data = bullet.data\n""    \n""    data.moveSpeed = data.moveSpeed + dt * 250\n""    if data.moveSpeed > 250.0 then\n""        data.moveSpeed = 250.0\n""    end\n""    \n""    data.lateralSpeed = data.lateralSpeed - dt * 0.5\n""    \n""    if data.lateralSpeed < 0.0 then\n""        data.lateralSpeed = 0.0\n""    end\n""    \n""    local defaultSpeed = Vec2.fromAngle(data.moveAngle) * data.moveSpeed\n""    \n""    local finalSpeed = defaultSpeed + data.lateralSpeedDir * data.lateralSpeed\n""    \n""    bullet.moveSpeed = finalSpeed:length()\n""    bullet.moveAngle = finalSpeed:getAngle()\n""    \n""end\n"""}, 
{"resources/guns/shotgun/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Shotgun\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [6.0, 6.0],\n""  \"bulletMeshShift\" : [0.0, 0.0],\n""  \"bulletRadius\" : 2.0,\n""  \"bulletSpeed\" : 850.0,\n""  \"bulletDamage\" : [20, 35],\n""  \n""  \"bulletLifeTime\" : 0.70,\n""  \n""  \"maxAmmo\" : 6,\n""  \"reloadTime\" : 1.9,\n""  \n""  \n""  \"firingSound\" : {\n""    \"path\" : \"shotgun.ogg\",\n""    \"volume\" : 0.85\n""  },\n""  \n""  \"hideSpread\" : true,\n""  \n""  \"scriptFile\" : \"shotgun.lua\",\n""  \"scriptName\" : \"Shotgun\"\n""}"}, 
{"resources/guns/shotgun/shotgun.lua", "\n""function Shotgun.init(gun)\n""    gun.spreadAngle = 0.25\n""    gun.crosshairDistance = 350.0\n""    ShootTimer.initGun(gun, 1.05)\n""    \n""    gun.data.checkAchievement = true\n""    gun.data.achievementProcess = 0\n""end\n""\n""\n""function Shotgun.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            local killCount = { c = 0}\n""            for i = 1, 10 do\n""                local bullet = gun:addBullet()\n""                bullet:addTrailParticle(\"BulletTrailParticle\", Vec2.new(0.0, 14.0), 15.0, {initialScale = 2.5, fadeOutSpeed = 1.6})\n""                bullet.moveSpeed = bullet.moveSpeed * (math.random() * 0.4 + 0.6)\n""                bullet.data.killCount = killCount\n""            end\n""        end\n""    end\n""end\n""\n""\n""\n""function Shotgun.onBulletHit(gun, bullet, monster)\n""    local data = gun.data\n""    if data.checkAchievement then\n""        if hasAchievement( \"ACH_SHOTGUN\" ) or player.isDead or missionData.isSurvival ~= true then\n""            data.checkAchievement = false\n""            return\n""        end\n""            \n""        if  monster ~= nil and monster.isDead == true then\n""            bullet.data.killCount.c = bullet.data.killCount.c + 1\n""            if bullet.data.killCount.c == 3 then\n""                data.achievementProcess = data.achievementProcess + 1\n""                if data.achievementProcess >= 20 then\n""                    addAchievement( \"ACH_SHOTGUN\" ) \n""                    data.checkAchievement = false\n""                end\n""             end\n""        end\n""    end\n"" end\n""\n"""}, 
{"resources/guns/shrinkgun/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Shrink Gun\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [8.0, 8.0],\n""  \"bulletMeshShift\" : [0.0, 0.0],\n""  \"bulletRadius\" : 12.0,\n""  \"bulletSpeed\" : 450.0,\n""  \"bulletDamage\" : [0, 0],\n""  \n""  \"maxAmmo\" : 16,\n""  \"reloadTime\" : 1.8,\n""  \n""  \"showShootAnimation\" : false,\n""  \n""  \"firingSound\" : {\n""    \"path\" : \"shrink_shoot.ogg\",\n""    \"volume\" : 0.6\n""  },\n""  \n""  \"scriptFile\" : \"shrinkgun.lua\",\n""  \"scriptName\" : \"ShrinkGun\"\n""}"}, 
{"resources/guns/shrinkgun/shrinkgun.lua", "\n""function ShrinkGun.init(gun)\n""    gun.spreadAngle = 0.0\n""    gun.crosshairDistance = 700.0\n""    ShootTimer.initGun(gun, 0.45)\n""    \n""    SpreadHelper.initGun(gun)\n""    gun.data.minSpread = 0.0\n""    gun.data.maxSpread = 0.1\n""    gun.data.spreadDecreaseSpeed = 0.25\n""    gun.data.spreadIncreasePerShoot = 0.025\n""    \n""    gun.data.checkAchievement = true\n""    gun.data.achievementProcess = 0\n""end\n""\n""\n""function ShrinkGun.onTick(gun)\n""    SpreadHelper.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            SpreadHelper.onShoot(gun)\n""            local bullet = gun:addBullet()\n""            bullet:addTrailParticle(\"CriticalParticle\", Vec2.new(0.0, 0.0), 15.0, {})\n""            \n""            local r = math.random()\n""            local g = math.random()\n""            local b = math.random()\n""            local ra = math.random()\n""            if ra < 0.333 then\n""                r = 1.0\n""            elseif ra < 0.666 then\n""                g = 1.0\n""            else\n""                b = 1.0\n""            end\n""\n""            bullet:setColor(Vec4:new(r, g, b, 1.0))\n""        end\n""    end\n""end\n""\n""\n""\n""function ShrinkGun.onBulletHit(gun, bullet, monster)\n""    local data = gun.data\n""    if monster ~= nil and monster.canGetOneShooted == true then\n""        monster:setScale(monster.scale * 0.7)\n""        \n""        local particleCount = 10\n""        if monster.scale < 0.4 then\n""            particleCount = 20\n""            monster:killSelf()\n""            playSound({path = ShrinkGun.basePath .. \"shrink_kill.ogg\", volume = 0.6})\n""        else\n""        \n""            playSound({path = ShrinkGun.basePath .. \"shrink_hit.ogg\", volume = 0.3})\n""        end\n""        \n""        if monster.data.shrinkParticle == nil then\n""            monster.data.shrinkParticle = monster:addParticleSpawner(\"CriticalParticle\", {});\n""        end\n""        for i=1,particleCount do\n""            monster:spawnParticle(monster.data.shrinkParticle, {initialScale = 15.0, moveSpeed = 150.0})\n""        end\n""    end\n""    \n""    if data.checkAchievement then\n""        if hasAchievement( \"ACH_SHRINK_GUN\" ) or player.isDead or missionData.isSurvival ~= true then\n""            data.checkAchievement = false\n""            return\n""        end\n""        if monster ~= nil and monster.data.isBoss == true and monster.isDead == true then\n""            data.achievementProcess = data.achievementProcess + 1\n""            if data.achievementProcess >= 10 then\n""                addAchievement( \"ACH_SHRINK_GUN\" ) \n""                data.checkAchievement = false\n""            end\n""        end\n""    end\n""    \n""end"}, 
{"resources/guns/splitgun/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Split Gun\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [8.0, 8.0],\n""  \"bulletMeshShift\" : [0.0, 0.0],\n""  \"bulletRadius\" : 2.0,\n""  \"bulletSpeed\" : 550.0,\n""  \"bulletDamage\" : [30, 50],\n""  \n""  \"maxAmmo\" : 8,\n""  \"reloadTime\" : 1.6,\n""  \n""  \"scriptFile\" : \"splitgun.lua\",\n""  \"scriptName\" : \"SplitGun\"\n""}"}, 
{"resources/guns/splitgun/splitgun.lua", "\n""function SplitGun.init(gun)\n""    gun.spreadAngle = 0.0\n""    gun.crosshairDistance = 400.0\n""    ShootTimer.initGun(gun, 0.45)\n""    \n""    SpreadHelper.initGun(gun)\n""    gun.data.minSpread = 0.02\n""    gun.data.maxSpread = 0.10\n""    gun.data.spreadDecreaseSpeed = 0.25\n""    gun.data.spreadIncreasePerShoot = 0.025\n""    \n""    gun.data.checkAchievement = true\n""    gun.data.achievementProcess = 0\n""end\n""\n""\n""function SplitGun.onTick(gun)\n""    SpreadHelper.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            SpreadHelper.onShoot(gun)\n""            local bullet = gun:addBullet()\n""            bullet:addTrailParticle(\"BulletTrailParticle\", Vec2.new(0.0, 14.0), 15.0, {initialScale = 2.0, fadeOutSpeed = 1.2})\n""            bullet.data.remainingSplit = 2\n""            playSound({path = SplitGun.basePath .. \"split_gun.ogg\"})\n""        end\n""    end\n""end\n""\n""\n""function SplitGun.onReloadEnd(gun)\n""    if gun.data.checkAchievement then\n""        gun.data.achievementHitCount = {}\n""    end\n""end\n""\n""function SplitGun.onBulletHit(gun, bullet, monster)\n""    local data = gun.data\n""    if monster ~= nil then\n""        if data.splitID ~= nil then\n""            monster:addIgnoreId(data.splitID)\n""        end\n""        if bullet.data.remainingSplit > 0 then\n""            local newBullet = gun:addBullet()\n""            local particle = newBullet:addTrailParticle(\"BulletTrailParticle\", Vec2.new(0.0, 14.0), 15.0, { doNotShare = true })\n""            particle.args.initialScale = 2.0\n""            particle.args.fadeOutSpeed = 1.2\n""            particle.args.startFadeinSpeed = 10000.0\n""            newBullet.position = bullet.position\n""            newBullet.moveAngle = bullet.moveAngle - math.pi * 0.1\n""            newBullet.data.remainingSplit = bullet.data.remainingSplit - 1\n""            monster:addIgnoreId(newBullet.id)\n""            newBullet.damage = math.floor( bullet.damage * 0.6 )\n""            newBullet.data.splitHit = {}\n""            newBullet.lifeTime = 0.6 - ( 1 - newBullet.data.remainingSplit ) * 0.3\n""            local prevBullet = newBullet\n""            \n""            newBullet = gun:addBullet()\n""            particle = newBullet:addTrailParticle(\"BulletTrailParticle\", Vec2.new(0.0, 14.0), 15.0, { doNotShare = true })\n""            particle.args.initialScale = 2.0\n""            particle.args.fadeOutSpeed = 1.2\n""            particle.args.startFadeinSpeed = 10000.0\n""            newBullet.position = bullet.position\n""            newBullet.moveAngle = bullet.moveAngle + math.pi * 0.1\n""            newBullet.data.remainingSplit = bullet.data.remainingSplit - 1\n""            monster:addIgnoreId(newBullet.id)\n""            newBullet.damage = math.floor( bullet.damage * 0.6 )\n""            newBullet.data.splitHit = prevBullet.data.splitHit\n""            newBullet.lifeTime = 0.6 - ( 1 - newBullet.data.remainingSplit ) * 0.3\n""            \n""            newBullet.data.splitID = prevBullet.data.id\n""            prevBullet.data.splitID = newBullet.data.id\n""            \n""            playSound({path = SplitGun.basePath .. \"split_gun.ogg\", position = bullet.position, volume = 0.5})\n""        end\n""    end\n""    \n""    \n""    if data.checkAchievement then\n""        if hasAchievement( \"ACH_SPLIT_GUN\" ) or player.isDead or missionData.isSurvival ~= true then\n""            data.checkAchievement = false\n""            return\n""        end\n""        if monster ~= nil and bullet.data.splitHit ~= nil and monster.isDead then\n""        \n""            if  bullet.data.splitHit[0] == nil then\n""                bullet.data.splitHit[0] = true\n""            else\n""                data.achievementProcess = data.achievementProcess + 1\n""                if data.achievementProcess >= 15 then\n""                    addAchievement( \"ACH_SPLIT_GUN\" ) \n""                    data.checkAchievement = false\n""                end\n""            end\n""            bullet.data.splitHit = nil\n""        end\n""    end\n""    \n""end"}, 
{"resources/guns/uzi/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Uzi\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [6.0, 6.0],\n""  \"bulletMeshShift\" : [0.0, 0.0],\n""  \"bulletRadius\" : 2.0,\n""  \"bulletSpeed\" : 750.0,\n""  \"bulletDamage\" : [15, 25],\n""  \n""  \"maxAmmo\" : 32,\n""  \"reloadTime\" : 2.2,\n""  \n""  \"maxSoundPlayInterval\" : 0.0,\n""  \n""  \"firingSound\" : {\n""    \"path\" : \"uzi.ogg\",\n""    \"volume\" : 0.60\n""  },\n""  \n""  \"scriptFile\" : \"uzi.lua\",\n""  \"scriptName\" : \"Uzi\"\n""}"}, 
{"resources/guns/uzi/uzi.lua", "\n""function Uzi.init(gun)\n""    gun.spreadAngle = 0.15\n""    gun.crosshairDistance = 550.0\n""    ShootTimer.initGun(gun, 0.04)\n""end\n""\n""\n""function Uzi.onTick(gun)\n""    if gun.isTriggered and gun:hasAmmo() then\n""        if ShootTimer.checkGun(gun) then\n""            gun:consumeAmmo()\n""            local bullet = gun:addBullet()\n""            bullet.onDamageArgs.customSlowdownAmount = 4.0\n""            bullet.onDamageArgs.slowdownOnly = true\n""            bullet.lifeTime = 0.5 + math.random() * 0.1\n""            \n""            bullet:addTrailParticle(\"BulletTrailParticle\", Vec2.new(0.0, 10.0), 15.0, { color =  Vec3.new(0.9, 0.8, 0.3), initialScale = 1.5, fadeOutSpeed = 1.8})\n""        end\n""    end\n""end\n"""}, 
{"resources/helpers.lua", "RenderableAlignment = {\n""    world = 0,\n""    topLeft = 1,\n""    top = 2,\n""    topRight = 3,\n""    left = 4,\n""    center = 5,\n""    right = 6,\n""    bottomLeft = 7,\n""    bottom = 8,\n""    bottomRight = 9\n""}\n""TextAlignment = {\n""    left = 0,\n""    center = 1,\n""    right = 2,\n""    fit = 3\n""}\n""VerticalTextAlignment = {\n""    top = 0,\n""    mid = 1,\n""    bottom = 2\n""}\n""RenderableLevel = {\n""    background = -1000,\n""    gameObjects = 1000,\n""    monsters = 2000,\n""    player = 3000,\n""    bullets = 4000,\n""    objectGUI = 5000,\n""    foreground = 6000,\n""    GUI = 7000\n""}\n""\n""CollisionFlags = {\n""    NoPlayerCollision = 1,\n""    NoMonsterCollision = 2,\n""    NoBulletCollision = 4,\n""}\n""\n""function logTable(myTable)\n""    if myTable == nil then\n""        log(\"nil\")\n""    else \n""        for k, v in pairs( myTable ) do\n""           log(k, v)\n""        end\n""    end\n"" end\n"" \n""local seen={}\n""\n"" function dumpTable(t)\n""    seen={}\n""    dump(t, \"\")\n"" end\n"" \n"" \n""\n""function dump(t,i)\n""    seen[t]=true\n""    local s={}\n""    local n=0\n""    for k in pairs(t) do\n""        n=n+1 s[n]=k\n""    end\n""    for k,v in ipairs(s) do\n""        log(v .. \" \" .. tostring(t[v]))\n""        v=t[v]\n""        if type(v)==\"table\" and not seen[v] then\n""            dump(v,i..\"\t\")\n""        --elseif type(v)==\"userdata\" and not seen[v] then\n""        --    dump(getmetatable(v),i..\"\t\")\n""        end\n""    end\n""end\n""\n""function clamp(t)\n""    if t < 0.0 then\n""        return 0.0\n""    elseif t > 1.0 then\n""        return 1.0\n""    end\n""    return t\n""end\n""\n""\n""function lerp (a, b, t)\n""    return a + (b-a) * t\n""end\n""\n""function fixAngle(a)\n""    while a > math.pi do\n""        a = a - 2.0 * math.pi\n""    end\n""    while a < -math.pi do\n""        a = a + 2.0 * math.pi\n""    end\n""    return a\n""end\n""\n""function shallowcopy(orig)\n""    local orig_type = type(orig)\n""    local copy\n""    if orig_type == 'table' then\n""        copy = {}\n""        for orig_key, orig_value in pairs(orig) do\n""            copy[orig_key] = orig_value\n""        end\n""    else \n""        copy = orig\n""    end\n""    return copy\n""end\n""\n""FadeOutImage = {}\n""\n""function FadeOutImage.init(gameObject)\n""    if gameObject.data.fadeOutStartTime == nil then\n""        gameObject.data.fadeOutStartTime = 1.0\n""    end\n""    if gameObject.data.fadeOutDuration == nil then\n""        gameObject.data.fadeOutDuration = 1.0\n""    end\n""    if gameObject.data.fadeInDuration == nil then\n""        gameObject.data.fadeInDuration = 0.0\n""    end\n""    if gameObject.data.startAlpha == nil then\n""        gameObject.data.startAlpha = 1.0\n""    end\n""end\n""\n""\n""function FadeOutImage.onTick(gameObject)\n""    local timeDiff = time - gameObject.data.startTime\n""    local alpha\n""    if timeDiff < gameObject.data.fadeInDuration then\n""        alpha = timeDiff / gameObject.data.fadeInDuration\n""    elseif gameObject.data.fadeOutStartTime < 0.0 then\n""        alpha = 1.0\n""    else \n""        alpha = 1.0 - (timeDiff - gameObject.data.fadeOutStartTime) / gameObject.data.fadeOutDuration\n""        if alpha < 0.0 then \n""            gameObject.toBeRemoved = true\n""            alpha = 0.0\n""        elseif alpha > 1.0 then\n""            alpha = 1.0\n""        end\n""    end\n""    gameObject.data.renderable:setColor(Vec4.new(1.0, 1.0, 1.0, alpha * gameObject.data.startAlpha))\n""end\n""\n""function FadeOutImage.clear(gameObjectId)\n""\n""end\n""DummyProfiler = {}\n""DummyProfiler.start = function()\n""end\n""DummyProfiler.stop = function()\n""end\n""if createSumProfiler == nil then\n""    createSumProfiler = function()\n""        return DummyProfiler\n""    end\n""end\n""if createProfiler == nil then\n""    createProfiler = function()\n""        return DummyProfiler\n""    end\n""end\n""\n""function deleteAll()\n""    for k in pairs (_G) do\n""        if k ~= \"\" and k ~= nil and _G[k] ~= _G and _G[k] ~= doNotDelete and doNotDelete[k] ~= true then\n""            _G[k] = nil\n""        end\n""    end\n""end\n""\n""function printStack()\n""    print(debug.traceback())\n""end\n""\n""function fillDoNotDelete()\n""    doNotDelete = {}\n""    for k in pairs (_G) do\n""        doNotDelete[k] = true\n""    end\n""end\n""\n"""}, 
{"resources/missions/helpers.lua", "\n""function calcRandomSpawns()\n""    missionData.spawnRates = {}\n""    local monsterTypeCount = getAllMonsterTypeCount()\n""    missionData.totalChanceSpawn = 0.0\n""    \n""    local m = \"\"\n""    for i = 0, monsterTypeCount - 1 do\n""        local monsterType = getMonsterTypeAt(i)\n""        if monsterType.scriptTable.spawnChanceInMission ~= nil then\n""            local chance = monsterType.scriptTable.spawnChanceInMission(missionData, min)\n""            if chance > 0.0 then\n""                missionData.totalChanceSpawn = missionData.totalChanceSpawn + chance\n""                missionData.spawnRates[monsterType.scriptName] = chance\n""            end\n""        end\n""    end\n""end\n""\n""function addRandomMonster(forceType, cannotBecomeBoss, cannotShootBullets, levelReduce)\n""    local min = missionTime / 60.0 +  math.random() * 1.5\n""    \n""    if missionData.extraMin ~= nil then\n""        min = min + missionData.extraMin\n""    end\n""    if levelReduce ~= nil then\n""        min = min - levelReduce\n""    end\n""    \n""    if forceType ~= nil then\n""        m = forceType\n""    else\n""        local randChance = math.random() * missionData.totalChanceSpawn\n""        for key,value in pairs(missionData.spawnRates) do\n""            randChance = randChance - value\n""            if randChance <= 0.000001 then\n""                m = key\n""                break\n""            end\n""        end\n""\n""        if m == \"\" then\n""            log(\"error not picked mon type\")\n""            m = \"Alien\"\n""        end\n""    end\n""    \n""    local monster = addMonster(m)\n""    \n""    monster.hitPoint = math.floor(monster.hitPoint * (1.0 + clamp(min * 0.05) * 1.0))\n""    monster.experienceMultiplier = math.random() * 0.4 + 0.8\n""    monster.experienceMultiplier = 0.9 + math.random() * 0.2\n""    monster.scoreMultiplier = 0.9 + math.random() * 0.2\n""    \n""    monster.data.cannotBecomeBoss = cannotBecomeBoss\n""    monster.data.cannotShootBullets = cannotShootBullets\n""    \n""    if cannotBecomeBoss ~= true and monster.scriptTable.makeBoss ~= nil and missionData.lastBossSpawn + 15.0 - clamp(min/7) * 6 < missionTime and missionTime > 1.0 then\n""        missionData.lastBossSpawn = missionTime\n""        monster.data.isBoss = true\n""        monster.scriptTable.makeBoss(monster, min)\n""    else\n""        local r = 0.9 + 0.1 * math.random()\n""        local g = 0.9 + 0.1 * math.random()\n""        local b = 0.9 + 0.1 * math.random()\n""        local ra = math.random()\n""        if ra < 0.333 then\n""            r = 1.0\n""        elseif ra < 0.666 then\n""            g = 1.0\n""        else\n""            b = 1.0\n""        end\n""        \n""        monster.colorMultiplier:addBuff(Vec4.new(r, g, b, 1.0))\n""    end\n""    \n""    if monster.scriptTable.buffStats ~= nil then\n""        monster.scriptTable.buffStats(monster, min)\n""    end\n""    \n""    return monster\n""end\n""\n""GhostBuffId = getGlobalUniqueId()\n""\n""function makeBossDefault(monster, forceType)\n""    local min = missionTime / 60.0 +  math.random() * 1.5 + missionData.extraMin\n""    monster.hitPoint = math.floor(monster.hitPoint * 1.5)\n""    \n""    monster.data.minDamage = math.floor(monster.data.minDamage * 1.1)\n""    monster.data.maxDamage = math.floor(monster.data.maxDamage * 1.1)\n""    \n""    monster.data.maxMoveSpeed = monster.data.maxMoveSpeed * 1.05\n""    monster.data.randomMove = monster.data.randomMove or math.random() > 0.3\n""    monster.data.playerSeeRange = monster.data.playerSeeRange * 1.5\n""    \n""    monster.experienceMultiplier = 5.0 + math.random() * 2.0\n""    monster.scoreMultiplier = 5.0 + math.random() * 2.0\n""    monster:modifyDrawLevel(3)\n""    \n""    local t = 0\n""    repeat\n""        t = math.random(11)\n""    until missionTime > 30.0 or t ~= 8 \n""    \n""    if forceType ~= nil then\n""        t = forceType\n""    end\n""    \n""    \n""    if t == 1 then -- huge & tank\n""        monster.hitPoint = monster.hitPoint * 6\n""        monster.data.maxMoveSpeed = monster.data.maxMoveSpeed * 0.7\n""        monster.colorMultiplier:addBuff(Vec4.new(0.9, 0.8, 0.3, 1.0))\n""        monster:setScale(1.3 + math.random() * 0.1)\n""        monster.knockbackResistance:addBuff(0.07)\n""        monster.data.stunDuration = 0.0\n""        monster.data.slowDuration = 0.0\n""    elseif t == 2 then -- ghost\n""        monster.colorMultiplier:addBuffWithId(GhostBuffId, Vec4.new(0.5, 0.5, 0.5, 0.0))\n""        monster:setScale(monster.scale * 0.85)\n""        monster.hasCollision = false\n""        monster.hasBlood = false\n""        monster.hasGibs = false\n""        monster.data.randomMove = false\n""        monster.data.maxRotateSpeed = monster.data.maxRotateSpeed * 0.8\n""        addCustomOnTick(monster, function (monster)\n""            local diffToPlayer = player.position - monster.position \n""            local distanceToPlayer = diffToPlayer:length()\n""            monster.colorMultiplier:addBuffWithId(GhostBuffId, Vec4.new(0.5, 0.5, 0.5, 0.7 * clamp( 1.0 - (distanceToPlayer - 150.0) / 300 ) ) )\n""        end)\n""    elseif t == 3 then -- hits hard\n""        monster.colorMultiplier:addBuff(Vec4.new(1.0, 0.3, 0.3, 1.0))\n""        monster.data.minDamage = math.floor(monster.data.minDamage * 3.0)\n""        monster.data.maxDamage = math.floor(monster.data.maxDamage * 4.0)\n""        monster.data.hitWaitTime = monster.data.hitWaitTime * 0.5\n""        monster.hitPoint = math.floor(monster.hitPoint * 1.1)\n""        monster.data.maxMoveSpeed = monster.data.maxMoveSpeed * 1.1\n""        monster.data.randomMove = false\n""    elseif t == 4 then -- fast\n""        monster.colorMultiplier:addBuff(Vec4.new(0.2, 0.7, 1.0, 1.0))\n""        monster.data.maxMoveSpeed = monster.data.maxMoveSpeed * 1.65\n""        monster.data.maxRotateSpeed = monster.data.maxRotateSpeed * 2.0\n""        monster.data.minDamage = math.floor(monster.data.minDamage * 0.8)\n""        monster.data.maxDamage = math.floor(monster.data.maxDamage * 0.8)\n""        monster.data.hitWaitTime = monster.data.hitWaitTime * 0.2\n""        monster.knockbackResistance:addBuff(0.4)\n""        monster.hitPoint = math.floor(monster.hitPoint * 0.6)\n""    elseif t == 5 then -- shoots bullets (fast)\n""        monster.colorMultiplier:addBuff(Vec4.new(0.2, 0.7, 0.3, 1.0))\n""        monster.data.shootsBullets = true\n""        monster.data.bulletMinDamage = math.floor(monster.data.bulletMinDamage * (1.0 + min * 0.1))\n""        monster.data.bulletMaxDamage = math.floor(monster.data.bulletMaxDamage * (1.0 + min * 0.1))\n""        \n""        monster.data.bulletRate = 1.0 - clamp(min * 0.1) * 0.4\n""        monster.data.bulletRandom = 0.2 - clamp(min * 0.15) * 0.15\n""        monster.data.bulletCount = 5 + math.floor( min / 2 ) * 2\n""    elseif t == 6 then -- spawns 2 on death\n""        monster.data.remainingLife = 3\n""        monster.colorMultiplier:addBuff(Vec4.new(0.7, 0.2, 0.7, 1.0))\n""        monster:setScale(monster.scale * (1.1 + math.random() * 0.1))\n""        monster.experienceMultiplier = monster.experienceMultiplier * 0.3\n""        monster.scoreMultiplier = monster.scoreMultiplier * 0.3\n""        monster.data.hitPoint = monster.hitPoint\n""        monster.data.onKillFuncSplit = function (monster)\n""            if monster.data.remainingLife > 0 then\n""                monster.data.remainingLife = monster.data.remainingLife - 1\n""                for i = 1,2 do\n""                    if monster.hitPoint > 0 then\n""                        return\n""                    end\n""                    local newMonster = addMonster(monster.monsterTemplate.name)\n""                    newMonster.data.remainingLife = monster.data.remainingLife\n""                    newMonster.position = monster.position\n""                    newMonster:setScale(math.max(0.40, monster.scale * 0.80))\n""                    newMonster.colorMultiplier:addBuff(Vec4.new(0.7, 0.2, 0.7, 1.0))\n""                    newMonster:copyIgnoreId(monster)\n""                    \n""                    newMonster.data.playerSeeRange = monster.data.playerSeeRange\n""                    newMonster.data.maxMoveSpeed = monster.data.maxMoveSpeed * 0.8\n""                    newMonster.data.maxRotateSpeed = monster.data.maxRotateSpeed\n""\n""                    newMonster.data.hitWaitTime = monster.data.hitWaitTime\n""                    newMonster.data.hitInterval = monster.data.hitInterval\n""                    newMonster.data.minDamage = monster.data.minDamage\n""                    newMonster.data.maxDamage = monster.data.maxDamage\n""\n""                    newMonster.experienceMultiplier = monster.experienceMultiplier * 0.5\n""                    newMonster.scoreMultiplier = monster.scoreMultiplier * 0.5\n""\n""                    newMonster.hitPoint = math.floor(monster.data.hitPoint * 0.5)\n""                    newMonster.data.hitPoint = newMonster.hitPoint\n""                    newMonster.moveAngle = monster.moveAngle + math.pi * (i - 0.5)\n""                    newMonster.data.onKillFuncSplit = monster.data.onKillFuncSplit\n""                    addCustomOnKill(newMonster, monster.data.onKillFuncSplit)\n""                    \n""                    newMonster.data.invulTime = time + 0.3\n""                    \n""                    addCustomOnHit(newMonster, function(monster, damage, args)\n""                        if time < monster.data.invulTime then\n""                            return 0\n""                        end\n""                        return damage\n""                    end)\n""                end\n""            end\n""        end\n""        addCustomOnKill(monster, monster.data.onKillFuncSplit)\n""    elseif t == 7 then -- spawns 8 on death\n""        monster.colorMultiplier:addBuff(Vec4.new(0.2, 0.2, 0.2, 1.0))\n""        monster:setScale(1.0 + math.random() * 0.2)\n""        monster.experienceMultiplier = monster.experienceMultiplier * 0.5\n""        monster.scoreMultiplier = monster.scoreMultiplier * 0.5\n""        monster.data.hitPoint = monster.hitPoint\n""        addCustomOnKill(monster, function (monster)\n""            if monster.hitPoint > 0 then\n""                return\n""            end\n""            for i = 1,8 do\n""                local newMonster = addMonster(monster.monsterTemplate.name)\n""                newMonster.position = monster.position\n""                newMonster:setScale(math.max(0.40, monster.scale * 0.50))\n""                newMonster.colorMultiplier:addBuff(Vec4.new(0.2, 0.2, 0.2, 1.0))\n""                newMonster:copyIgnoreId(monster)\n""                \n""                newMonster.data.playerSeeRange = monster.data.playerSeeRange\n""                newMonster.data.maxMoveSpeed = monster.data.maxMoveSpeed * 1.2\n""                newMonster.data.maxRotateSpeed = monster.data.maxRotateSpeed * 0.7\n""\n""                newMonster.data.hitWaitTime = monster.data.hitWaitTime\n""                newMonster.data.hitInterval = monster.data.hitInterval\n""                newMonster.data.minDamage = monster.data.minDamage / 2\n""                newMonster.data.maxDamage = monster.data.maxDamage / 2\n""\n""                newMonster.experienceMultiplier = monster.experienceMultiplier * 0.1\n""                newMonster.scoreMultiplier = monster.scoreMultiplier * 0.1\n""\n""                newMonster.hitPoint = math.floor(monster.data.hitPoint * 0.5)\n""                newMonster.data.hitPoint = newMonster.hitPoint\n""                    \n""                newMonster.data.randomMove = true\n""                newMonster.moveAngle = monster.moveAngle + math.pi * i / 8\n""                \n""                newMonster.data.invulTime = time + 0.3\n""                addCustomOnHit(newMonster, function(monster, damage, args)\n""                    if time < monster.data.invulTime then\n""                        return 0\n""                    end\n""                    return damage\n""                end)\n""            end\n""        end)\n""    elseif t == 8 then -- angel\n""        monster.colorMultiplier:addBuff(Vec4.new(2.0, 2.0, 2.0, 1.0))\n""        monster.data.maxMoveSpeed = math.min(500.0, monster.data.maxMoveSpeed * 3.0)\n""        monster.data.originalSpeed = monster.data.maxMoveSpeed\n""        monster.data.maxRotateSpeed =  monster.data.maxRotateSpeed * 3.0\n""        monster.data.originalRotateSpeed =  monster.data.maxRotateSpeed\n""            \n""        monster.data.minDamage = math.floor(monster.data.minDamage * 0.5)\n""        monster.data.maxDamage = math.floor(monster.data.maxDamage * 0.5)\n""        \n""        monster.data.hitWaitTime = monster.data.hitWaitTime * 0.1\n""        monster.data.hitInterval = monster.data.hitInterval * 0.4\n""        monster.data.targetShift = Vec2.new(0.0, 0.0)\n""        monster.data.randomMove = false\n""        monster.knockbackResistance:addBuff(0.0)\n""        addCustomOnTick(monster, function (monster)\n""            local diffToPlayer = player.position - monster.position \n""            local distanceToPlayer = diffToPlayer:length()\n""            local angleToPlayer = diffToPlayer:getAngle() - math.pi\n""            local angle = 0.2\n""            if distanceToPlayer < 150 then\n""                angle = angle + 1.4 * (1.0 - distanceToPlayer / 150.0)\n""            end\n""            if distanceToPlayer > 1000 or math.abs(angleDiff(angleToPlayer, player.aimAngle)) < angle then\n""                monster.data.maxMoveSpeed = 0.0\n""                monster.animationSpeed = 0.0\n""                monster.moveSpeed = 0.0\n""                monster.data.maxRotateSpeed = 0.0\n""                monster.data.canHit = false\n""            else\n""                monster.data.maxMoveSpeed = monster.data.originalSpeed\n""                monster.animationSpeed = 1.0\n""                monster.data.maxRotateSpeed = monster.data.originalSpeed\n""                monster.data.canHit = true\n""            end\n""        end)\n""    elseif t == 9 then -- invulnerability after hit\n""        monster.colorMultiplier:addBuff(Vec4.new(0.7, 1.7, 0.7, 1.0))\n""        addCustomOnHit(monster, function(monster, damage, args)\n""            if time - monster.data.lastHitTime < 1.0 then\n""                damage = 0\n""            end\n""            \n""            local buffId = monster.moveSpeedMultiplier:addBuffWithId(monster.id, 0.3)\n""            monster.moveSpeedMultiplier:setBuffDuration(buffId, 1.0)\n""            \n""            buffId = monster.colorMultiplier:addBuff(Vec4.new(1.0, 1.0, 1.0, 0.2))\n""            monster.colorMultiplier:setBuffDuration(buffId, 1.0)\n""            monster.data.lastHitTime = time\n""            return damage\n""        end)\n""        addCustomShouldHit(monster, function(monster, gun, bullet)\n""            return monster.data.lastHitTime == nil or time - monster.data.lastHitTime > 1.0\n""        end)\n""    elseif t == 10 then -- blinks\n""        monster.data.blinkParticle = monster:addParticleSpawner(\"CriticalParticle\", {});\n""        monster.colorMultiplier:addBuff(Vec4.new(0.7, 1.7, 1.7, 1.0))\n""        monster.hitPoint = math.floor(monster.hitPoint * 1.5)\n""\n""        addCustomOnHit(monster, function(monster, damage, args)\n""            if monster.hitPoint > damage then\n""                local t = math.random() * math.pi * 2.0\n""                local r = math.random() * 100.0 + 100.0\n""                local v = Vec2.fromAngle(t) * r\n""                for i=1,8 do\n""                    monster:spawnParticle(monster.data.blinkParticle, {initialScale = 15.0, moveSpeed = 150.0})\n""                end\n""                monster.position = monster.position + v\n""                for i=1,8 do\n""                    monster:spawnParticle(monster.data.blinkParticle, {initialScale = 15.0, moveSpeed = 150.0})\n""                end\n""                \n""                playSound({path = \"~/resources/sounds/shimmer.ogg\"})\n""            end\n""            return damage\n""        end)\n""    elseif t == 11 then -- spawn little clones\n""        monster.colorMultiplier:addBuff(Vec4.new(0.722, 0.369, 0.176, 1.0))\n""        monster.moveSpeed = monster.moveSpeed * 0.5\n""        monster.data.maxHitpoint = monster.hitPoint\n""        monster:setScale(0.8 + math.random() * 0.3)\n""        \n""        addCustomOnTick(monster, function (monster)\n""            if monster.data.spawnTimer == nil then\n""                monster.data.spawnTimer = 3.0\n""            end\n""            monster.data.spawnTimer = monster.data.spawnTimer - dt\n""            \n""            if monster.data.spawnTimer < 0.0 then\n""                monster.data.spawnTimer = monster.data.spawnTimer + 5.0\n""                \n""                if missionData.ignoreMonsterCount < 100 then\n""                    local newMonster = addMonster(monster.monsterTemplate.name)\n""                    newMonster.position = monster.position\n""                    newMonster:setScale(math.max(0.3, monster.scale * 0.60))\n""                    newMonster.colorMultiplier:addBuff(Vec4.new(0.722, 0.369, 0.176, 1.0))\n""                    \n""                    newMonster.data.playerSeeRange = monster.data.playerSeeRange\n""                    newMonster.data.maxMoveSpeed = monster.data.maxMoveSpeed * 0.8\n""                    newMonster.data.maxRotateSpeed = monster.data.maxRotateSpeed\n""\n""                    newMonster.data.hitWaitTime = monster.data.hitWaitTime\n""                    newMonster.data.hitInterval = monster.data.hitInterval\n""                    newMonster.data.minDamage = math.ceil(monster.data.minDamage * 0.4)\n""                    newMonster.data.maxDamage = math.ceil(monster.data.maxDamage * 0.4)\n""\n""                    newMonster.experienceMultiplier = 0.0\n""                    newMonster.scoreMultiplier = 0.0\n""\n""                    newMonster.hitPoint = math.floor(monster.data.maxHitpoint * 0.2)\n""                    newMonster.data.randomMove = true\n""                    newMonster.moveAngle = -monster.moveAngle\n""                    \n""                    ignoreMonsterForCount(newMonster)\n""                end\n""            end\n""        end)\n""    end\n""end\n""\n""function removeBuffIcon(name, dontUpdate)\n""    local buffData = missionData.buffs[name] \n""    if buffData ~= nil then\n""        missionData.buffObject:removeTexture(buffData.renderable)\n""        missionData.buffs[name] = nil\n""        missionData.buffCount = missionData.buffCount - 1\n""        \n""        if dontUpdate ~= true then\n""            updateBuffPositions()\n""        end\n""    end\n""end\n""\n""function addBuffIcon(name, path)\n""    if missionData.buffObject == nil then\n""        missionData.buffObject = addGameObject(\"BuffIcons\")\n""        missionData.buffObject:setAlignment(RenderableAlignment.top)\n""        missionData.buffObject:setLevel(RenderableLevel.GUI)\n""        BuffIcons.repositionGUI(missionData.buffObject)\n""        missionData.buffs = {}\n""        missionData.buffCount = 0\n""    end\n""    \n""    removeBuffIcon(name, true)\n""    \n""    local buffObject = missionData.buffObject\n""    local renderable = buffObject:addTexture(path, \"~/resources/default\")\n""    renderable:setAlignment(RenderableAlignment.top)\n""    \n""    local buffData = {}\n""    buffData.renderable = renderable\n""    buffData.name = name\n""    buffData.id = getUniqueId()\n""    missionData.buffs[name] = buffData\n""    missionData.buffCount = missionData.buffCount + 1\n""    \n""    updateBuffPositions()\n""end\n""\n""function updateBuffPositions()\n""    local p = 0\n""    local shift = (missionData.buffCount - 1) * 34.0 / 2\n""    \n""    for key,value in pairs(missionData.buffs) do\n""        value.renderable:setWorldMatrix(Mat3.fromPositionAndScale(Vec2.new(p * 34 - shift, 0), Vec2.new(15.0, 15.0)))\n""        p = p + 1\n""    end\n""end\n""\n""BuffIcons = {}\n""function BuffIcons.init()\n""end\n""function BuffIcons.repositionGUI(gameObject, size)\n""    gameObject:setPosition(Vec2.new(0, -90 / getCameraZoom()))\n""    gameObject:setScale(Vec2.new(1.0 / getCameraZoom(), 1.0 / getCameraZoom()))\n""end\n""\n""\n""function ignoreMonsterForCount(monster)\n""    if monster.data.ignoreForCount ~= true then\n""        monster.data.ignoreForCount = true\n""        missionData.ignoreMonsterCount = missionData.ignoreMonsterCount + 1\n""    end\n""end\n""\n""function canSpawnMonster()\n""    return (missionData.maxMonster == nil or getMonsterCount() < missionData.maxMonster + missionData.ignoreMonsterCount)\n""end\n""\n""function canSpawnIgnoredMonster()\n""    return (missionData.maxMonster == nil or getMonsterCount() < missionData.maxMonster) and (missionData.ignoreMonsterCount == nil or missionData.ignoreMonsterCount < 100)\n""end\n""\n""function gameResetTick()\n""    if missionData.enableReset == true then\n""        if missionData.scoreText ~= nil then\n""            missionData.scoreText:setText(\"Score : \" .. getScore())\n""        end\n""        \n""        if isKeyPressed(keys.Space) then\n""            loadMission(missionScript)\n""        end\n""    end\n""end\n""    \n""function showGameReset(title)\n""    if title == nil then\n""        title = \"You Died\"\n""    end\n""    local space = 0.0\n""    if string.match(title, \"\\n""\") then\n""        space = 50.0\n""    end\n""    \n""    local gameObject = addGameObject(\"FadeOutImage\")\n""    gameObject.data.startTime = time\n""    gameObject.data.fadeOutStartTime = -1\n""    gameObject.data.fadeInDuration = 1.0\n""    gameObject:setLevel(RenderableLevel.GUI + 5)\n""    gameObject.data.renderable = gameObject:addText(title, \"resources/fontData.txt\")\n""    gameObject.data.renderable:setAlignment(RenderableAlignment.center)\n""    gameObject.data.renderable:setTextAlignment(TextAlignment.center)\n""    gameObject.data.renderable:setTextSize(120.0)\n""    gameObject:setPosition(Vec2.new(0, 50 + space))\n""    \n""    gameObject = addGameObject(\"FadeOutImage\")\n""    gameObject.data.startTime = time\n""    gameObject.data.fadeOutStartTime = -1\n""    gameObject.data.fadeInDuration = 1.0\n""    gameObject:setLevel(RenderableLevel.GUI + 5)\n""    gameObject.data.renderable = gameObject:addText(\"Press Space to Reset\", \"resources/fontData.txt\")\n""    gameObject.data.renderable:setAlignment(RenderableAlignment.center)\n""    gameObject.data.renderable:setTextAlignment(TextAlignment.center)\n""    gameObject.data.renderable:setTextSize(32.0)\n""    gameObject:setPosition(Vec2.new(0, -40 -space))\n""    \n""    gameObject = addGameObject(\"FadeOutImage\")\n""    gameObject.data.startTime = time\n""    gameObject.data.fadeOutStartTime = -1\n""    gameObject.data.fadeInDuration = 1.0\n""    gameObject:setLevel(RenderableLevel.GUI + 5)\n""    gameObject.data.renderable = gameObject:addText(\"Esc to Exit\", \"resources/fontData.txt\")\n""    gameObject.data.renderable:setAlignment(RenderableAlignment.center)\n""    gameObject.data.renderable:setTextAlignment(TextAlignment.center)\n""    gameObject.data.renderable:setTextSize(32.0)\n""    gameObject:setPosition(Vec2.new(0, -80-space))\n""    \n""    gameObject = addGameObject(\"FadeOutImage\")\n""    gameObject.data.startTime = time\n""    gameObject.data.fadeOutStartTime = -1\n""    gameObject.data.fadeInDuration = 1.0\n""    gameObject:setLevel(RenderableLevel.GUI + 5)\n""    gameObject.data.renderable = gameObject:addText(\"Score : \" .. getScore(), \"resources/fontData.txt\")\n""    gameObject.data.renderable:setAlignment(RenderableAlignment.center)\n""    gameObject.data.renderable:setTextAlignment(TextAlignment.center)\n""    gameObject.data.renderable:setTextSize(32.0)\n""    gameObject:setPosition(Vec2.new(0, -160-space))\n""    \n""    missionData.scoreText = gameObject.data.renderable\n""    \n""    missionData.enableReset = true\n""end\n""\n""function missionInit(missionData)\n""    missionData.ignoreMonsterCount = 0\n""end\n""\n""function debugInit(missionData)\n""    missionData.extraMin = 0.0\n""end\n""\n""function debugTick(missionData)\n""\n""    if hasCheats() then\n""        if isKeyReleased(keys.PageUp) then\n""            missionData.extraMin = missionData.extraMin + 0.5\n""            log(\"Extra Min \" .. missionData.extraMin)\n""        end\n""        if isKeyReleased(keys.PageDown) then\n""            missionData.extraMin = missionData.extraMin - 0.5\n""            if missionData.extraMin < 0.0 then\n""                missionData.extraMin = 0.0\n""            end\n""            log(\"Extra Min \" .. missionData.extraMin)\n""        end\n""    end\n""end\n""\n""\n""function addRandomColliders(count, distanceToMid)\n""    local colliderSpawnChances = {}\n""    local totalChance = 0.0\n""    for name,collider in pairs(Colliders) do \n""        local chance = 1.0\n""        if collider.jsonTable.chance ~= nil then\n""            chance = collider.jsonTable.chance\n""        end\n""        totalChance = totalChance + chance\n""        colliderSpawnChances[name] = chance\n""    end\n""    \n""    for i=1,count do\n""        local m = nil\n""        local randChance = math.random() * totalChance\n""        for key,value in pairs(colliderSpawnChances) do\n""            randChance = randChance - value\n""            if randChance <= 0.000001 then\n""                m = key\n""                break\n""            end\n""        end\n""        if m ~= nil then\n""            addGameObjectUsingTemplate(m, {distanceToMid = distanceToMid})\n""        end\n""    end\n""end\n""\n"""}, 
{"resources/missions/narsie_fight/boss.lua", "\n""function NarSieFight.init()\n""    local theSeed = os.time()\n""    math.randomseed( theSeed )\n""    missionData = {}\n""    debugInit(missionData)\n""    missionInit(missionData)\n""    missionData.perkPerLevel = 4\n""    missionData.startTime = time\n""    missionData.firstTick = true\n""    missionData.levelUpBonusChance = 1.0\n""    \n""    local mapSize = getMapSize()\n""    local colliderCount = math.floor((mapSize.x * mapSize.y) / 300000 + 20 )\n""    addRandomColliders(colliderCount, 400.0)\n""end\n""\n""function NarSieFight.onTick()\n""    min = missionTime / 60.0 + missionData.extraMin\n""\n""    if player.isDead then\n""        if isKeyPressed(keys.Space) then\n""            loadMission(\"NarSieFight\")\n""        end\n""        \n""        return\n""    end\n""\n""    if missionData.firstTick == true then\n""        local m = addMonster(\"NarSie\")\n""        missionData.narsie = m\n""        \n""        m.position = player.position + Vec2.new(0.0, 200.0)\n""        \n""        missionData.health = addGameObject(\"HealthBar\")\n""        \n""        missionData.maxHitPoint = m.hitPoint\n""        missionData.spawnTimer = 0.0\n""        calcRandomSpawns()\n""        local spawn = 50\n""        \n""        local rateMult = 1.0 + (getMapSize().x - 3000.0) / 3000.0\n""        spawn = math.floor(rateMult * spawn)\n""        \n""        for i = 1, spawn do\n""            NarSieFight.addMonster()\n""        end\n""        \n""        local guns = {}\n""        for i= -2,2 do\n""            while true do\n""                local g = getRandomGun()\n""                if guns[g.scriptName] ~= true then\n""                    guns[g.scriptName]  = true\n""                    spawnGun(player.position + Vec2.fromAngle(-math.pi * 0.5 + 0.7 * i) * 170.0, g.scriptName)\n""                    break\n""                end\n""            end\n""        end\n""    end\n""    \n""    if missionData.narsie ~= nil then\n""        missionData.spawnTimer = missionData.spawnTimer - dt\n""        \n""        if missionData.spawnTimer < 0.0 then\n""            local rateMult = 1.0 + (getMapSize().x - 3000.0) / 5000.0\n""            missionData.spawnTimer = 1.5 / rateMult\n""            NarSieFight.addMonster()\n""        end\n""        \n""        HealthBar.updateBar(missionData.health, missionData.narsie.hitPoint / missionData.maxHitPoint)\n""        missionData.firstTick = false\n""    end\n""    gameResetTick()\n""end\n""\n""function NarSieFight.onNarSieKilled(monster)\n""    missionData.health.toBeRemoved = true\n""    missionData.health = nil\n""    missionData.narsie = nil\n""    \n""    local count = getMonsterCount()\n""    for i = 0, count - 1 do\n""        local monster = getMonsterAtIndex(i)\n""        monster.experienceMultiplier = 0.0\n""        monster.scoreMultiplier = 0.0\n""        monster:doDamage(10000, Vec2.randDir())\n""    end\n""    \n""    showGameReset(\"You're\\n""Winner !\")\n""end\n""\n""\n""function NarSieFight.addMonster()\n""    local pos = getRandomPosition( {canBeEdge=true, notNearPlayer=true, notNearMonsters=true, playerRange=800.0})\n""    local monster = addRandomMonster(nil, true, true)\n""    \n""    monster.experienceMultiplier = monster.experienceMultiplier * 2\n""    monster.data.shootsBullets = false\n""    monster.position = pos\n""    monster.moveAngle =  math.random() * math.pi * 2.0\n""    monster.data.randomMove = true\n""    monster.data.maxMoveSpeed = monster.data.maxMoveSpeed * 0.5\n""    monster:setScale(0.7)\n""    monster.data.playerSeeRange = monster.data.playerSeeRange * 0.3\n""    monster.colorMultiplier:addBuff(Vec4.new(0.5, 0.5, 0.5, 1.0))\n""end\n""function NarSieFight.onPlayerDied()\n""    showGameReset()\n""end\n""\n""function NarSieFight.onMonsterDied(monster)\n""end\n""\n""function NarSieFight.onDebugTick()\n""    debugTick(missionData)\n""end\n""\n""\n""HealthBar = {}\n""\n""function HealthBar.init(gameObject)\n""    gameObject:setLevel(RenderableLevel.GUI + 5)\n""    \n""    gameObject.data.barBG = gameObject:addTexture(missionPath .. \"bar_bg.png\", \"~/resources/default\")\n""    gameObject.data.barBG:setAlignment(RenderableAlignment.bottom)\n""    gameObject.data.barBG:setWorldMatrix(Mat3.fromScale(286.0, 24.0))\n""    \n""    \n""    gameObject.data.bar = gameObject:addTexture(missionPath .. \"bar.png\", missionPath .. \"bar\")\n""    gameObject.data.bar:setAlignment(RenderableAlignment.bottom)\n""    gameObject.data.bar:setWorldMatrix(Mat3.fromScale(286.0, 24.0))\n""    gameObject.data.bar:setColor(Vec4.fromColor(0x44FFFFFF))\n""    \n""    gameObject.data.barFG = gameObject:addTexture(missionPath .. \"bar_fg.png\", \"~/resources/default\")\n""    gameObject.data.barFG:setAlignment(RenderableAlignment.bottom)\n""    gameObject.data.barFG:setWorldMatrix(Mat3.fromScale(300.0, 40.0))\n""    \n""    gameObject:setPosition(Vec2.new(0, 40))\n""    \n""    HealthBar.updateBar(gameObject, 1.0)\n""    HealthBar.repositionGUI(gameObject)\n""end\n""\n""function HealthBar.repositionGUI(gameObject, size)\n""    gameObject:setPosition(Vec2.new(0, 60 / getCameraZoom()))\n""    gameObject:setScale(Vec2.new(0.5 / getCameraZoom(), 0.5 / getCameraZoom()))\n""end\n""\n""\n""function HealthBar.updateBar(gameObject, scale)\n""    gameObject.data.bar:setUniformFloat(\"uScale\", scale)\n""end"}, 
{"resources/missions/narsie_fight/data.json", "{\n""  \"type\": \"mission\",\n""  \"name\": \"Rise of Nar-Sie\",\n""  \"description\": \" NAR-SIE HAS RISEN\\n""Some cults have managed to tear the reality and summon Nar-Sie, can you beat a god?\",\n""  \n""  \"icon\": \"icon.png\",\n""  \n""  \"scriptFile\" : \"boss.lua\",\n""  \"scriptName\" : \"NarSieFight\"\n""}"}, 
{"resources/missions/narsie_fight/narsie/data.json", "{\n""  \"type\" : \"monster\",\n""  \"name\": \"Nar-Sie\",\n""  \"hitPoint\": 66666,\n""  \"size\" : [80.0, 80.0],\n""  \"textureShift\" : [0.0, -10.0],\n""  \"bulletRadius\" : 40.0,\n""  \"collisionRadius\" : 40.0,\n""  \"hasBlood\" : true,\n""  \n""  \"experience\" : 0,\n""  \"score\" : 0,\n""  \n""  \"animations\" : \n""  {\n""    \"stand\" : \n""    {\n""        \"looped\" : true,\n""        \"frameDuration\" : 0.12,\n""        \"frames\":\n""        [\n""            \"body_base.png\"\n""        ]\n""    },\n""    \n""    \"inhale\" : \n""    {\n""        \"looped\" : false,\n""        \"frameDuration\" : 0.15,\n""        \"frames\":\n""        [\n""            \"body_0.png\",\n""            \"body_1.png\",\n""            \"body_2.png\",\n""            \"body_3.png\",\n""            \"body_4.png\",\n""            \"body_5.png\",\n""            \"body_6.png\",\n""            \"body_7.png\"\n""        ]\n""    }\n""  },\n""  \n""  \"scriptFile\" : \"narsie.lua\",\n""  \"scriptName\" : \"NarSie\",\n""  \n""  \"hitSounds\" : [\n""    \"~/resources/sounds/monster_hit/hit_0.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_1.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_2.ogg\"\n""  ],\n""  \n""  \"killSounds\" : [\n""    \"~/resources/sounds/monster_hit/hit_0.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_1.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_2.ogg\"\n""  ]\n""}"}, 
{"resources/missions/narsie_fight/narsie/narsie.lua", "\n""function NarSie.init(monster, min)\n""    data = monster.data\n""\n""    monster.moveSpeed = 0.0\n""    monster.moveAngle = 0.0\n""    monster.spriteAngle = math.pi * -0.5\n""    \n""    monster:playAnimation(\"stand\")\n""    \n""    monster:setDrawLevel(RenderableLevel.player + 20)\n""\n""    monster.knockbackResistance:addBuff(0.01)\n""    \n""    monster.canGetOneShooted = false\n""    monster.hasCollision = false\n""    \n""    data.inhaleTimer = 0.0\n""    data.currentAttack = nil\n""    data.currentAttackTimer = 8.0\n""    \n""    data.diff = 0.0\n""    \n""    NarSie.resetTarget(monster)\n""    data.attacks = { NarSie.ringBullets, NarSie.arcBullets, NarSie.fireballs, NarSie.spawnSpiders, NarSie.explosions, NarSie.explosionsAroundPlayer }\n""    \n""    --data.attacks = { NarSie.fireballs2 }\n""    --data.currentAttackTimer = 0.0\n""    \n""    data.timeToNextHit = 0.0\n""    data.defaultShootTimer = 2.0\n""    \n""    data.startTime = time\n""    data.firstTick = true\n""    data.pulling = false\n""    data.pullTimer = 0.0\n""    data.damageAmount = 0.0\n""    monster.removeOnDead = false\n""    monster:setVisible(false)\n""    \n""    addCustomOnHit(monster, NarSie.onCustomHit)\n""end\n""\n""function NarSie.spawnChanceInMission(missionData, min)\n""    return 0.0\n""end\n""\n""function NarSie.onCustomHit(monster, damage, dir, args)\n""    local data = monster.data\n""    data.damageAmount = data.damageAmount + damage\n""    local maxDamage = 500\n""    if data.damageAmount > maxDamage then\n""        damage = damage - (data.damageAmount - maxDamage)\n""        data.damageAmount = maxDamage\n""    end\n""    if data.spawning then\n""        return 0\n""    end\n""    addScore(math.floor(damage / 10))\n""    return damage\n""end\n""\n""function NarSie.onKilled(monster)\n""    NarSieFight.onNarSieKilled(monster)\n""    monster.data.deathTimer = time\n""    \n""    playSound({path = missionPath .. \"narsie/laugh.ogg\", position = monster.position, volume = 1.1})\n""    \n""    if hasAchievement( \"ACH_NAR_SIE\" ) == false and player.isDead == false then\n""        addAchievement( \"ACH_NAR_SIE\" ) \n""    end\n""end\n""\n""function NarSie.onTick(monster)\n""    data = monster.data\n""    data.damageAmount = data.damageAmount - dt * 600\n""    if data.damageAmount < 0.0 then\n""        data.damageAmount = 0.0\n""    end\n""    if data.firstTick == true then\n""        data.firstTick = false\n""        \n""        data.blackHole = addPostProcess(\"resources/post_process/blackhole.ps\")\n""        data.blackHole:setEnabled(true)\n""        \n""        playSound({path = BlackHole.basePath .. \"black_hole.ogg\", position = monster.position, volume = 0.8})\n""        data.spawning = true\n""    end\n""    \n""    if data.spawning then\n""        local t = (time - data.startTime) * 1.5\n""    \n""        local v = convertToScreenPosition(monster.position)\n""        data.blackHole:addUniformVec2(\"uRelBlackHolePos\", v)\n""        \n""        local size = 0.8\n""        if t < 1.0 then\n""            data.blackHole:setShaderWeight(t * size)\n""        elseif t < 8.0 then\n""            if data.soundPlayed == nil and t > 1.2 then\n""                data.soundPlayed = true\n""                playSound({path = missionPath .. \"narsie/spawn.ogg\", position = monster.position, volume = 1.5})\n""            end\n""            data.blackHole:setShaderWeight(size)\n""        elseif t < 9.0 then\n""            if monster:isVisible() == false then\n""                monster:setVisible(true)\n""            end\n""            data.blackHole:setShaderWeight((9.0 - t) * size)\n""            local scale = (t - 8.0) * 2.0 + 0.2\n""            if scale > 1.0 then\n""                scale = 1.0\n""            end\n""            monster:setScale(scale)\n""        else\n""            monster:setScale(1.0)\n""            data.blackHole:setEnabled(false)\n""            data.spawning = false\n""        end\n""        return\n""    end\n""    \n""    if data.deathTimer ~= nil then\n""        t = (time - data.deathTimer) * 1.5 \n""        if data.blackHole:isEnabled() == false then\n""            data.blackHole:setEnabled(true)\n""        end\n""        \n""        local v = convertToScreenPosition(monster.position)\n""        data.blackHole:addUniformVec2(\"uRelBlackHolePos\", v)\n""        \n""        local size = 0.8\n""        if t < 1.0 then\n""            data.blackHole:setShaderWeight(t * size)\n""        elseif t < 1.2 then\n""            data.blackHole:setShaderWeight(size)\n""            monster:setScale(1.02- t)\n""        elseif t < 2.2 then\n""            monster:setVisible(false)\n""            data.blackHole:setShaderWeight((2.2 - t) * size)\n""        else\n""            monster.removeOnDead = true\n""        end\n""        return\n""    end\n""    \n""    local d = data.target:distanceSquared(monster.position)\n""    if d < 10000 then\n""        NarSie.resetTarget(monster)\n""    else\n""        local toTarget = data.target - monster.position\n""        local angle = toTarget:getAngle()\n""        monster.moveAngle = approachAngle(monster.moveAngle, angle, 3.0 * dt)\n""    end\n""    \n""    \n""    local diffToPlayer = player.position - monster.position\n""    local distanceToPlayer = diffToPlayer:length()\n""    \n""    \n""    if data.pulling then\n""        data.pullTimer = data.pullTimer - dt\n""        \n""        local m = data.pullTimer * 0.5\n""    \n""        m = m * distanceToPlayer / 400.0\n""            \n""        if m > 1.0 then\n""            m = 1.0\n""        end\n""        player:addKnockback(-diffToPlayer:normalized() * 700.0 * m, -1.0)\n""        \n""        if data.pullTimer < 0.0 then\n""            data.pulling = false\n""        end\n""    else\n""        local range = 800.0 - min * 30.0 \n""        if distanceToPlayer > range then\n""        \n""            data.pullTimer = data.pullTimer + dt * clamp((distanceToPlayer - range) / 50.0)\n""            \n""            local maxStay = 0.8\n""            local c = 1.0 - data.pullTimer / maxStay\n""            local buff = player.colorMultiplier:addBuffWithId(monster.id, Vec4.new(1.0, c, c, 1.0))\n""            player.colorMultiplier:setBuffDuration(buff, 0.1)\n""            player.colorMultiplier:setBuffFadeInFadeOut(buff, 0.0, 0.1)\n""            \n""            if data.pullTimer > maxStay then\n""                data.pulling = true\n""                data.pullTimer = 2.0\n""            end\n""        else\n""            data.pullTimer = 0.0\n""        end\n""    \n""    end\n""    \n""    if distanceToPlayer < 90 and data.timeToNextHit < time and player.isDead == false then\n""        local damage = player:doDamage(math.floor(15 + math.random() * 5), angleToPlayer)\n""        data.timeToNextHit = time + 1.0\n""        if damage > 0 then\n""            playSound({path = \"~/resources/sounds/melee_woosh.ogg\", volume = 0.3})\n""            if player.data.noSlowdownOnHit == nil then\n""                player.maxSpeed:addBuffWithId(MonsterMeleeHelper.slowBuffId, 0.5)\n""                player.maxSpeed:setBuffDuration(MonsterMeleeHelper.slowBuffId, 0.1)\n""                player.maxSpeed:setBuffFadeInFadeOut(MonsterMeleeHelper.slowBuffId, 0.1, 0.1)\n""            end\n""        end\n""        \n""        local t = MeleeHitImage.build(monster)\n""        \n""        t.data.renderable:setWorldMatrix(Mat3.fromScale(30.0, 30.0))\n""        t:setPosition(player.position)\n""        t:setRotation(-math.pi * 0.5 - diffToPlayer:getAngle())\n""    end\n""    \n""        \n""    data.inhaleTimer = data.inhaleTimer - dt\n""    \n""    if data.inhaleTimer < 0.0 then\n""        data.inhaleTimer = 1.0 + math.random() * 1.0\n""        monster:playAnimation(\"inhale\")\n""    end\n""    \n""    if data.currentAttack == nil then\n""        if monster.moveSpeed < 25.0 then\n""            monster.moveSpeed = monster.moveSpeed + dt * 4.0\n""            if monster.moveSpeed > 25.0 then\n""                monster.moveSpeed = 25.0\n""            end\n""        end\n""    \n""        data.currentAttackTimer = data.currentAttackTimer - dt\n""        if data.currentAttackTimer < 0.0 then\n""            data.currentAttack = data.attacks[ math.random( #data.attacks ) ]\n""            data.currentAttack(monster, true)\n""            data.currentAttackTimer = 10.0\n""            data.defaultShootTimer = 2.0\n""        end\n""        \n""        data.defaultShootTimer = data.defaultShootTimer - dt\n""        \n""        if data.defaultShootTimer < 0.0 and data.currentAttackTimer > 1.0 then\n""            data.defaultShootTimer = data.defaultShootTimer + lerp(1.2, 0.6, clamp(min /10.0))\n""            local b = NarSie.sendFireBall(monster)\n""            b.moveAngle = b.moveAngle + (math.random() * 0.5 - 0.25) * lerp(1.0, 0.3, clamp(min * 0.15))\n""            \n""        end\n""    else \n""        if monster.moveSpeed > 0.0 then\n""            monster.moveSpeed = monster.moveSpeed - dt * 4.0\n""            if monster.moveSpeed < 0.0 then\n""                monster.moveSpeed = 0.0\n""            end\n""        end\n""        data.currentAttack(monster, false)\n""    end\n""    \n""end\n""\n""function NarSie.resetTarget(monster)\n""    local t = math.random()\n""    \n""    monster.data.target = Vec2.randDir() * 300.0 * math.sqrt(t)\n""end\n""\n""function NarSie.explosionsAroundPlayer(monster, init)\n""    if init then\n""        data.expAroundPlayerData = {}\n""        local expAroundPlayerData = data.expAroundPlayerData\n""        expAroundPlayerData.timeToShoot = 0.0\n""        expAroundPlayerData.count = 30 + clamp(min * 3)\n""        expAroundPlayerData.interval = lerp(0.22, 0.15, clamp(min * 0.1))\n""    end\n""    \n""    local expAroundPlayerData = data.expAroundPlayerData\n""    \n""    expAroundPlayerData.timeToShoot = expAroundPlayerData.timeToShoot - dt\n""    \n""    if expAroundPlayerData.timeToShoot < 0.0 and expAroundPlayerData.count > 0 then\n""        expAroundPlayerData.timeToShoot = expAroundPlayerData.timeToShoot + expAroundPlayerData.interval\n""    \n""    \n""        local g = addGameObject(\"ExpAroundPlayerObject\")\n""        local t = math.random()\n""        g.data.pos = player.position + Vec2.randDir() * math.sqrt(t) * 200.0\n""        g.data.maxTime = 1.0\n""        expAroundPlayerData.count = expAroundPlayerData.count - 1\n""    end\n""    \n""    if expAroundPlayerData.count <= 0 and expAroundPlayerData.timeToShoot < -2.0 then\n""        data.currentAttack = nil\n""    end\n""end \n""\n""\n""ExpAroundPlayerObject = {}\n""\n""function ExpAroundPlayerObject.init(gameObject)\n""    gameObject:setLevel(RenderableLevel.player + 15)\n""    \n""    gameObject.data.ring = gameObject:addTexture(missionPath .. \"narsie/ring.png\", \"~/resources/default\")\n""    gameObject.data.ring:setAlignment(RenderableAlignment.world)\n""    gameObject.data.ring:setWorldMatrix(Mat3.fromScale(60.0, 60.0))\n""    gameObject.data.ring:setColor(Vec4.new(1.0, 0.8, 0.0, 0.0))\n""    gameObject.data.time = 0.0\n""end\n""\n""function ExpAroundPlayerObject.onTick(gameObject)\n""    local t = gameObject.data.time /  gameObject.data.maxTime\n""    gameObject.data.time = gameObject.data.time + dt\n""    local alpha\n""    if t < 0.1 then\n""        alpha = t / 1.0\n""    elseif t > 0.98 then\n""        alpha = (1.0 - t) / 0.02\n""    else\n""        alpha = 1.0\n""    end\n""    if t > 1.0 then\n""        gameObject.toBeRemoved = true\n""        alpha = 0.0\n""        t = 1.0\n""        addExplosion(gameObject.data.pos, 50.0, 80.0, 20, 40, 0.2, true, nil, true)\n""        \n""        local d = gameObject.data.pos:distance(player.position)\n""        d = clamp(1.0 - d / 200.0) * 0.4\n""        playSound({path = missionPath .. \"~/resources/sounds/explode.ogg\", position = gameObject.data.pos, volume = 0.1 + d })\n""        \n""    end\n""    gameObject.data.ring:setColor(Vec4.new(1.0, 1.0, 0.3, alpha * 0.6))\n""    gameObject:setPosition(gameObject.data.pos)\n""    gameObject:setScale(Vec2.new(1.0 - t * 0.8, 1.0 - t * 0.8))\n""end\n""\n""\n""function NarSie.explosions(monster, init)\n""    if init then\n""        data.explosionsData = {}\n""        local explosionsData = data.explosionsData\n""        explosionsData.timeToShoot = 0.0\n""        explosionsData.shootSpeed = lerp(1.0, 1.5, clamp(min * 0.1))\n""        explosionsData.count = 6\n""        explosionsData.interval = lerp(0.8, 0.4, clamp(min * 0.1))\n""        \n""    end\n""    \n""    local explosionsData = data.explosionsData\n""    \n""    explosionsData.timeToShoot = explosionsData.timeToShoot - dt\n""    \n""    if explosionsData.timeToShoot < 0.0 and explosionsData.count > 0 then\n""        explosionsData.timeToShoot = explosionsData.timeToShoot + explosionsData.interval\n""    \n""        addExplosion(monster.position, 500.0, 150.0 * explosionsData.shootSpeed, 30 - explosionsData.count * 3, 40 - explosionsData.count * 3, 0.0, true, nil, explosionsData.count ~= 6 and explosionsData.count ~= 3 )\n""        \n""        playSound({path = missionPath .. \"narsie/explosion07.ogg\", position = monster.position, volume = 1.5})\n""        explosionsData.count = explosionsData.count - 1\n""    end\n""    \n""    if explosionsData.count <= 0 and explosionsData.timeToShoot < -2.0 then\n""        data.currentAttack = nil\n""    end\n""end \n""\n""function NarSie.spawnSpiders(monster, init)\n""    if init then\n""        data.timeToShoot = 0.0\n""        data.shift = 0.0\n""        data.count = 0\n""        data.numSpiders = math.floor(7 + min * 1 )\n""        data.interval = lerp(0.15, 0.10, clamp(min * 0.1))\n""        data.min = min\n""        data.angleShift = math.random() * 2.0 * math.pi\n""    end\n""    data.timeToShoot = data.timeToShoot - dt\n""    if data.timeToShoot < 0.0 and data.numSpiders > 0 then\n""        data.timeToShoot = data.timeToShoot + data.interval\n""       \n""        local newMonster = addMonster(\"Spider\")\n""        Spider.buffStats(newMonster, monster.data.min)\n""        data = monster.data\n""        newMonster.position = monster.position\n""        newMonster:setScale(0.5)\n""        newMonster.colorMultiplier:addBuff(Vec4.new(0.2, 0.2, 0.2, 1.0))\n""\n""        playSound({path = missionPath .. \"narsie/spiderling.ogg\", position = monster.position, volume = 1.0})\n""        \n""        newMonster.data.randomMove = false\n""\n""        newMonster.experienceMultiplier = 0\n""        newMonster.scoreMultiplier = 0\n""        newMonster.moveSpeed = newMonster.moveSpeed * 1.6\n""        newMonster.hitPoint = 50\n""        newMonster.data.moveTimer = 60.0\n""        newMonster.moveAngle = math.pi * data.numSpiders / 8 + data.angleShift\n""        \n""        data.numSpiders = data.numSpiders - 1\n""        \n""    end\n""    \n""    if data.numSpiders <= 0 and data.timeToShoot < -3.0 then\n""        data.currentAttack = nil\n""    end\n""end\n""\n""function NarSie.fireballs(monster, init)\n""    if init then\n""        data.timeToShoot = 0.0\n""        data.shift = 0.0\n""        data.count = 0\n""        data.numBullets = math.floor(3 + min * 0.1 )\n""        data.interval = lerp(0.8, 0.3, clamp(min * 0.1))\n""        data.totalCount = lerp(6, 12, clamp(min * 0.1))\n""        data.iter = 0\n""        \n""        data.s = 1.0\n""        if math.random() < 0.5 then\n""            data.s = -1.0\n""        end\n""    end\n""    \n""    data.timeToShoot = data.timeToShoot - dt\n""    \n""    if data.timeToShoot < 0.0 then\n""        \n""        local half = math.floor(data.numBullets / 2)\n""        \n""        local b = NarSie.sendFireBall(monster, data.s)\n""    \n""        b.moveAngle = b.moveAngle + (data.iter - half) * math.pi * 0.3 / data.numBullets\n""        b.damage = math.floor(b.damage / 2)\n""        \n""        data.iter = data.iter + 1\n""        \n""        if data.iter == data.numBullets then\n""            data.iter = 0\n""            data.timeToShoot = data.timeToShoot + data.interval\n""            data.totalCount = data.totalCount - 1\n""            \n""            if math.random() < 0.5 then\n""                data.s = -data.s\n""            end\n""            if data.totalCount <= 0 then\n""                data.currentAttack = nil\n""            end\n""        else\n""            data.timeToShoot = 0.1\n""        end\n""    end\n""end\n""\n""\n""\n""function NarSie.fireballs2(monster, init)\n""    if init then\n""        data.timeToShoot = 0.0\n""        data.shift = 0.0\n""        data.interval = lerp(0.2, 0.12, clamp(min * 0.1))\n""        data.totalCount = lerp(20, 30, clamp(min * 0.1))\n""    end\n""    \n""    data.timeToShoot = data.timeToShoot - dt\n""    \n""    if data.timeToShoot < 0.0 then\n""        if data.totalCount > 0 then\n""            \n""            data.timeToShoot = data.timeToShoot + data.interval\n""            local b = NarSie.sendFireBall(monster)\n""            b.damage = math.floor(b.damage / 2)\n""            b.moveAngle = b.moveAngle + (math.random() * 0.5 - 0.25) * lerp(1.0, 0.3, clamp(min * 0.15))\n""            \n""            data.totalCount = data.totalCount - 1\n""        end\n""    end\n""    \n""    \n""    if data.timeToShoot < -1.0 and data.totalCount <= 0 then\n""        data.currentAttack = nil\n""    end\n""end\n""\n""\n""\n""\n""function NarSie.sendFireBall(monster, s)\n""    local bullet = addCustomBullet({monsterBullet = true})\n""    bullet.damage = math.floor(math.random(20, 30))\n""    bullet.moveSpeed =  300.0 + min * 30.0\n""\n""    playSound({path = missionPath .. \"narsie/fireball.ogg\", position = monster.position, volume = 0.5})\n""    \n""    if s == nil then\n""        s = 1.0\n""        if math.random() < 0.5 then\n""            s = -1.0\n""        end\n""    end\n""    bullet.position = monster.position + Vec2.new( s * 50, -30.0)\n""    \n""    local d = player.position:distance(bullet.position) / bullet.moveSpeed\n""   \n""    local futurePos = player.position + player.moveVelocity * d\n""    \n""    bullet.moveAngle = (futurePos - bullet.position):getAngle()\n""    \n""    bullet.radius = 6.0\n""    bullet:addRenderableTextureWithSize(monster.monsterTemplate.basePath .. \"bullet.png\", Vec2.new(4.0, 4.0))\n""    \n""    \n""    -- fix\n""    -- particle = bullet:addTrailParticle(\"FlameParticle\", Vec2.new(0.0, 0.0), 4.0, {})\n""    \n""    particle = bullet:addTrailParticle(\"RocketSmokeParticle\", Vec2.new(0.0, 0.0), 2.0, {})\n""    particle:addLinearRandom(\"fadeOutSpeed\", 1.0, 1.4)\n""    \n""    bullet.lifeTime = 9.0\n""    \n""    return bullet\n""end\n""\n""function NarSie.addBullet(monster, angle, moveSpeed)\n""    local bullet = addCustomBullet({monsterBullet = true})\n""    bullet.damage = math.floor(math.random(20, 30))\n""    bullet.moveSpeed = data.moveSpeed\n""    bullet.moveAngle = angle\n""    bullet.position = monster.position + Vec2.fromAngle(bullet.moveAngle) * 40.0\n""    bullet.radius = 2.0\n""    bullet:addRenderableTextureWithSize(\"~/resources/monsters/bullet.png\", Vec2.new(18.0, 18.0))\n""    bullet.lifeTime = 9.0\n""    \n""\n""    return bullet\n""end\n""\n""function NarSie.ringBullets(monster, init)\n""    if init then\n""        data.timeToShoot = 0.0\n""        data.shift = 0.0\n""        data.numBullets = math.floor(10 + min * 1 )\n""        data.interval = lerp(0.6, 0.3, clamp(min * 0.1))\n""        data.totalCount = lerp(10, 20, clamp(min * 0.1))\n""        data.moveSpeed = 100.0 + min * 2.0\n""    end\n""    \n""    data.timeToShoot = data.timeToShoot - dt\n""    \n""    if data.timeToShoot < 0.0 then\n""        data.timeToShoot = data.timeToShoot + data.interval\n""        \n""        local count = data.numBullets\n""        for i = 0, count - 1 do\n""            local bullet = NarSie.addBullet(monster, data.shift + i * math.pi * 2.0 / count, data.moveSpeed)\n""        end\n""        \n""        playSound({path = missionPath .. \"narsie/bullet.ogg\", position = monster.position, volume = 0.8})\n""        \n""        data.shift = data.shift + 0.4 * math.pi * 2.0 / count\n""        data.totalCount = data.totalCount - 1\n""        if data.totalCount <= 0 then\n""            data.currentAttack = nil\n""        end\n""    end\n""end\n""\n""function NarSie.arcBullets(monster, init)\n""    if init then\n""        data.timeToShoot = 0.0\n""        data.count = 0\n""        data.numBullets = math.floor(15 + min * 2 )\n""        data.interval = lerp(0.6, 0.4, clamp(min * 0.1))\n""        data.totalCount = lerp(6, 12, clamp(min * 0.1))\n""        data.moveSpeed = 100.0 + min * 2.0\n""        data.iter = 0\n""        data.shift = (math.random() - 0.5) * math.pi  + (player.position - monster.position):getAngle()\n""        data.bulletSoundCount = 0\n""    end\n""    \n""    data.timeToShoot = data.timeToShoot - dt\n""    \n""    if data.timeToShoot < 0.0 then\n""        local b = NarSie.addBullet(monster, data.shift + (data.iter - data.numBullets / 2.0) * math.pi * 0.033, data.moveSpeed)\n""        if data.bulletSoundCount == 0 then\n""            playSound({path = missionPath .. \"narsie/bullet2.ogg\", position = monster.position, volume = 0.8})\n""            data.bulletSoundCount = 2\n""        end\n""        data.bulletSoundCount = data.bulletSoundCount - 1\n""        \n""        b.damage = math.floor(b.damage / 2)\n""        b.moveSpeed = b.moveSpeed * 1.3\n""        data.iter = data.iter + 1\n""        \n""        if data.iter >= data.numBullets then\n""            data.iter = 0\n""            data.timeToShoot = data.timeToShoot + data.interval\n""            data.totalCount = data.totalCount - 1\n""            \n""            data.shift = (math.random() - 0.5) * math.pi  + (player.position - monster.position):getAngle()\n""            if data.totalCount <= 0 then\n""                data.currentAttack = nil\n""            end\n""        else\n""            data.timeToShoot = 0.03\n""        end\n""        \n""    end\n""end\n""\n"""}, 
{"resources/missions/survival/data.json", "{\n""  \"type\": \"mission\",\n""  \"name\": \"Survival\",\n""  \n""  \"scriptFile\" : \"survival.lua\",\n""  \"scriptName\" : \"Survival\"\n""}"}, 
{"resources/missions/survival/survival.lua", "\n""function Survival.init()\n""    local theSeed = os.time()\n""    math.randomseed( theSeed )\n""    missionData = {}\n""    debugInit(missionData)\n""    missionInit(missionData)\n""    missionData.lastSpawnTime = 0.0\n""    missionData.lastBossSpawn = -500\n""    missionData.perkPerLevel = 3\n""    missionData.firstKill = true\n""    missionData.firstTick = true\n""    missionData.isSurvival = true\n""    missionData.spawnWeaponOnFirstKill = true\n""    missionData.timeToCalcSpawn = -0.1\n""    if DEBUG then\n""        missionData.maxMonster = 50\n""    else\n""        missionData.maxMonster = 650\n""    end\n""    missionData.curMaxMonster = missionData.maxMonster\n""    \n""    local mapSize = getMapSize()\n""    local colliderCount = math.floor((mapSize.x * mapSize.y) / 300000 + 10 )\n""    addRandomColliders(colliderCount, 300)\n""end\n""\n""function Survival.onTick()\n""    min = missionTime / 60.0 + missionData.extraMin\n""    \n""    local monsterTypeCount = getAllMonsterTypeCount()\n""    \n""    if missionData.firstTick then\n""        for i = 0, monsterTypeCount - 1 do\n""            local monsterType = getMonsterTypeAt(i)\n""            if monsterType.scriptTable.onMissionLoad ~= nil then\n""                monsterType.scriptTable.onMissionLoad(missionData)\n""            end\n""        end\n""    end\n""    \n""    missionData.timeToCalcSpawn = missionData.timeToCalcSpawn - dt\n""    \n""    if missionData.timeToCalcSpawn < 0.0 then\n""        missionData.timeToCalcSpawn = math.random() * 0.5 + 0.5\n""        calcRandomSpawns()\n""    end\n""    if missionData.firstTick then\n""        local spawn\n""        if DEBUG then\n""            spawn = 10\n""        else\n""            spawn = 80\n""        end\n""        \n""        local rateMult = 1.0 + (getMapSize().x - 3000.0) / 3000.0\n""        spawn = math.floor(rateMult * spawn)\n""        for i = 1, spawn do\n""            local monster = addRandomMonster()\n""            local pos = getRandomPosition( {canBeEdge=true, notOnScreen=true, notNearPlayer=true, notNearMonsters=true, playerRange=400.0})\n""            if monster.scriptTable.getRandomSpawnPos then\n""                pos = monster.scriptTable.getRandomSpawnPos()\n""            end\n""            monster.position = pos\n""            monster.moveAngle =  math.random() * math.pi * 2.0\n""            \n""            if monster.data.time ~= nil then\n""                data.time = data.time - math.random() * 20\n""            end\n""        end\n""    end\n""    \n""    \n""    missionData.curMaxMonster = math.floor(lerp(55, missionData.maxMonster, clamp(min * 0.05)))\n""    local rateMult = 1.0 + (getMapSize().x - 3000.0) / 5000.0\n""    local rate =  (0.9 - clamp(min * 0.2) * 0.4)  / rateMult\n""    if missionTime - missionData.lastSpawnTime > rate and canSpawnMonster() and player.isDead == false then\n""        missionData.lastSpawnTime = missionTime\n""        local monster = addRandomMonster()\n""        local pos = getRandomPosition({canBeEdge=true, notNearPlayer=true, notNearMonsters=true, notOnScreen=true})\n""        if monster.scriptTable.getRandomSpawnPos then\n""                pos = monster.scriptTable.getRandomSpawnPos()\n""        end\n""        monster.position = pos\n""        monster.moveAngle =  math.random() * math.pi * 2.0\n""        \n""        local buffId = monster.colorMultiplier:addBuff(Vec4.new(1.0, 1.0, 1.0, 0.0))\n""        monster.colorMultiplier:setBuffDuration(buffId, 0.3)\n""        monster.colorMultiplier:setBuffFadeInFadeOut(buffId, 0.0, 0.3)\n""    end\n""    \n""    missionData.firstTick = false\n""    gameResetTick()\n""end\n""\n""\n""function Survival.onPlayerDied()\n""    showGameReset()\n""end\n""\n""function Survival.onMonsterDied(monster)\n""    if missionData.firstKill then\n""        missionData.firstKill = false\n""    end\n""\n""    if missionData.spawnWeaponOnFirstKill == true then\n""        spawnRandomGun(monster.position)\n""        missionData.spawnWeaponOnFirstKill = false\n""    end\n""    \n""    if monster.data.ignoreForCount == true then\n""        monster.data.ignoreForCount = false\n""        missionData.ignoreMonsterCount = missionData.ignoreMonsterCount - 1 \n""    end\n""end\n""\n""function Survival.onDebugTick()\n""\n""    debugTick(missionData)\n""    \n""    if hasCheats() then\n""        if isKeyReleased(keys.Delete) then    \n""            local count = getMonsterCount()\n""            \n""            for i = 0, count - 1 do\n""                local monster = getMonsterAtIndex(i)\n""                monster.experienceMultiplier = 0.0\n""                monster.scoreMultiplier = 0.0\n""                monster:doDamage(10000, Vec2.randDir())\n""            end\n""        end\n""        \n""        if isKeyReleased(keys.Insert) then\n""            local t = missionData.maxMonster * 0.2\n""            t = math.min(missionData.maxMonster - getMonsterCount(), t)\n""            if t > 1 then\n""                for i = 1, t - 10 do\n""                    local pos = getRandomPosition( {canBeEdge=true, notNearPlayer=true, notNearMonsters=true, playerRange=400.0})\n""                    local monster = addRandomMonster()\n""                    if monster.scriptTable.getRandomSpawnPos then\n""                            pos = monster.scriptTable.getRandomSpawnPos()\n""                    end\n""                    monster.position = pos\n""                    monster.moveAngle =  math.random() * math.pi * 2.0\n""                end\n""            end\n""        end\n""    end\n""end\n"""}, 
{"resources/missions/tutorial/data.json", "{\n""  \"type\": \"mission\",\n""  \"name\": \"Tutorial\",\n""  \n""  \"icon\": \"icon.png\",\n""  \n""  \"scriptFile\" : \"tutorial.lua\",\n""  \"scriptName\" : \"Tutorial\"\n""}"}, 
{"resources/missions/tutorial/tutorial.lua", "\n""function Tutorial.init()\n""    local theSeed = os.time()\n""    math.randomseed( theSeed )\n""    missionData = {}\n""    missionData.state = 0\n""    missionData.t = 0\n""    missionData.objective = 0\n""    \n""    missionData.congratsTime = 1.6\n""    missionData.dontSpawnBonus = true\n""    \n""    missionData.extraMin = 0.0\n""    \n""    missionData.monsterC = 90\n""    missionData.xpPerMonster = math.floor(player.experienceForNextLevel / missionData.monsterC)\n""    \n""    missionData.perkPerLevel = 4\n""end\n""\n""function Tutorial.swapText()\n""    if missionData.text == missionData.text1 then\n""        missionData.text = missionData.text2\n""    else\n""        missionData.text = missionData.text1\n""    end\n""end\n""\n""function Tutorial.getDummy()\n""    local monster = addMonster(\"Alien\")\n""    monster.data.maxMoveSpeed = 0.0\n""    monster.animationSpeed = 0.0\n""    monster.moveSpeed = 0.0\n""    monster.data.maxRotateSpeed = 0.0\n""    monster.data.canHit = false\n""    monster.position = player.position + Vec2.new(100.0, 100.0)\n""    \n""    monster.experienceMultiplier = 0.0\n""    monster.dropChance = 0.0\n""    monster:setScale(1.0)\n""    monster.colorMultiplier:clear()\n""        \n""    local buff = monster.colorMultiplier:addBuff(Vec4.fromColor(0x00FFFFFF))\n""    monster.colorMultiplier:setBuffDuration(buff, 0.3)\n""    monster.colorMultiplier:setBuffFadeInFadeOut(buff, 0.0, 0.3)\n""\n""    missionData.objective = missionData.objective + 1\n""    return monster\n""end\n""\n""function Tutorial.onTick()\n""\n""    if missionData.state == 0 then\n""        \n""        missionData.textObject = addGameObject(\"\")\n""        \n""        missionData.textObject:setLevel(RenderableLevel.GUI + 500)\n""        missionData.textObject:setPosition(Vec2.new(0, 120))\n""        \n""        missionData.textBG = missionData.textObject:addTexture(missionPath .. \"textbg.png\", \"~/resources/default\")\n""        missionData.textBG:setAlignment(RenderableAlignment.bottom)\n""        missionData.textBG:setWorldMatrix(Mat3.fromScale(385.0, 95.0))\n""\n""        missionData.text1 = missionData.textObject:addText(\"Welcome to Bloodworks!\\n""This tutorial will teach you the basics of the game\", \"resources/fontData.txt\")\n""        missionData.text1:setAlignment(RenderableAlignment.bottom)\n""        missionData.text1:setTextAlignment(TextAlignment.center)\n""        missionData.text1:setVerticalTextAlignment(VerticalTextAlignment.mid)\n""        missionData.text1:setTextSize(20.0)\n""        missionData.text1:setWorldMatrix(Mat3.fromPosition(0.0, 10.0))\n""        missionData.text1:setColor(Vec4.new(1.0, 1.0, 1.0, 0.0))\n""        missionData.t1a = 0.0\n""        \n""        missionData.text2 = missionData.textObject:addText(\"\", \"resources/fontData.txt\")\n""        missionData.text2:setAlignment(RenderableAlignment.bottom)\n""        missionData.text2:setTextAlignment(TextAlignment.center)\n""        missionData.text2:setVerticalTextAlignment(VerticalTextAlignment.mid)\n""        missionData.text2:setTextSize(20.0)\n""        missionData.text2:setWorldMatrix(Mat3.fromPosition(0.0, 10.0))\n""        missionData.t2a = 0.0\n""        \n""        missionData.text = missionData.text1\n""        missionData.state = 10\n""    \n""    elseif missionData.state ==  10 then\n""    \n""        if missionTime > 3.0 then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"Use WASD to move around\\n""Collect all gifts to continue!\")\n""            \n""            missionData.gifts = {}\n""            local pos = player.position\n""            for i = 0, 6 do\n""                local gameObject = addGameObject(\"\")\n""                \n""                gameObject:setLevel(RenderableLevel.player - 5)\n""                gameObject:setPosition(pos + Vec2.fromAngle( i * math.pi * 2.0 / 7) * 150.0 )\n""                gameObject:setScale( Vec2.new(0.0, 0.0) )\n""                gameObject.data.rotation = math.pi * 2.0 * math.random()\n""                gameObject.data.rotationShift = math.pi * 2.0 * math.random()\n""                gameObject.data.s = 0.0\n""                local t = gameObject:addTexture(missionPath .. \"gift_box.png\", \"~/resources/default\")\n""                t:setWorldMatrix(Mat3.fromScale(18.0, 18.0))\n""                \n""                gameObject.data.particle = gameObject:addParticle(\"CriticalParticle\", {})\n""                \n""                missionData.gifts[i] = gameObject\n""            end\n""            \n""            missionData.state = 20\n""        end\n""        \n""    elseif missionData.state ==  20 then\n""        local hasGift = false\n""        \n""        for i = 0, 6 do\n""            local gameObject = missionData.gifts[i] \n""            if gameObject ~= nil then\n""                hasGift = true\n""            \n""                gameObject.data.s = clamp(gameObject.data.s)\n""                gameObject:setScale( Vec2.new(gameObject.data.s, gameObject.data.s) )\n""       \n""                gameObject:setRotation(gameObject.data.rotation + math.sin(gameObject.data.rotationShift + time * 2.0 ) * math.pi * 0.2 )\n""                \n""                if gameObject.data.picked ~= nil then\n""                    gameObject.data.s = gameObject.data.s - dt * 8.0\n""                    \n""                    if gameObject.data.s < 0.0 then\n""                        gameObject.toBeRemoved = true\n""                        missionData.gifts[i]  = nil\n""                    end\n""                else\n""                    if dt > 0.0 then\n""                        gameObject.data.particle:addParticle(gameObject:getPosition() + Vec2.fromAngle(math.random() * math.pi * 2.0) * math.random() * 20.0, {})\n""                    end\n""                    \n""                    gameObject.data.s = gameObject.data.s + dt * 4.0\n""                    \n""                    if player.position:distance(gameObject:getPosition()) < 25.0 then\n""                        gameObject.data.picked = true\n""                        playSound({path = missionPath .. \"gifttake.ogg\", volume = 0.5})\n""                    end\n""                end\n""            end\n""        end\n""    \n""        if hasGift == false then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"Congrats!\")\n""            missionData.state = 30\n""            missionData.t = missionTime\n""        end\n""    elseif missionData.state ==  30 then\n""        if missionTime - missionData.t > missionData.congratsTime then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"Use mouse to aim and left mouse button to shoot.\\n""Kill all enemies to continue\")\n""            \n""            clearBloods()\n""            for i = 0, 8 do\n""                local monster = Tutorial.getDummy()\n""                \n""                monster.position = player.position + Vec2.fromAngle( i * math.pi * 2.0 / 9) * 150.0 \n""                monster.moveAngle = (player.position - monster.position):getAngle()\n""            end\n""            \n""            missionData.state = 40\n""        end\n""        \n""    elseif missionData.state == 40 then\n""        if missionData.reload == nil and player.gun:isReloading() then\n""            missionData.reload = true\n""            Tutorial.swapText()\n""            missionData.text:setText(\"Your weapon will automatically start reloading when\\n""it is out of ammo and there is no reload limit.\\n""You can also reload manually by pressing R.\")\n""        end\n""    \n""        if missionData.objective == 0 then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"Congrats!\")\n""            missionData.state = 50\n""            missionData.t = missionTime\n""        end\n""    elseif missionData.state == 50 then\n""        if missionTime - missionData.t > missionData.congratsTime then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"Monsters will randomly drop weapons when they die.\\n""Go near weapon to equip it.\")\n""            missionData.state = 60\n""        end\n""    elseif missionData.state == 60 then\n""        if player.gun.scriptName == \"PlasmaGun\" then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"'Plasma Gun' will work better against group of enemies.\\n""Kill all enemies to continue.\")\n""            missionData.state = 70\n""            \n""            clearBloods()\n""            for i = 0, 6 do\n""                for j = 0, 3 do\n""                    local monster = Tutorial.getDummy()\n""                    monster:setScale(0.7)\n""                    monster.position = player.position + Vec2.fromAngle( i * math.pi * 2.0 / 7) * 160  + Vec2.fromAngle(math.random() * math.pi * 2.0) * math.sqrt( math.random() ) * 50.0\n""                    monster.moveAngle = math.random() * math.pi * 2.0\n""                    monster.hitPoint = 20\n""                end\n""            end\n""        end\n""        \n""        \n""    elseif missionData.state == 70 then\n""        if missionData.objective == 0 then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"Congrats!\")\n""            missionData.state = 80\n""            missionData.t = missionTime\n""        end\n""    elseif missionData.state == 80 then\n""        if missionTime - missionData.t > missionData.congratsTime then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"You can equip ultimate weapons. These weapons have\\n""limited ammo, long cooldowns between each shot.\\n""Pick up the ultimate.\")\n""            missionData.state = 90\n""        end\n""    elseif missionData.state == 90 then\n""        if player.ultimate ~= nil then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"Aim at enemies and\\n""use right mouse button to activate your ultimate.\")\n""            missionData.state = 100\n""            clearBloods()\n""            for i = 0, 50 do\n""                    local monster = Tutorial.getDummy()\n""                    monster:setScale(0.7)\n""                    monster.position = player.position + Vec2.fromAngle( player.aimDir:getAngle() + math.pi + ( math.pi * 0.35 * (math.random() - 0.5) ) ) * (120 + math.random() * 200)\n""                    monster.moveAngle = math.random() * math.pi * 2.0\n""            end\n""        end\n""    elseif missionData.state == 100 then\n""        if missionData.objective == 0 then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"Congrats!\")\n""            missionData.state = 110\n""            missionData.t = missionTime\n""        end\n""    elseif missionData.state == 110 then\n""        if missionTime - missionData.t > missionData.congratsTime then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"Sometimes a boss monster will appear on the map.\\n""There are different types of bosses.\\n""This particular boss has large amount of HP.\")\n""            missionData.state = 115\n""            missionData.t = missionTime\n""        end\n""    elseif missionData.state == 115 then\n""        if missionTime - missionData.t > missionData.congratsTime then\n""\n""            local monster = addMonster(\"Alien\")\n""            monster.data.canHit = false\n""            monster.position = player.position - player.aimDir * 400.0\n""            monster.moveAngle = (player.position - monster.position):getAngle()\n""                \n""            makeBossDefault(monster, 1)\n""            monster.data.randomMove = false\n""            local buff = monster.colorMultiplier:addBuff(Vec4.fromColor(0x00FFFFFF))\n""            monster.colorMultiplier:setBuffDuration(buff, 0.3)\n""            monster.colorMultiplier:setBuffFadeInFadeOut(buff, 0.0, 0.3)\n""\n""            monster.experienceMultiplier = 0.0\n""            \n""            missionData.objective = missionData.objective + 1\n""            \n""            missionData.state = 120\n""        end\n""    elseif missionData.state == 120 then\n""        if missionData.objective == 0 then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"Congrats!\")\n""            missionData.state = 130\n""            missionData.t = missionTime\n""        end\n""    elseif missionData.state == 130 then\n""        if missionTime - missionData.t > missionData.congratsTime then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"It looks like you almost gained\\n""enough experience to level up!\\n""Kill this last monster to level up.\")\n""            missionData.state = 140\n""            \n""            local monster = Tutorial.getDummy()\n""            monster.position = player.position - player.aimDir * 200.0\n""            monster.moveAngle = (player.position - monster.position):getAngle()\n""            \n""        end\n""    elseif missionData.state == 140 then\n""        if missionData.objective == 0 then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"After leveling up, you can take a perk.\\n""Perks will give permanent bonuses to your character.\\n""Pick a perk to continue.\")\n""            missionData.state = 150\n""        end\n""    elseif missionData.state == 150 then\n""        if numActivePerks() == 1 then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"Congrats!\")\n""            missionData.state = 160\n""            missionData.t = missionTime\n""        end\n""    elseif missionData.state == 160 then\n""        if missionTime - missionData.t > missionData.congratsTime then\n""            Tutorial.swapText()\n""            missionData.text:setText(\"Kill all enemies to finish the tutorial!\")\n""            missionData.state = 170\n""            missionData.t = missionTime\n""        end\n""    elseif missionData.state == 170 then\n""        if missionTime - missionData.t > missionData.congratsTime then\n""        \n""            missionData.t = missionTime\n""            for i = 0, 29 do\n""                local monster = addMonster(\"Alien\")\n""                monster.data.canHit = true\n""                \n""                monster.position = player.position + Vec2.fromAngle( math.pi * 2.0 * math.random() ) * (250 + math.random() * 300)\n""                monster.moveAngle = math.random() * math.pi * 2.0\n""                    \n""                monster.experienceMultiplier = 0.0\n""                \n""                missionData.objective = missionData.objective + 1\n""            \n""                monster.data.maxMoveSpeed = monster.data.maxMoveSpeed * 0.6\n""                monster.data.moveSpeed = 0.0\n""                monster.hitPoint = 40 \n""\n""                monster.data.minDamage  = 3\n""                monster.data.maxDamage  = 5\n""                monster.data.hitInterval  = 3.0\n""                \n""                monster.data.randomMove = true\n""                monster.data.targetShift = Vec2.new(0.0, 0.0)\n""            \n""                \n""                local buff = monster.colorMultiplier:addBuff(Vec4.fromColor(0x00FFFFFF))\n""                monster.colorMultiplier:setBuffDuration(buff, 0.3)\n""                monster.colorMultiplier:setBuffFadeInFadeOut(buff, 0.0, 0.3)\n""                \n""            end\n""            missionData.dontSpawnBonus = nil\n""            \n""            missionData.state = 180\n""        end\n""        \n""    elseif missionData.state == 180 then\n""        missionData.text:setText(\"\\n""Kill all enemies to finish the tutorial!\\n""Remaining : \" .. getMonsterCount() )\n""        if missionTime - missionData.t > 10.0 then\n""            local count = getMonsterCount()\n""            \n""            for i = 0, count - 1 do\n""                local monster = getMonsterAtIndex(i)\n""                \n""                if missionTime - missionData.t > 10.0 + i / 4.0 then\n""                    monster.data.randomMove = false\n""                end\n""            end\n""        end\n""        \n""        \n""        if missionData.objective == 0 then\n""            showGameReset(\"Congrats!\")\n""            missionData.state = 190\n""            missionData.textObject.toBeRemoved = true\n""            missionData.ended = true\n""        end\n""    end\n""    \n""    \n""    if missionData.ended ~= true then\n""        if missionData.text == missionData.text1 then\n""            missionData.t1a = missionData.t1a + nonsloweddt * 8.0\n""            missionData.t2a = missionData.t2a - nonsloweddt * 8.0\n""        else\n""            missionData.t1a = missionData.t1a - nonsloweddt * 8.0\n""            missionData.t2a = missionData.t2a + nonsloweddt * 8.0\n""        end\n""        \n""        missionData.t1a = clamp(missionData.t1a)\n""        missionData.t2a = clamp(missionData.t2a)\n""\n""        missionData.text1:setColor(Vec4.new(1.0, 1.0, 1.0, missionData.t1a))\n""        missionData.text2:setColor(Vec4.new(1.0, 1.0, 1.0, missionData.t2a))\n""    end\n""    \n""    if isKeyReleased(keys.Delete) and false then    \n""        local count = getMonsterCount()\n""        \n""        for i = 0, count - 1 do\n""            local monster = getMonsterAtIndex(i)\n""            monster.experienceMultiplier = 0.0\n""            monster:doDamage(10000, Vec2.randDir())\n""        end\n""    end\n""    \n""    gameResetTick()\n""end\n""\n""\n""function Tutorial.onMonsterDied(monster)\n""    missionData.objective = missionData.objective - 1\n""    if missionData.state ==  40 and missionData.objective == 0 then\n""        spawnGun(monster.position, \"PlasmaGun\")\n""    end\n""    \n""    if missionData.state ==  70 and missionData.objective == 13 then\n""    \n""        Tutorial.swapText()\n""        missionData.text:setText(\"Bonuses/weapons are also randomly spawns at map.\\n""Pick up the bonus and kill the rest of the enemies.\")\n""        \n""        local v = Vec2.new(0.0, 0.0)\n""        \n""        for i = 0, getMonsterCount() - 1 do\n""            v = v + getMonsterAtIndex(i).position\n""        end\n""        \n""        v = v / getMonsterCount()\n""        spawnBonus( (player.position * 0.2 + v  * 0.8) , \"Explosion\")\n""    end\n""    \n""    if missionData.state ==  70 and missionData.objective == 0 then\n""        spawnGun(monster.position, \"RocketBarrage\") \n""    end\n""    \n""    if missionData.p == nil then\n""        missionData.p  = 1\n""    else\n""        missionData.p  = missionData.p  + 1\n""    end\n""    if missionData.state == 140 then\n""        player:gainExperience(player.experienceForNextLevel - player.experience + 1)\n""    else \n""        player:gainExperience(missionData.xpPerMonster)\n""    end\n""end\n""\n""function Tutorial.onPlayerDied()\n""    showGameReset()\n""end\n""\n""function Tutorial.getPerksForLevelUp()\n""    return {\"CriticalBullets\", \"PiercingBullets\", \"LessSpread\", \"ExplosionOnReload\"}\n""end"}, 
{"resources/monsters/alien/alien.lua", "\n""function Alien.init(monster)\n""    data = monster.data\n""    monster:setScale(math.random() * 0.3 + 0.6)\n""\n""    local diff = player.position - monster.position\n""    \n""    monster.moveSpeed = 0\n""    monster.moveAngle =  0\n""    data.moving = true\n""    data.lastHitTime = 0.0\n""    \n""    monster:playAnimation(\"walk\", math.random())\n""    \n""    data.maxMoveSpeed = 110.0 * (math.random() * 0.2 + 0.9)\n""    data.maxRotateSpeed = 0.02\n""    data.playerSeeRange =  150.0\n""    \n""    \n""    StunController.init(monster)\n""    MonsterGroupHelper.init(monster)\n""    MonsterMeleeHelper.init(monster)\n""    data.minDamage = 10\n""    data.maxDamage = 16\n""    \n""    data.targetShift = Vec2.randDir() * (math.random() * 400.0 - 200.0)\n""    \n""    data.tickWaitTime = 0.0\n""    data.time = time + math.random() * 10.0\n""    BulletShooter.init(monster)\n""end\n""\n""function Alien.spawnChanceInMission(missionData, min)\n""    return 1.0\n""end\n""\n""function Alien.buffStats(monster, min)\n""    StunController.buffStats(monster, min)\n""    MonsterMeleeHelper.buffStats(monster, min)\n""    BulletShooter.buffStats(monster, min)\n""    \n""    if monster.data.randomMove ~= false then\n""        monster.data.randomMove = (math.random() > (0.15 + clamp(min * 0.2) * 0.15))\n""    end\n""    monster.data.playerSeeRange = monster.data.playerSeeRange * (1.0 +  clamp(min * 0.1) * 2.0)\n""    monster.data.maxMoveSpeed =  monster.data.maxMoveSpeed * (1.0 + clamp(min  / 10) * 0.30)\n""    monster.data.maxRotateSpeed =  monster.data.maxRotateSpeed * (1.0 + clamp(min * 0.05) * 1.0)\n""end\n""\n""function Alien.makeBoss(monster, min)\n""    makeBossDefault(monster)\n""end\n""\n""function Alien.onHit(monster, damage, dir, args)\n""    StunController.onHit(monster, damage, dir, args)\n""end\n""\n""function Alien.onTick(monster)\n""    data = monster.data\n""    if data.randomMove and time - data.time > 60.0 then\n""        data.randomMove = false\n""    end\n""    diffToPlayer = player.position - monster.position \n""    distanceToPlayer = diffToPlayer:length()\n""    angleToPlayer = diffToPlayer:getAngle()\n""\n""    data.tickWaitTime = data.tickWaitTime - dt\n""    if data.tickWaitTime < 0.0 then\n""        data.tickWaitTime = 0.2 + math.random() * 0.2 + lerp(0.0, 1.2, clamp((distanceToPlayer - 100) / 1500))\n""        \n""        local t = clamp(distanceToPlayer / 150.0 - 0.3)\n""        local playerPosShift = player.position + data.targetShift * t\n""        local posToMove = playerPosShift\n""        \n""        if data.randomMove or player.isDead then\n""            posToMove = data.randomPos\n""            if posToMove == nil or posToMove:distanceSquared(monster.position) < 60 * 60 then\n""                posToMove = getRandomMapPosition()\n""                data.randomPos = posToMove\n""            end\n""            \n""            if distanceToPlayer < data.playerSeeRange and player.isDead == false  then\n""                local c = (distanceToPlayer - data.playerSeeRange * 0.5) / data.playerSeeRange * 0.5\n""                if c < 0.0 then\n""                    c = 0.0\n""                end\n""                posToMove = posToMove * c + playerPosShift * (1.0 - c)\n""            end\n""        end\n""        \n""        data.posToMove = posToMove\n""        local oldPosToMove = posToMove\n""        posToMove = monster:getPathPos(posToMove)\n""        \n""        --data.p = posToMove\n""        diffToMovePos = posToMove - monster.position\n""        distanceToMovePos = diffToMovePos:length()\n""        angleToMovePos = diffToMovePos:getAngle()\n""        if oldPosToMove:distanceSquared(posToMove) > 1.0 then\n""            data.moveAngle = angleToMovePos\n""        else\n""            data.moveAngle = MonsterGroupHelper.fixAngle(monster, angleToMovePos)\n""        end\n""        \n""    end\n""\n""    BulletShooter.onTick(monster)\n""    MonsterMeleeHelper.onTick(monster)\n""    monster.moveAngle = approachAngle(monster.moveAngle, data.moveAngle, data.maxRotateSpeed * timeScale)\n""    \n""    if data.moving then\n""        monster.moveSpeed = data.maxMoveSpeed * StunController.getSlowAmount(monster);\n""    else\n""        monster.moveSpeed = 0.0;\n""    end\n""    \n""    --addLine(monster.position, data.p)\n""end\n"""}, 
{"resources/monsters/alien/data.json", "{\n""  \"type\" : \"monster\",\n""  \"name\": \"Alien\",\n""  \"hitPoint\": 100,\n""  \"size\" : [24.0, 34.0],\n""  \"textureShift\" : [0.0, -16.0],\n""  \"bulletRadius\" : 16.0,\n""  \"collisionRadius\" : 12.0,\n""  \"hasBlood\" : true,\n""  \n""  \"experience\" : 20,\n""  \"score\" : 50,\n""  \n""  \"animations\" : \n""  {\n""    \"stand\" : \n""    {\n""        \"baseFolder\" : \"art\",\n""        \"looped\" : true,\n""        \"frameDuration\" : 0.5,\n""        \"frames\":\n""        [\n""            \"0.png\"\n""        ]\n""    },\n""    \n""    \"walk\" : \n""    {\n""        \"baseFolder\" : \"art\",\n""        \"looped\" : true,\n""        \"frameDuration\" : 0.1,\n""        \"frames\":\n""        [\n""            \"0.png\",\n""            \"1.png\",\n""            \"2.png\",\n""            \"3.png\",\n""            \"0.png\",\n""            \"4.png\",\n""            \"5.png\",\n""            \"6.png\"\n""        ]\n""    },\n""    \n""    \"attack\" : \n""    {\n""        \"baseFolder\" : \"art\",\n""        \"frameDuration\" : 0.1,\n""        \"frames\":\n""        [\n""            \"7.png\",\n""            \"8.png\",\n""            \"9.png\",\n""            \"10.png\",\n""            \"11.png\"\n""        ]\n""    }\n""  },\n""  \n""  \"scriptFile\" : \"alien.lua\",\n""  \"scriptName\" : \"Alien\",\n""  \n""  \"bodyParts\" : [\n""    \"art/head.png\",\n""    [\"art/arm1.png\", 8.0, -30],\n""    [\"art/arm2.png\", 8.0, 30],\n""    [\"art/part1.png\", -4, -24],\n""    [\"art/part2.png\", -3, 21],\n""    [\"art/part3.png\", -13.0, 6.0],\n""    [\"art/part4.png\", 23.0, -29.0],\n""    [\"art/part5.png\", 18.0, 26.0]\n""  ],\n""  \n""  \"bodyPartBits\" : [\n""    \"art/bit0.png\", \n""    \"art/bit1.png\", \n""    \"art/bit2.png\", \n""    \"art/bit3.png\", \n""    \"art/bit4.png\", \n""    \"art/bit5.png\", \n""    \"art/bit6.png\", \n""    \"art/bit7.png\", \n""    \"art/bit8.png\" \n""  ],\n""  \n""  \"hitSounds\" : [\n""    \"~/resources/sounds/monster_hit/hit_0.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_1.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_2.ogg\"\n""  ],\n""  \n""  \"killSounds\" : [\n""    \"~/resources/sounds/monster_hit/die_0.ogg\", \n""    \"~/resources/sounds/monster_hit/die_1.ogg\", \n""    \"~/resources/sounds/monster_hit/die_2.ogg\", \n""    \"~/resources/sounds/monster_hit/die_3.ogg\", \n""    \"~/resources/sounds/monster_hit/die_4.ogg\", \n""    \"~/resources/sounds/monster_hit/die_5.ogg\",\n""    \"~/resources/sounds/monster_hit/hit_0.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_1.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_2.ogg\"\n""  ]\n""  \n""}"}, 
{"resources/monsters/egg/data.json", "{\n""  \"type\" : \"monster\",\n""  \"name\": \"Egg\",\n""  \"hitPoint\": 300,\n""  \"size\" : [50.0, 42.5],\n""  \"textureShift\" : [0.0, 5.0],\n""  \"bulletRadius\" : 28.0,\n""  \"collisionRadius\" : 22.0,\n""  \"hasBlood\" : true,\n""  \n""  \"experience\" : 50,\n""  \"score\" : 100,\n""  \n""  \"animations\" : \n""  {\n""    \"stand\" : \n""    {\n""        \"baseFolder\" : \"art\",\n""        \"looped\" : true,\n""        \"frameDuration\" : 0.12,\n""        \"frames\":\n""        [\n""            [\"0.png\", 0.8],\n""            \"1.png\",\n""            \"2.png\",\n""            \"3.png\",\n""            \"4.png\",\n""            \"5.png\",\n""            [\"6.png\", 0.4],\n""            \"5.png\",\n""            \"4.png\",\n""            \"3.png\",\n""            \"2.png\",\n""            \"1.png\"\n""        ]\n""    }\n""  },\n""  \n""  \"scriptFile\" : \"egg.lua\",\n""  \"scriptName\" : \"Egg\",\n""  \n""  \"bitSpeed\" : 0.4,\n""  \n""  \"bodyParts\" : [\n""    [\"art/part0.png\", 118, -118],\n""    [\"art/part1.png\", -14.55, -275.6],\n""    [\"art/part2.png\", 334.7, 43.65],\n""    [\"art/part3.png\", 186.1, -219],\n""    [\"art/part4.png\", -25.55, -215.6],\n""    [\"art/part5.png\", -130, 220],\n""    [\"art/part6.png\", -16, 56],\n""    [\"art/part7.png\", -222, -32],\n""    [\"art/part8.png\", 130, 234],\n""    [\"art/part9.png\", 186, 116]\n""  ],\n""  \n""  \"bodyPartBits\" : [\n""    \"art/bit0.png\", \n""    \"art/bit1.png\", \n""    \"art/bit2.png\", \n""    \"art/bit3.png\"\n""  ],\n""  \n""  \"hitSounds\" : [\n""    \"~/resources/sounds/monster_hit/hit_0.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_1.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_2.ogg\"\n""  ],\n""  \n""  \"killSounds\" : [\n""    \"~/resources/sounds/monster_hit/hit_0.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_1.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_2.ogg\"\n""  ]\n""}"}, 
{"resources/monsters/egg/egg.lua", "\n""function Egg.init(monster, min)\n""    data = monster.data\n""    monster:setScale(math.random() * 0.2 + 0.8)\n""\n""    monster.moveSpeed = 0\n""    monster.moveAngle =  math.random() * math.pi * 2.0\n""    \n""    monster:playAnimation(\"stand\", math.random())\n""    \n""    monster:modifyDrawLevel(2)\n""    monster.colorMultiplier:addBuff(Vec4.new(0.6, 0.6, 0.6, 1.0))\n""    \n""    data.spawnInterval = 3.0 + math.random() * 0.5\n""    data.spawnTime = data.spawnInterval * (3.0 + math.random())\n""    \n""    data.cannotBecomeBoss = true\n""    data.cannotShootBullets = true\n""    \n""    data.monsterType = \"Alien\"\n""    if math.random() < 0.07 then\n""        data.monsterType = \"Spider\"\n""    end\n""    monster.knockbackResistance:addBuff(0.1)\n""    \n""    if missionData.eggCount == nil then\n""        missionData.eggCount = 0\n""    end\n""    missionData.eggCount = missionData.eggCount + 1\n""    calcRandomSpawns()\n""end\n""\n""function Egg.spawnChanceInMission(missionData, min)\n""    if missionData.isSurvival ~= true  then\n""        return 0.0\n""    end\n""    if missionData.eggCount ~= nil and missionData.eggCount > 1 + math.min(min, 4.0) then\n""        return 0.0\n""    end\n""    return 0.03 + clamp(min * 0.3) * 0.04\n""end\n""\n""function Egg.buffStats(monster, min)\n""    monster.data.spawnInterval = monster.data.spawnInterval - clamp(min/10)\n""end\n""\n""function Egg.onKilled(monster)\n""    missionData.eggCount = missionData.eggCount - 1\n""    \n""end\n""\n""function Egg.onTick(monster)\n""    data = monster.data\n""    \n""    data.spawnTime = data.spawnTime - dt\n""    \n""    if data.spawnTime < 0.0 then\n""        data.spawnTime = data.spawnTime + data.spawnInterval\n""        \n""        if canSpawnIgnoredMonster() then\n""            local m = addRandomMonster(data.monsterType, true, true, 1.0)\n""            m:setScale(m.scale * 0.8)\n""            m.position = monster.position\n""            ignoreMonsterForCount(m)\n""        end\n""    end\n""end\n""\n""\n""function Egg.getRandomSpawnPos()\n""    return getRandomPosition( {canBeEdge=false, notNearPlayer=true, notNearMonsters=true, playerRange=800.0})\n""end"}, 
{"resources/monsters/helpers.lua", "\n""StunController = {}\n""\n""function StunController.init(monster)\n""    data.stunDuration = 0.02\n""    data.slowDuration = 0.15\n""    data.slowMultiplier = 0.4\n""    data.stunTime = 0.0\n""    data.slowTime = 0.0\n""end\n""\n""function StunController.buffStats(monster, min)\n""\n""end\n""\n""function StunController.getSlowAmount(monster)\n""    local mul = 1.0\n""\n""    if data.stunTime > 0.0 then\n""        mul = 0.0\n""        data.stunTime = data.stunTime - dt\n""    elseif data.slowTime > 0.0 then\n""        mul = data.customSlowdownAmount * data.slowMultiplier * (data.slowDuration - data.slowTime)/ data.slowDuration\n""        data.slowTime = data.slowTime - dt\n""    end\n""    return mul\n""end\n""\n""function StunController.onHit(monster, damage, dir, args)\n""    if args.noSlowdown == true then\n""        return\n""    end\n""    local data = monster.data\n""    if args.customSlowdownAmount ~= nil then\n""        data.customSlowdownAmount = args.customSlowdownAmount\n""    else\n""        data.customSlowdownAmount = 1.0\n""    end\n""    if args.slowdownOnly then\n""        data.slowTime = data.slowDuration\n""    elseif args.doNotStun ~= true then\n""        data.stunTime = data.stunDuration\n""        data.slowTime = data.slowDuration\n""    end\n""end\n""\n""\n""\n""MeleeHitImage = {}\n""\n""function MeleeHitImage.build(monster)\n""    local gameObject =  addGameObject(\"MeleeHitImage\")\n""    gameObject:setLevel(RenderableLevel.player + 5)\n""    gameObject.data.startTime = time\n""    gameObject.data.renderable = gameObject:addTexture(\"~/resources/monsters/melee_hit.png\", \"~/resources/default\")\n""    gameObject.data.renderable:setWorldMatrix(Mat3.fromScale(20.0, 20.0))\n""    gameObject:setPosition(player.position)\n""    gameObject:setRotation(-math.pi * 0.5 - monster.moveAngle)\n""    return gameObject\n""end\n""\n""function MeleeHitImage.init(gameObject)\n""end\n""\n""function MeleeHitImage.onTick(gameObject)\n""    local timeDiff = time - gameObject.data.startTime\n""    local alpha\n""    if timeDiff < 0.05 then\n""        alpha = timeDiff / 0.05\n""    else \n""        alpha = 1.0 - (timeDiff - 0.3) / 0.2\n""        if alpha < 0.0 then \n""            gameObject.toBeRemoved = true\n""            alpha = 0.0\n""        elseif alpha > 1.0 then\n""            alpha = 1.0\n""        end\n""    end\n""    gameObject.data.renderable:setColor(Vec4.new(1.0, 1.0, 1.0, alpha))\n""end\n""\n""function MeleeHitImage.clear(monster)\n""\n""end\n""\n""MonsterGroupHelper = {}\n""\n""function MonsterGroupHelper.init(monster) \n""    monster.data.closestMonsterIndex = -1\n""    monster.data.playerIgnoreDistance = 0.0\n""end\n""\n""function MonsterGroupHelper.fixAngle(monster, angle) \n""    local closestMonster = nil\n""    if data.closestMonsterIndex ~= -1 then\n""        closestMonster = getMonster(data.closestMonsterIndex)\n""        if closestMonster ~= nil then\n""            if closestMonster.position:distanceSquared(monster.position) > 30.0 * 30.0 then\n""                closestMonster = nil\n""            end\n""        end\n""    end\n""    \n""    if closestMonster == nil then\n""        closestMonster = getClosestMonsterInRangeWithIgnoreId(monster.position, 25.0, {monster.id})\n""    else\n""        local newClosestMonster = getClosestMonsterInRangeWithIgnoreId(monster.position, 25.0, {monster.id})\n""        \n""        if newClosestMonster ~= nil and newClosestMonster ~= closestMonster then\n""            if closestMonster.position:distanceSquared(monster.position) > newClosestMonster.position:distanceSquared(monster.position) + 15 * 15 then\n""                closestMonster = newClosestMonster\n""            end\n""        end\n""    end\n""    \n""    if closestMonster ~= nil then\n""        data.closestMonsterIndex = closestMonster.id\n""        local toOther = closestMonster.position - monster.position;\n""        local c = 1.0 - toOther:length() / 30.0\n""            \n""        local cPlayer = (distanceToPlayer - data.playerIgnoreDistance) / 100\n""        if cPlayer < 0.0 then\n""            cPlayer = 0.0\n""        end\n""        local dot = toOther:sideVec():dot(diffToPlayer)\n""        if dot > 0.0 then\n""            angle = angle + 0.6 * c * cPlayer\n""        else\n""            angle = angle - 0.6 * c * cPlayer\n""        end\n""    end\n""    return angle\n""end\n""\n""MonsterMeleeHelper = {}\n""MonsterMeleeHelper.slowBuffId = getGlobalUniqueId()\n""\n""function MonsterMeleeHelper.init(monster) \n""    monster.data.moving = true\n""    monster.data.lastHitTime = -1.0\n""    monster.data.hitInterval = 1.5\n""    monster.data.hitWaitTime = 0.10\n""    monster.data.minDamage = 5\n""    monster.data.maxDamage = 11\n""    monster.data.slowdownAmount = 0.6\n""    monster.data.slowdownDuration = 0.12\n""    monster.data.canHit = true\n""end\n""\n""function MonsterMeleeHelper.buffStats(monster, min)\n""    local data = monster.data\n""    data.hitWaitTime = data.hitWaitTime  * (1.0 - clamp(min * 0.1) * 0.8)\n""    data.hitInterval = data.hitInterval  * (1.0 - clamp(min * 0.1) * 0.4)\n""    data.minDamage = math.floor(data.minDamage * (1.0 + min * 0.2))\n""    data.maxDamage = math.floor(data.maxDamage * (1.0 + min * 0.2))\n""end\n""\n""function MonsterMeleeHelper.onTick(monster)\n""    if data.canHit == false then\n""        return\n""    end\n""    local range = 20.0\n""    if data.moving == false then\n""        range = 30.0\n""    end\n""    \n""    if distanceToPlayer < range + monster.collisionRadius and player.isDead == false then\n""        if data.lastHitTime + data.hitInterval < time then\n""            data.lastHitTime = time\n""            data.moving = false\n""            monster:playAnimation(\"attack\")\n""            data.willHit = true\n""        end\n""        if data.willHit and data.lastHitTime + data.hitWaitTime < time then\n""            data.willHit = false\n""            local damage = player:doDamage(math.floor(data.minDamage + math.random() *(data.maxDamage - data.minDamage)), angleToPlayer)\n""            if damage > 0 then\n""                playSound({path = \"~/resources/sounds/melee_woosh.ogg\", volume = 0.3})\n""                if player.data.noSlowdownOnHit == nil then\n""                    player.maxSpeed:addBuffWithId(MonsterMeleeHelper.slowBuffId, data.slowdownAmount)\n""                    player.maxSpeed:setBuffDuration(MonsterMeleeHelper.slowBuffId, data.slowdownDuration)\n""                    player.maxSpeed:setBuffFadeInFadeOut(MonsterMeleeHelper.slowBuffId, data.slowdownDuration/4, data.slowdownDuration/4)\n""                end\n""            end\n""            \n""            MeleeHitImage.build(monster)\n""        end\n""    else\n""        data.willHit = false\n""        if data.moving == false then\n""            data.moving = true\n""            monster:playAnimation(\"walk\", math.random())\n""        end\n""    end\n""end\n""\n""\n""\n""BulletShooter = {}\n""\n""function BulletShooter.init(monster)\n""    data.bulletMinDamage = 10\n""    data.bulletMaxDamage = 18\n""    data.bulletSpeed = 300\n""    data.bulletRate = 3.0\n""    data.bulletRandom = 0.3\n""    data.shootsBullets = false\n""end\n""\n""function BulletShooter.buffStats(monster, min)\n""    local data = monster.data\n""    \n""    if data.isBoss ~= true and data.cannotShootBullets ~= true and math.random() > 0.98 - clamp(min * 0.2) * 0.05 then\n""        data.shootsBullets = true\n""        data.bulletMinDamage = math.floor(data.bulletMinDamage * (1.0 + min * 0.3))\n""        data.bulletMaxDamage = math.floor(data.bulletMaxDamage * (1.0 + min * 0.4))\n""        \n""        data.bulletRate = data.bulletRate - clamp(min * 0.1) * 2.0\n""        data.bulletRandom = data.bulletRandom - clamp(min * 0.15) * 0.2\n""        data.bulletCount = 1\n""        monster.colorMultiplier:addBuff(Vec4.new(0.8, 0.95, 0.8, 1.0))\n""        monster:modifyDrawLevel(1)\n""    end\n""end\n""\n""function BulletShooter.onTick(monster)\n""    if data.shootsBullets then\n""        if data.bulletTimer == nil then\n""            data.bulletTimer = data.bulletRate + math.random() * 2.0\n""        end\n""        data.bulletTimer = data.bulletTimer - dt\n""        if data.bulletTimer < 0.0 then\n""            data.bulletTimer = data.bulletRate + math.random() * 2.0\n""            \n""            local r = math.random() * ( data.bulletRandom * 2.0 - data.bulletRandom)\n""            for i = 1, monster.data.bulletCount do \n""            \n""                local bullet = addCustomBullet({monsterBullet = true})\n""                bullet.damage = math.floor(math.random(data.bulletMinDamage, data.bulletMaxDamage))\n""                bullet.position = monster.position + monster.moveDir * 6.0\n""                bullet.moveSpeed = data.bulletSpeed\n""                bullet.moveAngle = monster.moveAngle + r  + ( -monster.data.bulletCount * 0.5 + i  - 0.5 ) * math.pi / 14.0\n""                bullet.radius = 6.0\n""                bullet:addRenderableTextureWithSize(\"~/resources/monsters/bullet.png\", Vec2.new(18.0, 18.0))\n""            end\n""        end\n""    end\n""end\n""\n""function addCustomOnTick(monster, tick)\n""    if monster.data.customTick == nil then\n""      monster.data.customTick = {}\n""      monster.data.customTickCount = 0\n""    end\n""    monster.data.customTick[monster.data.customTickCount] = tick\n""    monster.data.customTickCount = monster.data.customTickCount + 1\n""end\n""\n""function customMonsterOnTick(monster)\n""    if monster.data.customTick ~= nil then\n""        for key,tick in pairs( monster.data.customTick) do\n""            tick(monster)\n""        end\n""    end\n""end\n""\n""function addCustomOnKill(monster, kill)\n""    if monster.data.customKill == nil then\n""      monster.data.customKill = {}\n""      monster.data.customKillCount = 0\n""    end\n""    monster.data.customKill[monster.data.customKillCount] = kill\n""    monster.data.customKillCount = monster.data.customKillCount + 1\n""end\n""\n""function customMonsterOnKill(monster, damage, dir, args)\n""    if monster.data.customKill ~= nil then\n""        for key,kill in pairs(monster.data.customKill) do\n""            kill(monster, damage, dir, args)\n""        end\n""    end\n""end\n""\n""function addCustomOnHit(monster, hit)\n""    if monster.data.customHit == nil then\n""      monster.data.customHit = {}\n""      monster.data.customHitCount = 0\n""    end\n""    monster.data.customHit[monster.data.customHitCount] = hit\n""    monster.data.customHitCount = monster.data.customHitCount + 1\n""end\n""\n""function customMonsterOnHit(monster, damage, dir, args)\n""    if monster.data.customHit ~= nil then\n""        for key,hit in pairs(monster.data.customHit) do\n""            damage = hit(monster, damage, dir, args)\n""            if damage <= 0 then\n""                break\n""            end\n""        end\n""    end\n""    return damage\n""end\n""\n""function addCustomShouldHit(monster, shouldHit)\n""    if monster.data.customShouldHit == nil then\n""      monster.data.customShouldHit = {}\n""      monster.data.customShouldHitCount = 0\n""    end\n""    monster.data.customShouldHit[monster.data.customShouldHitCount] = shouldHit\n""    monster.data.customShouldHitCount = monster.data.customShouldHitCount + 1\n""end\n""\n""function customMonsterShouldHit(monster, gun, bullet)\n""    if monster.data.customShouldHit ~= nil then\n""        for key,shouldHit in pairs(monster.data.customShouldHit) do\n""            local r = shouldHit(monster, gun, bullet)\n""            if r == false then\n""                return false\n""            end\n""        end\n""    end\n""    return true\n""end"}, 
{"resources/monsters/spider/data.json", "{\n""  \"type\" : \"monster\",\n""  \"name\": \"Spider\",\n""  \"hitPoint\": 100,\n""  \"size\" : [30.0, 30.0],\n""  \"textureShift\" : [0.0, 0.0],\n""  \"bulletRadius\" : 19.0,\n""  \"collisionRadius\" : 12.0,\n""  \"hasBlood\" : true,\n""  \n""  \"experience\" : 20,\n""  \"score\" : 50,\n""  \n""  \"animations\" : \n""  {\n""    \"stand\" : \n""    {\n""        \"baseFolder\" : \"art\",\n""        \"looped\" : true,\n""        \"frameDuration\" : 0.5,\n""        \"frames\":\n""        [\n""            \"s0.png\"\n""        ]\n""    },\n""    \n""    \"walk\" : \n""    {\n""        \"baseFolder\" : \"art\",\n""        \"looped\" : true,\n""        \"frameDuration\" : 0.1,\n""        \"frames\":\n""        [\n""            \"s0.png\",\n""            \"s1.png\",\n""            \"s2.png\",\n""            \"s1.png\"\n""        ]\n""    },\n""    \n""    \"attack\" : \n""    {\n""        \"baseFolder\" : \"art\",\n""        \"frameDuration\" : 0.1,\n""        \"frames\":\n""        [\n""            \"s0.png\",\n""            \"a0.png\",\n""            \"a1.png\",\n""            \"a2.png\",\n""            \"a3.png\",\n""            \"a1.png\"\n""        ]\n""    }\n""  },\n""  \n""  \"scriptFile\" : \"spider.lua\",\n""  \"scriptName\" : \"Spider\",\n""  \n""  \"bodyParts\" : [\n""    [\"art/part0.png\", 17.0, 0.0],\n""    [\"art/part1.png\", 5.0, 19.5],\n""    [\"art/part2.png\", 5.0, -16.5],\n""    [\"art/part3.png\", -13.0, -18.0],\n""    [\"art/part4.png\", -12.5, 4.5],\n""    [\"art/part5.png\", -4.5, 0.0],\n""    [\"art/part6.png\", -4.0, 17.5]\n""  ],\n""  \n""  \"bodyPartBits\" : [\n""    \"art/bit0.png\", \n""    \"art/bit1.png\", \n""    \"art/bit2.png\", \n""    \"art/bit3.png\", \n""    \"art/bit4.png\", \n""    \"art/bit5.png\", \n""    \"art/bit6.png\", \n""    \"art/bit7.png\", \n""    \"art/bit8.png\"\n""  ],\n""  \n""  \"hitSounds\" : [\n""    \"~/resources/sounds/monster_hit/hit_0.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_1.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_2.ogg\"\n""  ], \n""  \n""  \"killSounds\" : [\n""    \"~/resources/sounds/monster_hit/hit_0.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_1.ogg\", \n""    \"~/resources/sounds/monster_hit/hit_2.ogg\"\n""  ]\n""  \n""  \n""}"}, 
{"resources/monsters/spider/spider.lua", "\n""function Spider.init(monster)\n""    data = monster.data\n""    monster:setScale(math.random() * 0.4 + 0.5)\n""\n""    local diff = player.position - monster.position\n""    \n""    monster.moveSpeed = 0\n""    monster.moveAngle = math.random() * math.pi * 2.0\n""    \n""    monster.pathCheckDistance = 300.0\n""    \n""    data.targetAngle = monster.moveAngle - 0.4 + math.random() * 0.8\n""    data.moving = true\n""    data.lastHitTime = 0.0\n""    \n""    monster.data.moveTimer = -0.5 + math.random() * 2.5\n""    if monster.data.moveTimer > 0.0 then\n""        monster:playAnimation(\"walk\", math.random())\n""    else\n""        monster:playAnimation(\"stand\", math.random())\n""    \n""    end\n""    \n""    StunController.init(monster)\n""    \n""    MonsterGroupHelper.init(monster)\n""    data.playerIgnoreDistance = 30.0\n""    \n""    MonsterMeleeHelper.init(monster)\n""    data.hitWaitTime = 0.1\n""    data.hitInterval = 0.9\n""    data.minDamage = 8\n""    data.maxDamage = 14\n""    \n""    data.maxMoveSpeed = 200.0 * (math.random() * 0.1 + 1.0)\n""    data.maxRotateSpeed = 0.04\n""    data.playerSeeRange = 250.0\n""    \n""    data.tickWaitTime = 0.0\n""    \n""    data.randomShiftAngle = 0.0\n""    \n""    data.tickWaitTime = 0.0\n""    \n""    BulletShooter.init(monster)\n""end\n""\n""function Spider.spawnChanceInMission(missionData, min)\n""    return 0.15 + clamp(min * 0.3) * 0.10\n""end\n"" \n""function Spider.buffStats(monster, min)\n""    StunController.buffStats(monster, min)\n""    MonsterMeleeHelper.buffStats(monster, min)\n""    BulletShooter.buffStats(monster, min)\n""    \n""    monster.data.randomMove = (math.random() > (0.15 + clamp(min * 0.2) * 0.15))\n""    monster.data.playerSeeRange = monster.data.playerSeeRange * (1.0 +  clamp(min * 0.1) * 2.0)\n""    monster.data.maxMoveSpeed =  monster.data.maxMoveSpeed * (1.0 + clamp(min  / 10) * 0.20)\n""    monster.data.maxRotateSpeed =  monster.data.maxRotateSpeed * (1.0 + clamp(min * 0.05) * 1.0)\n""end\n""\n""function Spider.makeBoss(monster, min)\n""    makeBossDefault(monster)\n""end\n""\n""function Spider.onHit(monster, damage, dir, args)\n""    StunController.onHit(monster, damage, dir, args)\n""end\n""\n""function Spider.onTick(monster)\n""    data = monster.data\n""    \n""    data.tickWaitTime = data.tickWaitTime - dt\n""    \n""    diffToPlayer = player.position - monster.position\n""    distanceToPlayer = diffToPlayer:length()\n""    angleToPlayer = diffToPlayer:getAngle()\n""    \n""    if data.tickWaitTime < 0.0 then\n""        data.tickWaitTime = 0.2 + math.random() * 0.2 + lerp(0.0, 1.2, clamp((distanceToPlayer - 100) / 1500))\n""        local posToMove = player.position\n""        \n""        if data.randomMove or player.isDead then\n""            posToMove = data.randomPos\n""            if posToMove == nil or posToMove:distanceSquared(monster.position) < 60 * 60 then\n""                posToMove = getRandomMapPosition()\n""                data.randomPos = posToMove\n""            end\n""                \n""            if distanceToPlayer < data.playerSeeRange and player.isDead == false then\n""                local c = (distanceToPlayer - data.playerSeeRange * 0.8) / data.playerSeeRange * 0.2\n""                if c < 0.0 then\n""                    c = 0.0\n""                end\n""                posToMove = posToMove * c + player.position * (1.0 - c)\n""            end\n""        end\n""        \n""        \n""        posToMove = monster:getPathPos(posToMove)\n""        \n""        diffToMovePos = posToMove - monster.position\n""        distanceToMovePos = diffToMovePos:length()\n""        angleToMovePos = diffToMovePos:getAngle()\n""        \n""        data.targetAngleToMovePos = angleToMovePos\n""        data.posToMove = posToMove\n""    end\n""\n""    MonsterMeleeHelper.onTick(monster)\n""    BulletShooter.onTick(monster)\n""    \n""    if data.moveTimer > 0.0 then\n""        local moveNewAngle = MonsterGroupHelper.fixAngle(monster, data.targetAngleToMovePos)\n""        local cPlayer = clamp((distanceToPlayer - 100.0) / 100.0)\n""        monster.moveAngle = approachAngle(monster.moveAngle, moveNewAngle, (data.maxRotateSpeed * (1.1 - cPlayer) ) * timeScale)\n""        data.moveTimer = data.moveTimer - dt\n""        if data.moveTimer <= 0.0 then\n""            monster:playAnimation(\"stand\", math.random())\n""        end\n""        \n""        if data.moving then\n""            monster.moveSpeed = data.maxMoveSpeed * StunController.getSlowAmount(monster);\n""        else\n""            monster.moveSpeed = 0.0;\n""        end\n""    else\n""        monster.moveSpeed = 0.0\n""        data.moveTimer = data.moveTimer - dt\n""        if data.moveTimer <= -1.0 then\n""            monster:playAnimation(\"walk\", math.random())\n""            monster.data.moveTimer = 0.5 + math.random() * 2.5\n""            data.randomPos = getRandomMapPosition()\n""        end\n""    end\n""end\n"""}, 
{"resources/particles/bulletTrail/data.json", "{\n""  \"type\" : \"particle\",\n""  \"maxLifeTime\" : 3.0,\n""  \"isStrip\" : true,\n""  \n""  \"vertexShader\" : \"shader.vs\",\n""  \"pixelShader\" : \"shader.ps\",\n""  \n""  \"textures\" : \"particle.png\",\n""  \n""  \"scriptFile\" : \"script.lua\",\n""  \"scriptName\" : \"BulletTrailParticle\"\n""}"}, 
{"resources/particles/bulletTrail/script.lua", "\n""\n""function BulletTrailParticle.initSystem()\n""    addAttribute(\"color\", \"vec3\")\n""    addAttribute(\"rotation\", \"float\")\n""    addAttribute(\"initialScale\", \"float\")\n""    addAttribute(\"scaleSpeed\", \"float\")\n""    addAttribute(\"initialAlpha\", \"float\")\n""    addAttribute(\"fadeOutSpeed\", \"float\")\n""    addAttribute(\"startFadeinSpeed\", \"float\")\n""    \n""    addUniform(\"lastBulletTime\", \"float\")\n""end\n""\n""\n""function BulletTrailParticle.setDefaultArgs(args)\n""    if args.color == nil then\n""        args.color = Vec3.new(0.8, 0.6, 0.3)\n""    end\n""    if args.scaleSpeed == nil then\n""        args.scaleSpeed = 5.0\n""    end\n""    if args.initialAlpha == nil then\n""        args.initialAlpha = 0.4\n""    end\n""    if args.fadeOutSpeed == nil then\n""        args.fadeOutSpeed = 2.0\n""    end\n""    if args.startFadeinSpeed == nil then\n""        args.startFadeinSpeed = 100.0\n""    end\n""end\n""\n""function BulletTrailParticle.addParticle(params, pos, args)\n""    params.pos = Vec2.new(pos.x, pos.y)\n""    \n""    params.color = args.color\n""    \n""    params.initialScale = args.initialScale\n""    \n""    params.scaleSpeed = args.scaleSpeed\n""    \n""    params.initialAlpha = args.initialAlpha\n""    \n""    params.fadeOutSpeed = args.fadeOutSpeed\n""    \n""    params.startFadeinSpeed = args.startFadeinSpeed\n""    \n""    params.rotation = params.bullet.moveAngle\n""    \n""    params.lastBulletTime = time - params.particleBeginTime\n""end"}, 
{"resources/particles/critical/data.json", "{\n""  \"type\" : \"particle\",\n""  \"maxLifeTime\" : 3.0,\n""  \n""  \"vertexShader\" : \"shader.vs\",\n""  \"pixelShader\" : \"shader.ps\",\n""  \n""  \"textures\" : \"critical.png\",\n""  \n""  \"scriptFile\" : \"script.lua\",\n""  \"scriptName\" : \"CriticalParticle\"\n""}"}, 
{"resources/particles/critical/script.lua", "\n""\n""function CriticalParticle.initSystem()\n""    addAttribute(\"color\", \"vec3\")\n""    addAttribute(\"moveSpeed\", \"vec2\")\n""    addAttribute(\"initialScale\", \"float\")\n""    addAttribute(\"rotateSpeed\", \"float\")\n""    addAttribute(\"uvStart\", \"vec2\")\n""end\n""\n""function CriticalParticle.setDefaultArgs(args)\n""    args.moveSpeed = 100.0\n""    args.initialScale = 10.0\n""    args.rotateSpeed = 6.0\n""end\n""\n""function CriticalParticle.addParticle(params, pos, args)\n""    params.pos = Vec2.new(pos.x, pos.y)\n""    \n""    local r = 1.0\n""    local g = 1.0\n""    local b = 1.0\n""    local ra = math.random()\n""    if ra < 0.333 then\n""        g = math.random()\n""        b = math.random()\n""    elseif ra < 0.666 then\n""        r = math.random()\n""        b = math.random()\n""    else\n""        r = math.random()\n""        g = math.random()\n""    end\n""    \n""    params.color = Vec3.new(r, g, b)\n""    params.moveSpeed = Vec2.randDir() * (args.moveSpeed * (1.0 + math.random() * 0.5))\n""    \n""    if params.bullet ~= nil then\n""        params.moveSpeed = params.moveSpeed + params.bullet.moveVelocity\n""    end\n""    \n""    params.initialScale = args.initialScale * (1.0 + math.random())\n""    params.rotateSpeed = args.rotateSpeed * (1.0 + math.random())\n""    \n""    if math.random() > 0.5 then\n""        params.rotateSpeed = -params.rotateSpeed\n""    end\n""    \n""    params.uvStart = Vec2.new(math.floor(math.random() * 4) / 4.0, math.floor(math.random() * 4) / 4.0)\n""    \n""end"}, 
{"resources/particles/explosionFire/data.json", "{\n""    \"type\" : \"particle\",\n""    \"maxLifeTime\" : 5.0,\n""    \n""    \"vertexShader\" : \"shader.vs\",\n""    \"pixelShader\" : \"shader.ps\",\n""    \n""    \"textures\" : [\"fire2.png\"],\n""    \n""    \"scriptFile\" : \"script.lua\",\n""    \"scriptName\" : \"ExplosionFireParticle\",\n""    \n""    \"needsLuaRandoms\" : false,\n""    \n""    \"uniformRandoms\" : [\n""        {\n""            \"name\" : \"moveSpeed\",\n""            \"type\" : \"angular\",\n""            \"min\"  : 20,\n""            \"max\"  : 150.0\n""        },\n""        {\n""            \"name\" : \"uvStart\",\n""            \"type\" : \"vector\"\n""        },\n""        {\n""            \"name\" : \"uvSize\",\n""            \"type\" : \"vector\",\n""            \"min\"  : [0.45, 0.45],\n""            \"max\"  : [0.55, 0.55]\n""        },\n""        {\n""            \"name\" : \"color\",\n""            \"type\" : \"linear\"\n""        },\n""        {\n""            \"name\" : \"uvShift\",\n""            \"type\" : \"angular\",\n""            \"min\"  : 0.1,\n""            \"max\"  : 0.15\n""        }\n""    ]\n""\n""}"}, 
{"resources/particles/explosionFire/script.lua", "\n""\n""function ExplosionFireParticle.initSystem()\n""    addAttribute(\"moveSpeed\", \"vec2\")\n""    addAttribute(\"uvStart\", \"vec2\")\n""    addAttribute(\"uvSize\", \"vec2\")\n""    addAttribute(\"uvShift\", \"vec2\")\n""    addAttribute(\"color\", \"float\")\n""    addAttribute(\"maxTime\", \"float\")\n""    addAttribute(\"maxScale\", \"float\")\n""end\n""\n"""}, 
{"resources/particles/flame/data.json", "{\n""    \"type\" : \"particle\",\n""    \"maxLifeTime\" : 3.0,\n""    \n""    \"vertexShader\" : \"shader.vs\",\n""    \"pixelShader\" : \"shader.ps\",\n""    \n""    \"textures\" : \"flame.png\",\n""    \n""    \"scriptFile\" : \"script.lua\",\n""    \"scriptName\" : \"FlameParticle\"\n""}"}, 
{"resources/particles/flame/script.lua", "\n""\n""function FlameParticle.initSystem()\n""    addAttribute(\"color\", \"vec3\")\n""    addAttribute(\"moveSpeed\", \"vec2\")\n""    addAttribute(\"initialScale\", \"float\")\n""    addAttribute(\"rotateSpeed\", \"float\")\n""    addAttribute(\"lifeTime\", \"float\")\n""    addAttribute(\"uvStart\", \"vec2\")\n""end\n""\n""function FlameParticle.setDefaultArgs(args)\n""    args.moveSpeed = 100.0\n""    if args.initialScale ~= nil then\n""        args.initialScale = 12.0\n""    end\n""    args.rotateSpeed = 6.0\n""    args.lifeTime = 10.0\n""end\n""\n""function FlameParticle.addParticle(params, pos, args)\n""    params.pos = Vec2.new(pos.x, pos.y)\n""    \n""    params.color = Vec3.new(1.0, 1.0 - math.random() * 0.2, 1.0 - math.random() * 0.2)\n""    \n""    \n""    if params.bullet ~= nil then\n""        params.moveSpeed = params.bullet.moveDir * 10.0\n""    end\n""    \n""    params.moveSpeed = params.moveSpeed * (1.0 + math.random() * 0.1)\n""    params.moveSpeed:rotateBy(-0.05 + math.random() * 0.1)\n""    \n""    if args.initialScale == nil then\n""        args.initialScale = 12 --todo fix why\n""    end\n""    if params.initialScale == nil then\n""        params.initialScale = 1.0\n""    end\n""    params.initialScale = params.initialScale * args.initialScale * (1.0 + math.random())\n""    params.rotateSpeed = args.rotateSpeed * (1.0 + math.random())\n""    \n""    params.particleBeginTime = params.particleBeginTime + math.random() * dt\n""    \n""    if params.lifeTime == nil then\n""        params.lifeTime = 10.0\n""    end\n""    \n""    if math.random() > 0.5 then\n""        params.rotateSpeed = -params.rotateSpeed\n""    end\n""    \n""    params.uvStart = Vec2.new(math.floor(math.random() * 12) / 12.0, math.floor(math.random() * 6) / 6.0)\n""    \n""end"}, 
{"resources/particles/flareTrail/data.json", "{\n""  \"type\" : \"particle\",\n""  \"maxLifeTime\" : 3.0,\n""  \n""  \"vertexShader\" : \"shader.vs\",\n""  \"pixelShader\" : \"shader.ps\",\n""  \n""  \"textures\" : \"particle.png\",\n""  \n""  \"scriptFile\" : \"script.lua\",\n""  \"scriptName\" : \"FlareTrailParticle\"\n""}"}, 
{"resources/particles/flareTrail/script.lua", "\n""\n""function FlareTrailParticle.initSystem()\n""    addAttribute(\"color\", \"float\")\n""    addAttribute(\"moveSpeed\", \"vec2\")\n""    addAttribute(\"initialScale\", \"float\")\n""    addAttribute(\"scaleSpeed\", \"float\")\n""    addAttribute(\"initialAlpha\", \"float\")\n""    addAttribute(\"fadeOutSpeed\", \"float\")\n""end\n""\n""\n""function FlareTrailParticle.addParticle(params, pos)\n""    params.pos = Vec2.new(pos.x, pos.y)\n""    \n""    params.color = 0.2 + math.random() * 0.3\n""    \n""    params.moveSpeed = Vec2.randDir() * (2.0 + math.random() * 8.0)\n""    \n""    params.initialScale = 3.0 + math.random() * 2.0\n""    \n""    params.scaleSpeed = 4.0 + math.random() * 3.0\n""    \n""    params.initialAlpha = 0.5 + math.random() * 0.5\n""    \n""    params.fadeOutSpeed = 3.8 + math.random() * 0.2\n""    \n""    params.texture = FlareTrailParticle.basePath .. \"particle.png\"\n""    \n""end"}, 
{"resources/particles/plasmaTrail/data.json", "{\n""  \"type\" : \"particle\",\n""  \"maxLifeTime\" : 3.0,\n""  \n""  \"vertexShader\" : \"shader.vs\",\n""  \"pixelShader\" : \"shader.ps\",\n""  \n""  \"textures\" : \"particle.png\",\n""  \n""  \"scriptFile\" : \"script.lua\",\n""  \"scriptName\" : \"PlasmaTrailParticle\"\n""}"}, 
{"resources/particles/plasmaTrail/script.lua", "\n""\n""function PlasmaTrailParticle.initSystem()\n""    addAttribute(\"color\", \"vec3\")\n""    addAttribute(\"initialScale\", \"float\")\n""    addAttribute(\"scaleSpeed\", \"float\")\n""    addAttribute(\"initialAlpha\", \"float\")\n""    addAttribute(\"fadeOutSpeed\", \"float\")\n""end\n""\n""\n""function PlasmaTrailParticle.setDefaultArgs(args)\n""    if args.color == nil then\n""        args.color = Vec3.new(1.0, 1.0, 1.0)\n""    end\n""    if args.initialScale == nil then\n""        args.initialScale = 6.0\n""    end\n""    if args.scaleSpeed == nil then\n""        args.scaleSpeed = -10.0 \n""    end\n""    if args.initialAlpha == nil then\n""        args.initialAlpha = 0.6\n""    end\n""    if args.fadeOutSpeed == nil then\n""        args.fadeOutSpeed = 2.0\n""    end\n""end\n""\n""function PlasmaTrailParticle.addParticle(params, pos, args)\n""    params.pos = Vec2.new(pos.x, pos.y)\n""    \n""    params.color = args.color\n""    params.initialScale = args.initialScale\n""    params.scaleSpeed = args.scaleSpeed\n""    params.initialAlpha = args.initialAlpha\n""    params.fadeOutSpeed = args.fadeOutSpeed\n""end"}, 
{"resources/particles/railgunTrail/data.json", "{\n""  \"type\" : \"particle\",\n""  \"maxLifeTime\" : 3.0,\n""  \n""  \"vertexShader\" : \"shader.vs\",\n""  \"pixelShader\" : \"shader.ps\",\n""  \n""  \"textures\" : \"particle.png\",\n""  \n""  \"scriptFile\" : \"script.lua\",\n""  \"scriptName\" : \"RailGunParticle\"\n""}"}, 
{"resources/particles/railgunTrail/script.lua", "\n""\n""function RailGunParticle.initSystem()\n""    addAttribute(\"color\", \"float\")\n""    addAttribute(\"moveSpeed\", \"vec2\")\n""    addAttribute(\"initialScale\", \"float\")\n""    addAttribute(\"scaleSpeed\", \"float\")\n""    addAttribute(\"initialAlpha\", \"float\")\n""    addAttribute(\"fadeOutSpeed\", \"float\")\n""    addAttribute(\"rotation\", \"float\")\n""end\n""\n""\n""function RailGunParticle.addParticle(params, pos)\n""    params.pos = Vec2.new(pos.x, pos.y)\n""    \n""    params.color = 0.2 + math.random() * 0.3\n""    \n""    params.moveSpeed = params.bullet.moveDir:sideVec()\n""    params.moveSpeed = params.moveSpeed * (3.0 + math.random() * 2.0)\n""    if math.random() < 0.5 then\n""        params.moveSpeed = -params.moveSpeed\n""    end\n""    \n""    params.rotation = params.bullet.moveAngle\n""    \n""    params.initialScale = 5.0\n""    params.initialScale = 5.0\n""    \n""    params.scaleSpeed = 10.0 + math.random() * 1.0\n""    \n""    params.initialAlpha = 2.0\n""    \n""    params.fadeOutSpeed = 4.0 + math.random() * 0.3\n""    \n""end"}, 
{"resources/particles/rainbowstrip/data.json", "{\n""  \"type\" : \"particle\",\n""  \"maxLifeTime\" : 1.0,\n""  \"isStripLaser\" : true,\n""  \n""  \"vertexShader\" : \"shader.vs\",\n""  \"pixelShader\" : \"shader.ps\",\n""  \n""  \"scriptFile\" : \"script.lua\",\n""  \"scriptName\" : \"RainbowStrip\"\n""}"}, 
{"resources/particles/rainbowstrip/script.lua", "\n""\n""function RainbowStrip.initSystem()\n""end\n""\n""\n""function RainbowStrip.setDefaultArgs(args)\n""end\n""\n""function RainbowStrip.addParticle(params, pos, args)\n""\n""end"}, 
{"resources/particles/rocketSmoke/data.json", "{\n""    \"type\" : \"particle\",\n""    \"maxLifeTime\" : 3.0,\n""    \n""    \"vertexShader\" : \"shader.vs\",\n""    \"pixelShader\" : \"shader.ps\",\n""    \n""    \"textures\" : \"particle.png\",\n""    \n""    \"scriptFile\" : \"script.lua\",\n""    \"scriptName\" : \"RocketSmokeParticle\",\n""    \n""    \"needsLuaRandoms\" : false,\n""    \n""    \"uniformRandoms\" : [\n""        {\n""            \"name\" : \"moveSpeed\",\n""            \"type\" : \"angular\",\n""            \"min\"  : 2.0,\n""            \"max\"  : 10.0\n""        },\n""        {\n""            \"name\" : \"color\",\n""            \"type\" : \"linear\",\n""            \"min\"  : 0.2,\n""            \"max\"  : 0.5\n""        },\n""        {\n""            \"name\" : \"initialScale\",\n""            \"type\" : \"linear\",\n""            \"min\"  : 4.0,\n""            \"max\"  : 6.0\n""        },\n""        {\n""            \"name\" : \"scaleSpeed\",\n""            \"type\" : \"linear\",\n""            \"min\"  : 6.0,\n""            \"max\"  : 12.0\n""        },\n""        {\n""            \"name\" : \"initialAlpha\",\n""            \"type\" : \"linear\",\n""            \"min\"  : 0.5,\n""            \"max\"  : 1.0\n""        },\n""        {\n""            \"name\" : \"fadeOutSpeed\",\n""            \"type\" : \"linear\",\n""            \"min\"  : 0.4,\n""            \"max\"  : 0.8\n""        }\n""    ]\n""}"}, 
{"resources/particles/rocketSmoke/script.lua", "\n""\n""function RocketSmokeParticle.initSystem()\n""    addAttribute(\"color\", \"float\")\n""    addAttribute(\"moveSpeed\", \"vec2\")\n""    addAttribute(\"initialScale\", \"float\")\n""    addAttribute(\"scaleSpeed\", \"float\")\n""    addAttribute(\"initialAlpha\", \"float\")\n""    addAttribute(\"fadeOutSpeed\", \"float\")\n""end\n"""}, 
{"resources/particles/rocketSmokeBig/data.json", "{\n""    \"type\" : \"particle\",\n""    \"maxLifeTime\" : 1.0,\n""    \n""    \"vertexShader\" : \"shader.vs\",\n""    \"pixelShader\" : \"shader.ps\",\n""    \n""    \"textures\" : \"particle.png\",\n""    \n""    \"scriptFile\" : \"script.lua\",\n""    \"scriptName\" : \"RocketSmokeParticleBig\",\n""    \n""    \"needsLuaRandoms\" : false,\n""    \n""    \"uniformRandoms\" : [\n""        {\n""            \"name\" : \"moveSpeed\",\n""            \"type\" : \"angular\",\n""            \"min\"  : 2.0,\n""            \"max\"  : 10.0\n""        },\n""        {\n""            \"name\" : \"color\",\n""            \"type\" : \"linear\",\n""            \"min\"  : 0.2,\n""            \"max\"  : 0.5\n""        },\n""        {\n""            \"name\" : \"fadeOutSpeed\",\n""            \"type\" : \"linear\",\n""            \"min\"  : 1.0,\n""            \"max\"  : 1.4\n""        },\n""        {\n""            \"name\" : \"initialScale\",\n""            \"type\" : \"linear\",\n""            \"min\"  : 8.0,\n""            \"max\"  : 10.0\n""        },\n""        {\n""            \"name\" : \"scaleSpeed\",\n""            \"type\" : \"linear\",\n""            \"min\"  : 12.0,\n""            \"max\"  : 14.0\n""        },\n""        {\n""            \"name\" : \"initialAlpha\",\n""            \"type\" : \"linear\",\n""            \"min\"  : 0.5,\n""            \"max\"  : 1.0\n""        }\n""    ]\n""}\n"""}, 
{"resources/particles/rocketSmokeBig/script.lua", "\n""\n""function RocketSmokeParticleBig.initSystem()\n""    addAttribute(\"color\", \"float\")\n""    addAttribute(\"moveSpeed\", \"vec2\")\n""    addAttribute(\"initialScale\", \"float\")\n""    addAttribute(\"scaleSpeed\", \"float\")\n""    addAttribute(\"initialAlpha\", \"float\")\n""    addAttribute(\"fadeOutSpeed\", \"float\")\n""end\n"""}, 
{"resources/particles/striptest/data.json", "{\n""  \"type\" : \"particle\",\n""  \"maxLifeTime\" : 10.0,\n""  \"isStripLaser\" : true,\n""  \n""  \"vertexShader\" : \"shader.vs\",\n""  \"pixelShader\" : \"shader.ps\",\n""  \n""  \"scriptFile\" : \"script.lua\",\n""  \"scriptName\" : \"StripTestParticle\"\n""}"}, 
{"resources/particles/striptest/script.lua", "\n""\n""function StripTestParticle.initSystem()\n""end\n""\n""\n""function StripTestParticle.setDefaultArgs(args)\n""end\n""\n""function StripTestParticle.addParticle(params, pos, args)\n""\n""end"}, 
{"resources/perks/critical/critical.lua", "\n""function CriticalBullets.init()\n""end\n""\n""function CriticalBullets.onAddGunBullet(gun, bullet)\n""    if math.random() < 0.2 and bullet.data.cannotBeBuffed ~= true then\n""        bullet.damage = bullet.damage * 4\n""        bullet.radius = bullet.radius * 2\n""        bullet:addTrailParticle(\"CriticalParticle\", Vec2.new(0.0, 0.0), 30.0, {})\n""        bullet.meshScale = bullet.meshScale * 1.5\n""        bullet:updateDrawable()\n""    end\n""end\n"""}, 
{"resources/perks/critical/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Critical Bullets\",\n""  \"description\": \"Your bullets randomly become critical bullets and deal more damage. Plus they are shiny!\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"critical.lua\",\n""  \"scriptName\" : \"CriticalBullets\"\n""}"}, 
{"resources/perks/dodger/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Dodger\",\n""  \"description\": \"You have a chance to dodge damage.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"dodger.lua\",\n""  \"scriptName\" : \"Dodger\"\n""}"}, 
{"resources/perks/dodger/dodger.lua", "\n""function Dodger.init()\n""\n""end\n""\n""function Dodger.onPlayerDamaged(damage, dir, params)\n""    if damage <= 0 then\n""        return damage\n""    end\n""    if params.doNotDodge ~= true and math.random() < 0.1 then\n""        return -1\n""    end\n""    return damage\n""end\n"""}, 
{"resources/perks/double_shoot/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Double Tap\",\n""  \"description\": \"You sometimes shoot two bullets in succession.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"double_shoot.lua\",\n""  \"scriptName\" : \"DoubleShoot\"\n""}"}, 
{"resources/perks/double_shoot/double_shoot.lua", "\n""function DoubleShoot.init()\n""end\n""\n""function DoubleShoot.onAddGunBullet(gun, bullet)\n""    if gun.data.timeToNextShoot ~= nil and player.data.lastDoubleShoot + 0.5 < time and math.random() < 0.25 and bullet.data.cannotBeBuffed ~= true and time > player.data.lastDoubleShootCheck then\n""        gun.data.timeToNextShoot = math.min(time + 0.15, gun.data.timeToNextShoot)\n""        player.data.lastDoubleShoot = time\n""    end\n""    player.data.lastDoubleShootCheck = time\n""end\n""\n""function DoubleShoot.reset()\n""    player.data.lastDoubleShoot = time\n""    player.data.lastDoubleShootCheck = time\n""end\n"""}, 
{"resources/perks/experience/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Experience Boost\",\n""  \"description\": \"You gain a big percentage of experience for your next level.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"experience.lua\",\n""  \"scriptName\" : \"ExperiencePerk\",\n""  \"maxLevel\" : -1\n""}"}, 
{"resources/perks/experience/experience.lua", "\n""function ExperiencePerk.init(level)\n""    player:gainExperience(math.floor((player.experienceForNextLevel - player.experience) * 0.8))\n""end\n"""}, 
{"resources/perks/experience_boost/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Experience Boost\",\n""  \"description\": \"Monsters give you more experience.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"experience_boost.lua\",\n""  \"scriptName\" : \"ExperienceBoostPerk\"\n""}"}, 
{"resources/perks/experience_boost/experience_boost.lua", "\n""function ExperienceBoostPerk.init()\n""    player.monsterExperienceMultiplier:addBuff(1.5)\n""end\n"""}, 
{"resources/perks/explosion_on_reload/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Explosion on Reload\",\n""  \"description\": \"You create a small explosion when your clip becomes empty.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"explosion_on_reload.lua\",\n""  \"scriptName\" : \"ExplosionOnReload\"\n""}"}, 
{"resources/perks/explosion_on_reload/explosion_on_reload.lua", "\n""\n""\n""function ExplosionOnReload.init()\n""end\n""\n""function ExplosionOnReload.onReload(gun)\n""    if gun:hasAmmo() == false then\n""        addExplosion(player.position, 100.0, 200.0, 80, 140)\n""        playSound({path = \"~/resources/sounds/explode.ogg\", volume = 0.5})\n""    end\n""end\n"""}, 
{"resources/perks/extra_bullets/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Extra Clip Size\",\n""  \"description\": \"Your guns have more ammo.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"extra_bullets.lua\",\n""  \"scriptName\" : \"ExtraBullets\"\n""}"}, 
{"resources/perks/extra_bullets/extra_bullets.lua", "\n""function ExtraBullets.init(level)\n""    player.clipCountMultiplier:addBuff(1.2)\n""end\n""\n"""}, 
{"resources/perks/extra_perk/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"More Perks on Level Up\",\n""  \"description\": \"You have a bigger list of perks to select when you level up.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"extra_perk.lua\",\n""  \"scriptName\" : \"ExtraPerk\",\n""  \"maxLevel\" : 2,\n""  \"hideLevelText\" : true\n""}"}, 
{"resources/perks/extra_perk/extra_perk.lua", "\n""function ExtraPerk.init(level)\n""    missionData.perkPerLevel = missionData.perkPerLevel + 1\n""end\n""\n"""}, 
{"resources/perks/faster_bullets/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Faster Bullets\",\n""  \"description\": \"Your bullets are faster.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"faster_bullets.lua\",\n""  \"scriptName\" : \"FasterBullets\"\n""}"}, 
{"resources/perks/faster_bullets/faster_bullets.lua", "\n""function FasterBullets.init()\n""    player.bulletSpeedMultiplier:addBuff(1.35)\n""end\n"""}, 
{"resources/perks/faster_movement/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Long Distance Runner\",\n""  \"description\": \"Your move slightly faster.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"faster_movement.lua\",\n""  \"scriptName\" : \"FasterMovement\"\n""}"}, 
{"resources/perks/faster_movement/faster_movement.lua", "\n""function FasterMovement.init()\n""    player.maxSpeed:addBuff(1.25)\n""end\n"""}, 
{"resources/perks/faster_reload/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Faster Reload\",\n""  \"description\": \"You reload your gun at a faster rate.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"faster_reload.lua\",\n""  \"scriptName\" : \"FasterReload\",\n""  \"maxLevel\" : 3\n""}"}, 
{"resources/perks/faster_reload/faster_reload.lua", "\n""function FasterReload.init(level)\n""    local amount = 1.0 + level * 0.1\n""    if level == 1 then\n""        FasterReload.id = player.reloadSpeedMultiplier:addBuff(amount)\n""    else\n""        player.reloadSpeedMultiplier:setBuffAmount(FasterReload.id, amount)\n""    end\n""end\n""\n"""}, 
{"resources/perks/faster_reload_stationary/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Stationary Reload\",\n""  \"description\": \"Your reloading speed increases while you are not moving.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"faster_reload_stationary.lua\",\n""  \"scriptName\" : \"FasterReloadStationary\"\n""}"}, 
{"resources/perks/faster_reload_stationary/faster_reload_stationary.lua", "\n""FasterReloadStationary.id = getGlobalUniqueId()\n""\n""function FasterReloadStationary.init()\n""    FasterReloadStationary.isFast = false\n""end\n""\n""\n""function FasterReloadStationary.onTick()\n""    local speed = player.moveSpeed\n""    if speed < 0.1 then\n""        if FasterReloadStationary.isFast == false then\n""            FasterReloadStationary.isFast = true\n""            player.reloadSpeedMultiplier:addBuffWithId(id, 4.0)\n""            player.reloadSpeedMultiplier:setBuffFadeInFadeOut(0.1, -1.0)\n""        end\n""    else\n""        if FasterReloadStationary.isFast then\n""            FasterReloadStationary.isFast = false\n""            player.reloadSpeedMultiplier:addBuffWithId(id, 1.0)\n""        end\n""    end\n""end"}, 
{"resources/perks/faster_shoot/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Increased Rate of Fire\",\n""  \"description\": \"Your have an increased rate of fire.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"faster_shoot.lua\",\n""  \"scriptName\" : \"FasterShoot\"\n""}"}, 
{"resources/perks/faster_shoot/faster_shoot.lua", "\n""function FasterShoot.init()\n""    player.shootSpeedMultiplier:addBuff(0.8)\n""end\n"""}, 
{"resources/perks/heal_up/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Heal Up\",\n""  \"description\": \"You fully heal yourself.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"heal_up.lua\",\n""  \"scriptName\" : \"HealUp\",\n""  \"maxLevel\" : -1\n""}"}, 
{"resources/perks/heal_up/heal_up.lua", "\n""function HealUp.init()\n""    player.data.healingUp = true\n""    player.data.lastHeal = time - 5.0\n""end\n""\n""\n""function HealUp.onTick()\n""    if player.data.healingUp and player.data.lastHeal - 0.1 < time then\n""        player.data.lastHeal = time\n""        if player.hitPoints < player.maxHitPoints then\n""            player:doHeal(3)\n""        else \n""            player.data.healingUp = false\n""        end\n""    end\n""end\n"""}, 
{"resources/perks/iron_skin/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Iron Skin\",\n""  \"description\": \"Your skin reduces the damage you take.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"iron_skin.lua\",\n""  \"scriptName\" : \"IronSkin\",\n""  \"maxLevel\" : 3\n""}"}, 
{"resources/perks/iron_skin/iron_skin.lua", "\n""function IronSkin.init(level)\n""    IronSkin.level = 6 + (level - 1) * 3\n""end\n""\n""function IronSkin.onPlayerDamaged(damage, dir, params)\n""    if damage <= 0 then\n""        return damage\n""    end\n""    if params.doNotReduce ~= true and damage > 0 then\n""        return damage - IronSkin.level\n""    end\n""    return damage\n""end\n"""}, 
{"resources/perks/less_spread/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Less Spread\",\n""  \"description\": \"Your guns have less spread.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"less_spread.lua\",\n""  \"scriptName\" : \"LessSpread\"\n""}"}, 
{"resources/perks/less_spread/less_spread.lua", "\n""function LessSpread.init(level)\n""    player.gunSpreadMultiplier:addBuff(0.6)\n""end\n""\n"""}, 
{"resources/perks/longer_bonuses/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Longer bonuses\",\n""  \"description\": \"Your bonuses last longer.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"longer_bonuses.lua\",\n""  \"scriptName\" : \"LongerBonuses\"\n""}"}, 
{"resources/perks/longer_bonuses/longer_bonuses.lua", "\n""function LongerBonuses.init()\n""    player.data.bonusDurationMultiplier = player.data.bonusDurationMultiplier * 1.3\n""end\n""\n""function LongerBonuses.reset()\n""    player.data.bonusDurationMultiplier = 1.0\n""end\n"""}, 
{"resources/perks/no_slowdown_on_hit/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"No Slowdown On Hit\",\n""  \"description\": \"Monsters no longer slow you down when they hit.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"no_slowdown_on_hit.lua\",\n""  \"scriptName\" : \"NoSlowdownOnHit\"\n""}"}, 
{"resources/perks/no_slowdown_on_hit/no_slowdown_on_hit.lua", "\n""function NoSlowdownOnHit.init()\n""    player.data.noSlowdownOnHit = true\n""end\n"""}, 
{"resources/perks/nuke_on_death/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Final Revenge\",\n""  \"description\": \"You get your revenge on death.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"nuke_on_death.lua\",\n""  \"scriptName\" : \"NukeOnDeath\"\n""}"}, 
{"resources/perks/nuke_on_death/nuke_on_death.lua", "\n""function NukeOnDeath.init()\n""end\n""\n""function NukeOnDeath.onPlayerDied()\n""    local object = addGameObject(\"NukeOnDeathObject\")\n""    addExplosion(player.position, 700.0, 400.0, 550, 850)\n""    playSound({path = \"~/resources/sounds/explode.ogg\"})\n""    object.data.lastHomingTime = time\n""    object.data.homingCount = 0\n""    object.data.nukeSpawning = true\n""    object.data.position = player.position\n""end\n""\n""NukeOnDeathObject = {}\n""\n""function NukeOnDeathObject.onTick(gameObject)\n""    local data = gameObject.data\n""    if data.nukeSpawning then\n""        if data.homingCount < 8 and data.lastHomingTime + 0.05 < time then\n""            data.lastHomingTime = time\n""            local bullet = HomingOrb.spawn(nil, data.position + Vec2.randDir() * (math.random() * 5.0 + 5.0))\n""            if bullet ~= nil then\n""                bullet.damage = bullet.damage * 5\n""                bullet.moveSpeed = bullet.moveSpeed * (math.random() * 1.0 + 1.0)\n""                bullet.lifeTime = 1.0\n""            end\n""            data.homingCount = data.homingCount + 1\n""        end\n""    end    \n""end\n"""}, 
{"resources/perks/piercing_bullets/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Piercing Bullets\",\n""  \"description\": \"Some of your bullets gain ability to pierce enemies.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"piercing.lua\",\n""  \"scriptName\" : \"PiercingBullets\"\n""}"}, 
{"resources/perks/piercing_bullets/piercing.lua", "\n""function PiercingBullets.init()\n""end\n""\n""function PiercingBullets.onAddGunBullet(gun, bullet)\n""    if math.random() < 0.2 and bullet.penetrateCount < 5 and bullet.penetrateCount >= 0 and bullet.data.cannotBeBuffed ~= true then\n""        bullet.penetrateCount = 5\n""        bullet:addTrailParticle(\"RailGunParticle\", Vec2.new(0.0, 0.0), 7.0, {})\n""    end\n""end\n"""}, 
{"resources/perks/random_weapon/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Random Weapon\",\n""  \"description\": \"Get a random weapon.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"random_weapon.lua\",\n""  \"scriptName\" : \"RandomWeapon\",\n""  \"maxLevel\" : -1\n""}"}, 
{"resources/perks/random_weapon/random_weapon.lua", "\n""function RandomWeapon.init(index)\n""    while true do\n""        local gun = getGunAtIndex(math.floor(math.random() * getGunCount()))\n""        if player.gun == nil or player.gun.name ~= gun.name then\n""            if gun.ultimate == false then\n""                player:setGun(gun)\n""                break\n""            end\n""        end\n""    end\n""end\n""\n"""}, 
{"resources/perks/regen/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Regeneration\",\n""  \"description\": \"You slowly regenerate your missing health.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"regen.lua\",\n""  \"scriptName\" : \"Regen\",\n""  \"maxLevel\" : 3\n""}"}, 
{"resources/perks/regen/regen.lua", "\n""function Regen.init(level)\n""    player.data.regenTimer = 1.75 - (level - 1) * 0.25\n""    player.data.lastRegenTick = time\n""end\n""\n""\n""function Regen.onTick()\n""    if player.data.lastRegenTick + player.data.regenTimer < time then\n""        player.data.lastRegenTick = time\n""        player:doHeal(1)        \n""    end\n""end\n"""}, 
{"resources/perks/scavenger/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Scavenger\",\n""  \"description\": \"Getting bonuses or guns also recovers your health a little.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"scavenger.lua\",\n""  \"scriptName\" : \"Scavenger\"\n""}"}, 
{"resources/perks/scavenger/scavenger.lua", "\n""function Scavenger.init(level)\n""end\n""\n""\n""function Scavenger.onPlayerPickedGun(gun)\n""    player:doHeal(5)\n""end\n""\n""function Scavenger.onPlayerPickedBonus(bonus, pos)\n""    player:doHeal(5)\n""end\n""\n"""}, 
{"resources/perks/sprint/data.json", "{\n""  \"type\" : \"perk\",\n""  \"name\": \"Sprint on Damage\",\n""  \"description\": \"You make a short sprint when you get damaged.\",\n""  \"iconFile\" : \"\",\n""  \"scriptFile\" : \"sprint.lua\",\n""  \"scriptName\" : \"Sprint\"\n""}"}, 
{"resources/perks/sprint/sprint.lua", "\n""Sprint.buffId = getGlobalUniqueId()\n""\n""function Sprint.init()\n""    player.data.sprintOldHp = player.hitPoints\n""    player.data.sprinting = false\n""end\n""\n""\n""function Sprint.onTick()\n""    if player.data.sprintOldHp > player.hitPoints then\n""        local id = player.maxSpeed:addBuffWithId(Sprint.buffId, 2.0)\n""        player.maxSpeed:getBuffInfo(id):setBuffDuration(0.7)\n""        player.maxSpeed:getBuffInfo(id):setBuffFadeInFadeOut(0.0, 0.35)\n""    end\n""\n""    player.data.sprintOldHp = player.hitPoints\n""end\n"""}, 
{"resources/player/assault/data.json", "\n""{\n""    \"type\" : \"player\",\n""    \n""    \"name\" : \"assault\",\n""\n""    \"body\": \"body.png\",\n""    \n""    \"hitpoint\" : 100,\n""    \n""    \"scale\": 1.0,\n""    \n""    \"bulletRadius\": 10.0,\n""    \"collisionRadius\": 15.0,\n""    \n""    \"acceleration\": 800.0,\n""    \"decceleration\": 1000.0,\n""    \n""    \"minRotationSpeed\": 3.0,\n""    \"maxRotationSpeed\": 10.0,\n""    \n""    \"maxSpeed\" : 170.0,\n""    \"maxRotateSpeed\" : 6.0,\n""    \n""    \"bodyScale\" : [0.21, 0.21],\n""    \"bodyShift\" : [0.0, 0.12],\n""    \n""    \"gunFireAnim\": \"shoot\",\n""    \n""    \"gunFireScale\" : [7.0, 7.0],\n""    \"gunFireShift\" : [7.5, 34.0],\n""    \n""    \"bulletStartShift\" : [7.5, 28.0],\n""    \n""    \"legSpeed\" : 2.0,\n""    \n""    \"legMinScale\" : 0.2,\n""    \"legMaxScale\" : 1.05,\n""    \n""    \"legMaxRotate\" : 0.4,\n""    \n""    \"leftLegFront\": \"left_front.png\",\n""    \"rightLegFront\": \"right_front.png\",\n""    \n""    \"leftLegback\": \"left_back.png\",\n""    \"rightLegback\": \"right_back.png\"\n""    \n""}"}, 
{"resources/player/gun_fire/data.json", "\n""{\n""    \"type\" : \"animation\",\n""    \"name\" : \"shoot\",\n""\n""    \"frameDuration\" : 0.1,\n""    \n""    \"frames\":\n""    [\n""        [\"f0.png\", 0.05],\n""        \"f1.png\",\n""        [\"f2.png\", 0.05]\n""    ]\n""}"}, 
{"resources/ultimates/banana_bomb/banana_anim.json", "{\n""  \"type\" : \"animation_template\",\n""  \"name\": \"BananaAnimation\",\n""  \"size\" : [12.5, 8.0],\n""  \n""  \"animations\" : \n""  {\n""    \"stand\" : \n""    {\n""        \"looped\" : true,\n""        \"frameDuration\" : 0.5,\n""        \"frames\":\n""        [\n""            \"b0.png\"\n""        ]\n""    },\n""    \n""    \"rotate\" : \n""    {\n""        \"looped\" : true,\n""        \"frameDuration\" : 0.1,\n""        \"frames\":\n""        [\n""            \"b0.png\",\n""            \"b1.png\",\n""            \"b2.png\",\n""            \"b3.png\",\n""            \"b4.png\",\n""            \"b3.png\",\n""            \"b2.png\",\n""            \"b1.png\"\n""        ]\n""    }\n""  }\n""}"}, 
{"resources/ultimates/banana_bomb/banana_bomb.lua", "\n""function BananaBomb.init(gun)\n""    gun.crosshairDistance = 550.0\n""    gun.data.shooting = -1.0\n""end\n""\n""function BananaBomb.onTick(gun)\n""    local data = gun.data\n""    if gun.isTriggered and gun:hasAmmo() and data.shooting < 0.0 then\n""        gun:consumeAmmo()\n""        data.shooting = 0.5\n""        \n""        local gameObject = addGameObject(\"BananaBombObject\", { i = 0, dir = player.aimDir } )\n""        gameObject.data.throwDuration = gameObject.data.throwDuration * 0.8\n""        gameObject:setPosition(player.position)\n""        playSound({path = BananaBomb.basePath .. \"swish.ogg\"})\n""        \n""    end\n""    \n""    if data.shooting >= 0.0 then\n""        data.shooting = data.shooting - dt\n""        \n""    end\n""end\n""\n""function BananaBomb.spawnChance(gun)\n""    return ultimateSpawnChance()\n""end\n""\n""BananaBombObject = {}\n""\n""\n""function BananaBombObject.init(gameObject, args)\n""    local renderable = gameObject:addAnimation(\"BananaAnimation\")\n""    renderable:playAnimation(\"rotate\", math.random() * 0.8)\n""    gameObject.data.renderable = renderable\n""    \n""    gameObject.data.startTime = time\n""    gameObject.data.i = args.i\n""    gameObject.data.throwDuration = math.random() * 0.8 + 0.8\n""    if args.dir ~= nil then\n""        gameObject.data.speed = args.dir\n""        gameObject.data.throwDuration = gameObject.data.throwDuration * 0.6\n""    else\n""        gameObject.data.speed = Vec2.fromAngle(math.random() * math.pi * 2.0)\n""    end\n""    gameObject.data.speed = gameObject.data.speed * (math.random() * 60.0 + 100.0 - args.i * 15)\n""    gameObject:setRotation(math.random() * math.pi * 2.0)\n""    BananaBombObject.onTick(gameObject)\n""end\n""\n""function BananaBombObject.onTick(gameObject)\n""    local data = gameObject.data\n""    local t = time - data.startTime\n""    local tnormal = t / data.throwDuration\n""    \n""    if tnormal > 1.0 then\n""        gameObject.toBeRemoved = true\n""        \n""        addExplosion(gameObject:getPosition(), 80.0, 100.0, 70, 150, 0.0, false, nil, true)\n""        if BananaBombObject.lastExplosionSound == nil or time - BananaBombObject.lastExplosionSound > 0.1 then\n""            playSound({path = \"~/resources/sounds/explode.ogg\"})\n""            BananaBombObject.lastExplosionSound = time\n""        end\n""        \n""        if data.i < 3 then\n""            local r = math.random(2) + 3 - data.i\n""            for i = 1,r do \n""                local child = addGameObject(\"BananaBombObject\", { i = data.i + 1 } )\n""                child:setPosition(gameObject:getPosition())\n""            end\n""        end\n""    end\n""    \n""    local m = data.i / 3.0\n""    \n""    gameObject:setRotation(gameObject:getRotation() + dt * 5.0)\n""    gameObject:setPosition(gameObject:getPosition() + data.speed * dt * (1.0 - m * 0.5))\n""    \n""    local s = (0.6 + math.abs(math.sin(tnormal * math.pi)) * 0.4)\n""    gameObject:setScale(Vec2:new(s, s))\n""    \n""    s = 0.6 + tnormal * 0.3\n""    data.renderable:setColor(Vec4:new(s, s, s, 1.0))\n""end\n"""}, 
{"resources/ultimates/banana_bomb/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Banana Bomb\",\n""  \"icon\" : \"icon.png\",\n""  \n""  \"scriptFile\" : \"banana_bomb.lua\",\n""  \"scriptName\" : \"BananaBomb\",\n""  \n""  \"maxAmmo\" : 5,\n""  \"reloadTime\" : 15,\n""  \n""  \"ultimate\" : true,\n""  \n""  \"showShootAnimation\" : false\n""}"}, 
{"resources/ultimates/big_laser/big_laser.lua", "\n""function BigLaser.init(gun)\n""    gun.spreadAngle = 0.0\n""    gun.crosshairDistance = 550.0\n""    gun.data.maxRangeUniform = gun.laser:addUniformFloat(\"maxRange\", 450.0)\n""    gun.data.timeUniform = gun.laser:addUniformFloat(\"time\", 0.0)\n""    ShootTimer.initGun(gun, 0.05)\n""    gun.data.shooting = -1.0\n""end\n""\n""function BigLaser.onTick(gun)\n""    gun.laser:setVisible(false)\n""    local data = gun.data\n""    \n""    if data.shooting <= 0.0 then\n""        if gun.isTriggered and gun:hasAmmo() then\n""            gun:consumeAmmo()\n""            data.shooting = 2.5\n""            \n""            local buff = player.maxRotateSpeed:addBuff(0.1)\n""            player.maxRotateSpeed:setBuffDuration(buff, data.shooting + 0.3)\n""            player.maxRotateSpeed:setBuffFadeInFadeOut(buff, 0.05, 0.3)\n""        end\n""    else\n""        player.canFireNextFrame = false\n""        data.shooting = data.shooting - dt\n""        gun.laser:setVisible(true)\n""        local range = 430.0\n""        local collision = getCollisionForRay(player.gunPos + player.aimDir * 25.0, player.aimDir * (range - 25.0), 5, CollisionFlags.NoBulletCollision)\n""        if collision >= 0.0 then\n""            range = collision + 20\n""        end\n""        gun.laser:setLength(range)\n""        gun.laser:addUniformFloat(\"time\", time)\n""        if ShootTimer.checkGun(gun) then\n""            runForEachMonsterOnLine(player.gunPos, player.aimDir * (range), 15, {}, function(monster)\n""                local args = {doNotStun = true}\n""                monster:doDamageWithArgs(gun:getRandomDamage(), player.aimDir, args)\n""            end)\n""        end\n""    end\n""end\n""\n""function BigLaser.spawnChance(gun)\n""    return ultimateSpawnChance()\n""end"}, 
{"resources/ultimates/big_laser/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Gluon Gun\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"laser.png\",\n""  \"bulletSize\" : [15.0, 15.0],\n""  \"bulletRadius\" : 4.0,\n""  \"bulletSpeed\" : 350.0,\n""  \"bulletDamage\" : [30, 45],\n""  \n""  \"scriptFile\" : \"big_laser.lua\",\n""  \"scriptName\" : \"BigLaser\",\n""  \n""  \"maxAmmo\" : 5,\n""  \"reloadTime\" : 15,\n""  \n""  \"firingSoundContinuous\" : true,\n""  \"firingSound\" : {\n""    \"path\" : \"laser.ogg\",\n""    \"volume\" : 0.65,\n""    \"speed\" : 0.9\n""  },\n""  \"firingSoundFadein\" : 0.3,\n""\n""  \"ultimate\" : true,\n""  \n""  \"isLaser\" : true,\n""  \"laserTexture\" : \"laser.png\",\n""  \"laserShader\" : \"laser\",\n""  \n""  \"bulletLevelModifier\" : 3,\n""  \n""  \"laserThickness\" : 480.0,\n""  \n""  \"laserBeginShift\" : 10.0,\n""  \"laserBeginWidth\" : 40.0,\n""  \n""  \"laserEndShift\" : 0.0,\n""  \"laserEndWidth\" : 100.0,\n""  \"showShootAnimation\" : false\n""}"}, 
{"resources/ultimates/black_hole/black_hole.lua", "BlackHole.buffId = getGlobalUniqueId()\n""\n""function BlackHole.init(gun)\n""    gun.data.shooting = -1.0\n""    gun.data.started = false\n""    \n""    gun.data.checkAchievement = true\n""    gun.data.achievementProcess = 0\n""end\n""\n""function BlackHole.onTick(gun)\n""    local data = gun.data\n""    local duration = 6.0 * player.data.bonusDurationMultiplier\n""    \n""    if data.started == false then\n""        if gun.isTriggered and gun:hasAmmo() then\n""            gun:consumeAmmo()\n""            if gun.data.postprocess == nil then\n""                gun.data.postprocess = addPostProcess(\"resources/post_process/blackhole.ps\")\n""            end\n""            data.shooting = 0.0\n""            data.started = true\n""            data.postprocess:setEnabled(true)\n""            data.ppos = player.position + player.aimDir * (player.crosshairDistance + 50.0)    \n""            data.bodyIndex = addCircleCollider(data.ppos, 1.0)\n""            setColliderFlags(data.bodyIndex, CollisionFlags.NoMonsterCollision + CollisionFlags.NoBulletCollision)\n""            \n""            data.bulletBodyIndex = addCircleCollider(data.ppos, 1.0)\n""            setColliderFlags(data.bulletBodyIndex, CollisionFlags.NoMonsterCollision + CollisionFlags.NoPlayerCollision)\n""            playSound({path = BlackHole.basePath .. \"black_hole.ogg\", position = data.ppos, volume = 1.2})\n""            gun.data.achievementProcess = 0\n""        end\n""    else\n""        data.shooting = data.shooting + dt\n""        if data.shooting > duration then\n""            data.started = false\n""            data.postprocess:setEnabled(false)\n""            removeCollider(data.bodyIndex)\n""            removeCollider(data.bulletBodyIndex)\n""        else\n""            local t = 1.0\n""            if data.shooting < 1.0  then\n""                t = data.shooting\n""            elseif data.shooting > duration - 1.0 then\n""                t = duration - data.shooting\n""            end\n""        \n""            data.postprocess:setShaderWeight(t)\n""            local v = convertToScreenPosition(data.ppos)\n""            gun.data.postprocess:addUniformVec2(\"uRelBlackHolePos\", v)\n""            \n""            local killRange = 30 * t\n""            local moveRange = killRange + 130 * (0.1 + t * 0.9)\n""            \n""            local playerRadius = 40.0\n""            if moveRange > playerRadius then\n""                relocateCircleCollider(data.bodyIndex, data.ppos, moveRange - playerRadius)\n""            end\n""            local bulletRadius = 70.0\n""            if moveRange > bulletRadius then\n""                relocateCircleCollider(data.bulletBodyIndex, data.ppos, moveRange - bulletRadius)\n""            end\n""            \n""            local killCount = 0\n""            runForEachMonsterInRadius( data.ppos, moveRange + 30.0, {}, function(monster)\n""                local d = monster.position:distance(data.ppos) - monster.bulletRadius\n""                if d < killRange and monster.canGetOneShooted then\n""                    monster:killSelf()\n""                    killCount = killCount + 1\n""                elseif d < moveRange then\n""                    local m = (moveRange - d) * t / (moveRange - killRange)\n""                    local a = (monster.position - data.ppos):getAngle()\n""                    local toHole = -Vec2.fromAngle(a)\n""                    local toSide = -toHole:sideVec()\n""                    monster:addKnockback(toSide * m * 800.0 + toHole * m * 300.0, -1.0)\n""                end\n""            end)\n""        \n""            if data.checkAchievement then\n""                if hasAchievement( \"ACH_BLACK_HOLE\" ) or player.isDead or missionData.isSurvival ~= true then\n""                    data.checkAchievement = false\n""                end\n""                data.achievementProcess = data.achievementProcess + killCount\n""                \n""                if data.achievementProcess >= 30 then\n""                    addAchievement( \"ACH_BLACK_HOLE\" )\n""                    data.checkAchievement = false\n""                end\n""            end\n""            \n""            moveRange = moveRange + 30\n""            local d = player.position:distance(data.ppos)\n""            if d < moveRange then\n""                local m = (moveRange - d) * t / (moveRange - killRange)\n""                local a = (player.position - data.ppos):getAngle()\n""                local toHole = -Vec2.fromAngle(a)\n""                local toSide = -toHole:sideVec()\n""                player:addKnockback(toSide * m * 800.0 + toHole * m * 200.0, -1.0)\n""            end\n""        end\n""    end\n""end\n""\n""function BlackHole.spawnChance(gun)\n""    return ultimateSpawnChance()\n""end\n"""}, 
{"resources/ultimates/black_hole/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Black Hole\",\n""  \"icon\" : \"icon.png\",\n""  \n""  \"scriptFile\" : \"black_hole.lua\",\n""  \"scriptName\" : \"BlackHole\",\n""  \n""  \"maxAmmo\" : 5,\n""  \"reloadTime\" : 15,\n""  \n""  \"ultimate\" : true,\n""  \n""  \"showShootAnimation\" : false\n""}"}, 
{"resources/ultimates/phoenix_dive/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Phoenix Dive\",\n""  \"icon\" : \"icon.png\",\n""  \n""  \"scriptFile\" : \"phoenix_dive.lua\",\n""  \"scriptName\" : \"PhoenixDive\",\n""  \n""  \"maxAmmo\" : 5,\n""  \"reloadTime\" : 15,\n""  \n""  \"ultimate\" : true,\n""  \n""  \"showShootAnimation\" : false\n""}"}, 
{"resources/ultimates/phoenix_dive/phoenix_dive.lua", "PhoenixDive.buffId = getGlobalUniqueId()\n""\n""function PhoenixDive.init(gun)\n""    gun.data.shooting = -1.0\n""    gun.data.gameObject = addGameObject(\"FlamethrowerObject\")\n""    gun.data.gameObject:setLevel(RenderableLevel.player + 2)\n""    gun.data.particle = gun.data.gameObject:addParticle(\"FlameParticle\", {})\n""    gun.data.started = false\n""    \n""    gun.data.checkAchievement = true\n""    gun.data.achievementProcess = 0\n""    gun.data.invulTime = -0.1\n""end\n""\n""function PhoenixDive.onTick(gun)\n""    local data = gun.data\n""    \n""    if data.started == false then\n""        if gun.isTriggered and gun:hasAmmo() then\n""            gun:consumeAmmo()\n""            data.shooting = 0.6\n""            \n""            local buff = player.maxSpeed:addBuff(0.0)\n""            player.maxSpeed:setBuffDuration(buff, data.shooting)\n""            buff = player.maxRotateSpeed:addBuff(0.0)\n""            player.maxRotateSpeed:setBuffDuration(buff, data.shooting)\n""            buff = player.colorMultiplier:addBuff(Vec4.fromColor(0xFFFF8888))\n""            player.colorMultiplier:setBuffDuration(buff, data.shooting)\n""            player.colorMultiplier:setBuffFadeInFadeOut(buff, 0.1, 0.1)\n""            data.moveAngle = player.aimAngle\n""            \n""            data.particleTime = 0.0\n""            data.hitTime = 0.0\n""            data.started = true\n""            playSound({path = PhoenixDive.basePath ..\"dive.ogg\", volume = 0.9})\n""            player:addKnockback(Vec2.fromAngle(data.moveAngle) * 500.0, data.shooting)\n""            data.achievementProcess = 0 \n""        end\n""    else\n""        data.shooting = data.shooting - dt\n""    end\n""    \n""    if data.started then\n""        player.canFireNextFrame = false\n""        data.invulTime = time + 0.5\n""        if data.shooting < 0.0 then\n""            data.started = false\n""            addExplosion(player.position, 160.0, 230.0, 250, 350, 0.1)\n""            playSound({path = \"~/resources/sounds/explode.ogg\"})\n""        end\n""        \n""        local count = 0\n""        data.hitTime = data.hitTime - dt\n""        if data.hitTime < 0.0 then\n""            data.hitTime = data.hitTime + 0.02\n""            \n""            runForEachMonsterInRadius(player.position, 50.0, {}, function(monster)\n""                local args = {doNotStun = true}\n""                local toMonster = monster.position - player.position\n""                toMonster:normalize()\n""                local side = player.aimDir:sideVec()\n""                monster:doDamageWithArgs(8 + math.random(8), toMonster, args)\n""                if toMonster:dot(side) > 0.0 then\n""                    monster:addKnockback(side * 30.0, 0.35)\n""                else\n""                    monster:addKnockback(-side * 30.0, 0.35)\n""                end\n""                \n""                if monster.data.flamethrowerObject == nil then\n""                    monster.data.flamethrowerObject = addGameObject(\"BurnMonsterObject\")\n""                    monster.data.flamethrowerObject.data.monster = monster\n""                    monster.data.flamethrowerObject.data.damageMin = 4\n""                    monster.data.flamethrowerObject.data.damageVar = 6\n""                end\n""                if monster.data.countedForPhoenixDiveAchievement == nil then\n""                    monster.data.countedForPhoenixDiveAchievement = true\n""                    count = count + 1\n""                end\n""                monster.data.flamethrowerObject.data.count = 4\n""            end)\n""        end\n""        \n""        \n""        if data.checkAchievement then\n""            if hasAchievement( \"ACH_PHOENIX_DIVE\" ) or player.isDead or missionData.isSurvival ~= true then\n""                data.checkAchievement = false\n""            end\n""            data.achievementProcess = data.achievementProcess + count\n""            \n""            if data.achievementProcess >= 10 then\n""                addAchievement( \"ACH_PHOENIX_DIVE\" )\n""                data.checkAchievement = false\n""            end\n""        end\n""        \n""        data.particleTime = data.particleTime - dt\n""        while data.particleTime < 0.0 do\n""            data.particleTime = data.particleTime + 0.02\n""            for i = 1,4 do\n""                data.particle:addParticle(player.position + Vec2.randDir() * 20.0 * (math.random() - 0.5), \n""                {   \n""                    moveSpeed = Vec2.fromAngle(data.moveAngle + (math.random() - 0.5) * math.pi  ) * 100.0,\n""                    initialScale = 2.0\n""                })\n""            end\n""        end\n""    end\n""    \n""end\n""\n""function PhoenixDive.onPlayerDamaged(gun, damage, dir, params)\n""    if gun.data.invulTime > time then\n""        return -1\n""    end\n""    return damage\n""end\n""\n""function PhoenixDive.spawnChance(gun)\n""    return ultimateSpawnChance()\n""end\n"""}, 
{"resources/ultimates/rocket_barrage/data.json", "{\n""  \"type\" : \"gun\",\n""  \"name\": \"Rocket Barrage\",\n""  \"icon\" : \"icon.png\",\n""  \"bulletTexture\" : \"bullet.png\",\n""  \"bulletSize\" : [4.0, 4.0],\n""  \"bulletRadius\" : 14.0,\n""  \"bulletSpeed\" : 350.0,\n""  \"bulletDamage\" : [40, 70],\n""  \n""  \"maxAmmo\" : 5,\n""  \"reloadTime\" : 15,\n""  \n""  \"firingSound\" : \"rocket.ogg\",\n""  \n""  \"ultimate\" : true,\n""  \n""  \"scriptFile\" : \"rocket_barrage.lua\",\n""  \"scriptName\" : \"RocketBarrage\"\n""}"}, 
{"resources/ultimates/rocket_barrage/rocket_barrage.lua", "\n""function RocketBarrage.init(gun)\n""    gun.spreadAngle = 0.0\n""    gun.crosshairDistance = 350.0\n""    gun.data.shooting = -1.0\n""    gun.newBulletData.cannotBeBuffed = true\n""end\n""\n""\n""function RocketBarrage.onTick(gun)\n""    local data = gun.data\n""    \n""    if data.shooting <= 0.0 then\n""        if gun.isTriggered and gun:hasAmmo()  then\n""            gun:consumeAmmo()\n""            data.shooting = 2.0\n""            data.shootDt = 0.0\n""            local buff = player.maxRotateSpeed:addBuff(0.06)\n""            player.maxRotateSpeed:setBuffDuration(buff, data.shooting + 0.3)\n""            player.maxRotateSpeed:setBuffFadeInFadeOut(buff, 0.05, 0.3)\n""            local buff = player.maxSpeed:addBuff(0.3)\n""            player.maxSpeed:setBuffDuration(buff, data.shooting)\n""            player.maxSpeed:setBuffFadeInFadeOut(buff, 0.1, 0.1)\n""        end\n""    else\n""        player.canFireNextFrame = false\n""        data.shooting = data.shooting - dt\n""        data.shootDt = data.shootDt + dt * 80\n""        player:addKnockback(-player.aimDir * 30.0, -1.0)\n""        while data.shootDt > 0.0 do\n""            data.shootDt = data.shootDt - 1\n""            local bullet = gun:addBullet()\n""            bullet.damage = math.floor(150 + math.random() * 40)\n""            bullet.moveSpeed = 400\n""            bullet.lifeTime = 0.2 + math.random() * 0.2\n""            bullet.moveSpeed = 750 + math.random() * 200.0\n""            local spread = 0.3\n""            local maxSpeed = 1.8\n""            bullet.data.rotateSpeed = maxSpeed * (math.random() * 0.5 + 0.5)\n""            if math.random() < 0.5 then\n""                bullet.data.rotateSpeed = -bullet.data.rotateSpeed\n""            end\n""            bullet.moveAngle = bullet.moveAngle + spread * (math.random() * 2.0 - 1.0)\n""    \n""            bullet.data.particleT = math.random() * 0.1\n""            \n""            local c = math.random() * 0.3 + 0.7\n""        end\n""    end\n""end\n""\n""function RocketBarrage.onBulletHit(gun, bullet, monster)\n""    if monster ~= nil then\n""        addExplosion(bullet.position, 80.0, 180.0, 20, 30, 0.0, false, nil, true)\n""    end\n""end\n""\n""function RocketBarrage.onBulletTick(gun, bullet)\n""    bullet.moveAngle = bullet.moveAngle + bullet.data.rotateSpeed * dt\n""    local a = 1.0 - (time - bullet.startTime - bullet.lifeTime + 0.1) / 0.5\n""    bullet:setColor(Vec4:new(1.0, 1.0, 1.0, a))\n""    \n""    if bullet.data.particleT ~= nil then\n""        bullet.data.particleT = bullet.data.particleT - dt\n""        if bullet.data.particleT < 0.0 then\n""            bullet.data.particleT = nil\n""            bullet:addTrailParticle(\"RocketSmokeParticleBig\", Vec2.new(0.0, 0.0), 7.0, {})\n""        end\n""    end\n""end\n""\n""\n""function RocketBarrage.spawnChance(gun)\n""    return ultimateSpawnChance()\n""end\n"""}, 
};
std::vector<std::string> autoLoads = {
"resources/bonuses/bullet_crazy/data.json",
"resources/bonuses/circle_fire/data.json",
"resources/bonuses/double_exp/data.json",
"resources/bonuses/experience/data.json",
"resources/bonuses/explosion/data.json",
"resources/bonuses/extra_1000/data.json",
"resources/bonuses/extra_5000/data.json",
"resources/bonuses/faster_movement/data.json",
"resources/bonuses/homing/data.json",
"resources/bonuses/invincibility/data.json",
"resources/bonuses/level_up/data.json",
"resources/bonuses/medikit/data.json",
"resources/bonuses/quad_damage/data.json",
"resources/bonuses/reflex_boost/data.json",
"resources/bonuses/slow_monsters/data.json",
"resources/colliders/collider_data.json",
"resources/guns/bumerang_gun/data.json",
"resources/guns/flamethrower/data.json",
"resources/guns/flaregun/data.json",
"resources/guns/frost_laser/data.json",
"resources/guns/laser/data.json",
"resources/guns/laser_machinegun/data.json",
"resources/guns/laser_pistol/data.json",
"resources/guns/machinegun/data.json",
"resources/guns/minigun/data.json",
"resources/guns/pistol/data.json",
"resources/guns/plasmagun/data.json",
"resources/guns/pulsegun/data.json",
"resources/guns/railgun/data.json",
"resources/guns/rainbow_gun/data.json",
"resources/guns/rifle/data.json",
"resources/guns/rocketlauncher/data.json",
"resources/guns/shotgun/data.json",
"resources/guns/shrinkgun/data.json",
"resources/guns/splitgun/data.json",
"resources/guns/uzi/data.json",
"resources/missions/narsie_fight/data.json",
"resources/missions/narsie_fight/narsie/data.json",
"resources/missions/survival/data.json",
"resources/missions/tutorial/data.json",
"resources/monsters/alien/data.json",
"resources/monsters/egg/data.json",
"resources/monsters/spider/data.json",
"resources/particles/bulletTrail/data.json",
"resources/particles/critical/data.json",
"resources/particles/explosionFire/data.json",
"resources/particles/flame/data.json",
"resources/particles/flareTrail/data.json",
"resources/particles/plasmaTrail/data.json",
"resources/particles/railgunTrail/data.json",
"resources/particles/rainbowstrip/data.json",
"resources/particles/rocketSmoke/data.json",
"resources/particles/rocketSmokeBig/data.json",
"resources/particles/striptest/data.json",
"resources/perks/critical/data.json",
"resources/perks/dodger/data.json",
"resources/perks/double_shoot/data.json",
"resources/perks/experience/data.json",
"resources/perks/experience_boost/data.json",
"resources/perks/explosion_on_reload/data.json",
"resources/perks/extra_bullets/data.json",
"resources/perks/extra_perk/data.json",
"resources/perks/faster_bullets/data.json",
"resources/perks/faster_movement/data.json",
"resources/perks/faster_reload/data.json",
"resources/perks/faster_reload_stationary/data.json",
"resources/perks/faster_shoot/data.json",
"resources/perks/heal_up/data.json",
"resources/perks/iron_skin/data.json",
"resources/perks/less_spread/data.json",
"resources/perks/longer_bonuses/data.json",
"resources/perks/no_slowdown_on_hit/data.json",
"resources/perks/nuke_on_death/data.json",
"resources/perks/piercing_bullets/data.json",
"resources/perks/random_weapon/data.json",
"resources/perks/regen/data.json",
"resources/perks/scavenger/data.json",
"resources/perks/sprint/data.json",
"resources/player/assault/data.json",
"resources/player/gun_fire/data.json",
"resources/ultimates/banana_bomb/banana_anim.json",
"resources/ultimates/banana_bomb/data.json",
"resources/ultimates/big_laser/data.json",
"resources/ultimates/black_hole/data.json",
"resources/ultimates/phoenix_dive/data.json",
"resources/ultimates/rocket_barrage/data.json",
};
