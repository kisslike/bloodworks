#version 150

in float t;
in float y;


uniform float uCurrentTime;

vec3 addSin(in vec3 color, in float hoffset, in float t, in float t2)
{
    float i = 0;
    i = abs( sin( (  + ( -t + 30) * 40 + 20.0 + hoffset * 10) / 10 ) * 0.8 * t2 * (hoffset * 0.2 + 0.8) - y );

    
    i = (1 - i * 4) / 20 + (1 - i * 10);
    i = clamp(i, 0.0, 1.0);
    return i * color;
}


out vec4 outColor;

void main(void) 
{
    float t2 = min(t, 1.0);
    
    float timescale = 2.0;
	vec3 c = vec3(0, 0, 0);
    c += addSin(vec3(1.0, 0, 0),      sin(t * 0.4934 ), t * 1.1 + 3.9 + uCurrentTime, t2);
    c += addSin(vec3(0.0, 1.0, 0.0), sin(t * 0.645 ), t * 1.4 + 0.5 + uCurrentTime, t2);
    c += addSin(vec3(0.0, 0.0, 1.0), sin(t * 0.735 ), t * 1.2 + 1.25 + uCurrentTime, t2);
    c += addSin(vec3(1.0, 1.0, 0.0), -sin(t * 0.2245 ), t * 1.5 + 3.31 + uCurrentTime, t2);
    c += addSin(vec3(0.0, 1.0, 1.0), sin(t * 0.7234 ), t * 1.25 + 2.7 + uCurrentTime, t2);
    c += addSin(vec3(1.0, 0.0, 1.0), -sin(t * 0.64525 ), t * 0.4   + 4.5 + uCurrentTime, t2);
    
    float a = max(c.r, c.g);
    a = max(a, c.b);
    a = min(a, 0.7) * t2;
    a *= clamp( 3.5 - t * 0.4, 0.0, 1.0 );
	outColor = vec4(c , a );
    
}
